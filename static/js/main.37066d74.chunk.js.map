{"version":3,"sources":["redux/totalTime/TotalTime.type.js","redux/totalTime/TotalTime.action.js","logic/arrayToSeconds.js","components/totalTargetTime/TotalTargetTime.component.jsx","redux/breakButton/BreakButton.type.js","redux/breakButton/BreakButton.action.js","components/breakButtons/BreakButtons.component.jsx","redux/task/Task.type.js","redux/task/Task.action.js","components/addedTask/AddedTask.component.jsx","logic/getDate.js","components/toDoTaskContainer/ToDoTaskContainer.component.jsx","components/completedTaskListContainer/CompletedTaskListContainer.component.jsx","components/remainderContainer/RemainderContainer.component.jsx","redux/submitData/SubmitData.type.js","redux/submitData/SubmitData.action.js","components/finishDayButton/FinishDayButton.component.jsx","redux/notes/notes.type.js","components/notes/notes.component.jsx","redux/notes/notes.action.js","components/notesContainer/NotesContainer.component.jsx","doughnutChart/DoughnutChart.component.jsx","components/timeComparisonBarChart/timeComparisonBarChart.js","components/timeTrackLineChart/TimeTrackLineChart.component.jsx","components/header/Header.component.jsx","pages/homePage/Homepage.component.jsx","App.js","reportWebVitals.js","redux/totalTime/TotalTime.reducer.js","redux/breakButton/BreakButton.reducer.js","redux/task/Task.reducer.js","redux/submitData/SubmitData.reducer.js","redux/notes/notes.reducer.js","redux/root-reducer.js","redux/breakButton/BreakButton.sagas.js","redux/task/Task.saga.js","components/remainderNotification/RemainderNotification.component.jsx","redux/totalTime/TotalTime.sagas.js","redux/submitData/SubmitData.saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["TotalTimeType","SAVE_TOTAL_TIME","START_COUNTDOWN","PAUSE_COUNTDOWN","SET_COUNTDOWN_TRUE","UPDATE_COUNTDOWN","REMOVE_ALL_TIME","UPDATE_LAST_RUN_TIME","startCountDown","seconds","type","pauseCountDown","setCountDownTrue","removeAllTime","updateLastRunSec","SecondsToArray","timeInSec","timeArr","totalSeconds","parseInt","hour","Math","floor","hourSec","minutes","strhour","toString","substr","strMinutes","strSeconds","TotalTargetTime","dispatch","useDispatch","useSelector","state","TotalTimeReducer","key","totalTime","taskList","TaskReducer","useState","timeState","setTimeState","useEffect","validatePrevValue","interval","setInterval","length","clearInterval","undefined","getFullDate","handleChange","event","target","name","value","document","getElementById","disabled","focus","blur","clearTxt","newDate","Date","date","getDate","month","getMonth","year","getFullYear","submitTime","ArrayToSeconds","payload","cls","displayCondition","Object","keys","className","placeholder","onFocus","id","maxlength","onChange","onfocus","Button","variant","color","startIcon","onClick","BreakButtonType","START_BREAK","PAUSE_BREAK","GET_BREAK_COLOR","startBreak","breakName","BreakButtons","breakData","BreakButtonReducer","totalTimeReducer","totalTimeKey","dispatchAction","buttonName","Tooltip","title","isActive","style","fill","fontSize","TaskType","ADD_TASK","REMOVE_TASK","PAUSE_TASK","START_TASK","COMPLETED_TASK","ADD_BREAK_TASK","REMOVE_ALL_TASK","COMPLETE_ALL_TASK","ADD_REMAINDER","START_REMAINDER","startTask","taskName","originalTimeLocal","removeAllTask","startRemainder","AddedTask","completed","bgColor","paused","percentage","time","fillerStyle","height","width","backgroundColor","textAlign","borderRadius","transition","toUpperCase","placement","arrow","position","display","right","top","left","fontWeight","slice","pauseTask","completeTask","removeTask","GetDate","GetTimeInSeconds","getTime","GetDateInFormat","ToDoTaskContainer","setTaskName","addTask","map","isCompleted","CompletedTaskListContainer","RemainderContainer","remainderName","setRemainderName","setTime","repeat","setRepeat","e","utils","DateFnsUtils","TimePicker","dateTime","ampm","Checkbox","inputProps","checked","toFixed","addRemainder","timeRemaining","SubmitDataType","SUBMIT_ALL_DATA_START","SUBMIT_ALL_DATA_INPROGRESS","submitDataStart","submitDataInProgerss","taskReducer","breakButtonReducer","FinishDayButton","setTimeout","window","location","reload","NotesType","TOGGLE_NOTE_DISPLAY","ADD_NOTE","REMOVE_NOTE","Notes","noteMsg","noteKey","noteId","NotesContainer","NoteReducer","noteDisplay","notes","noteEntered","setNoteEntered","noteText","DoughnutChart","SubmitDataReducer","data","Doughnutdata","chartLabels","taskHour","bgColors","borderColors","obj","taskData","k","push","labels","datasets","label","borderColor","borderWidth","hoverOffset","TimeComparisonBarChart","totalTimeData","originalTimeKey","originalTime","actualTime","TimeTrackerLineChart","dataLine","xAxis","dataSet","originalTimeData","tension","TotalTimeData","dt","actualDate","substring","keyLocal","origTimeKey","Header","HomePage","IconButton","aria-label","Fab","clasName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","countDownProgress","lastUpdatedTime","instagram","faceBook","youtube","call","messaging","sleep","excercise","tea","food","releaseAll","miscelaneous","currentActive","INITIAL_STATUS","activeTask","notification","remainderLastUpdate","persistConfig","storage","whiteList","rootReducer","combineReducers","action","fullDate","prevActive","btnName","k1","remainderData","timeDiff","breakButtonData","persistReducer1","persistReducer","startBreakInTask","startBreakSaga","select","breakButtonSatate","put","takeEvery","startTaskEffects","pauseTaskEffects","completeTaskEffects","toast","configure","updateCountDown","startTaskTime","d","hr","getHours","min","getMinutes","sec","getSeconds","alert","info","POSITION","TOP_RIGHT","autoClose","Audio","play","startSubmitProcess","startSubmit","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.37066d74.chunk.js","sourcesContent":["const TotalTimeType={\n    SAVE_TOTAL_TIME:'SAVE_TOTAL_TIME',\n    START_COUNTDOWN:'START_COUNTDOWN',\n    PAUSE_COUNTDOWN:'PAUSE_COUNTDOWN',\n    SET_COUNTDOWN_TRUE:'SET_COUNTDOWN_TRUE',\n    UPDATE_COUNTDOWN:'UPDATE_COUNTDOWN',\n    REMOVE_ALL_TIME:'REMOVE_ALL_TIME',\n    UPDATE_LAST_RUN_TIME:'UPDATE_LAST_RUN_TIME',\n}\nexport default TotalTimeType; ","import TotalTimeType from './TotalTime.type';\n\n\nexport const saveTotalTime=(timeInSec)=>{\n    return({\n        type: TotalTimeType.SAVE_TOTAL_TIME,\n        payload: timeInSec\n        })\n}\n\nexport const startCountDown=(seconds)=>{\n    return{\n        type:TotalTimeType.START_COUNTDOWN,\n        seconds:seconds,\n    }\n}\n\nexport const pauseCountDown=()=>{\n    return{\n        type:TotalTimeType.PAUSE_COUNTDOWN,\n    }\n}\n\nexport const setCountDownTrue=()=>{\n    return {\n        type:TotalTimeType.SET_COUNTDOWN_TRUE,\n    }\n}\n\nexport const updateCountDown=()=>{\n    return{\n        type:TotalTimeType.UPDATE_COUNTDOWN\n    }\n}\n\nexport const removeAllTime=()=>{\n    return{\n        type:TotalTimeType.REMOVE_ALL_TIME,\n    }\n}\n\nexport const updateLastRunSec=(seconds)=>{\n    return{\n        type:TotalTimeType.UPDATE_LAST_RUN_TIME,\n        seconds:seconds,\n    }\n}","\nexport const ArrayToSeconds=(timeArr)=>{\n    const hh=(parseInt(timeArr[0])*10)+parseInt(timeArr[1]);\n    const mm=(parseInt(timeArr[2])*10)+parseInt(timeArr[3]);\n    const ss=(parseInt(timeArr[4])*10)+parseInt(timeArr[5]);\n    let seconds=(hh*3600)+(mm*60)+(ss);\n    //console.log(seconds)\n    return(seconds)\n}\n\nexport const SecondsToArray=(timeInSec)=>{\n    let timeArr=[0,0,0,0,0,0];\n    if(timeInSec<0){\n        timeInSec=timeInSec*-1;\n        timeArr[6]='-';\n    }\n    let totalSeconds=parseInt(timeInSec);\n    let hour=Math.floor(totalSeconds/3600);\n    //console.log(hour)\n    let hourSec=hour*3600;\n    let minutes=Math.floor((totalSeconds-(hourSec))/60);\n    let seconds=totalSeconds-(hourSec)-(minutes*60);\n    \n    \n    if(hour<10){\n        timeArr[1]=hour;\n    }\n    else{\n        let strhour=hour.toString();\n        timeArr[0]=strhour.substr(0,1);\n        timeArr[1]=strhour.substr(1,);\n    }\n    if(minutes<10){\n        timeArr[3]=minutes;\n    }\n    else{\n        let strMinutes=minutes.toString();\n        timeArr[2]=strMinutes.substr(0,1);\n        timeArr[3]=strMinutes.substr(1,);\n    }\n    if(seconds<10){\n        timeArr[5]=seconds;\n    }\n    else{\n        let strSeconds=seconds.toString();\n        timeArr[4]=strSeconds.substr(0,1);\n        timeArr[5]=strSeconds.substr(1,);\n    }\n    //console.log(timeArr);\n    return timeArr;\n}\n//console.log(SecondsToArray(-3))\n//console.log(SecondsToArray(ArrayToSeconds([1,1,5,8,0,3])))\n\n\n","import React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {saveTotalTime,updateCountDown} from '../../redux/totalTime/TotalTime.action';\nimport {ArrayToSeconds,SecondsToArray} from '../../logic/arrayToSeconds';\nimport './TotalTargetTime.scss' \nconst TotalTargetTime=()=>{\n    const dispatch=useDispatch();\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const [timeState,setTimeState]=useState([]);\n    //console.log(timeState)\n    let timeArr=[]\n    //console.log(timeArr)\n    useEffect(() => {\n        validatePrevValue();\n        const interval = setInterval(() => {\n            //console.log('countDownRunning')\n            if(timeState.length>0){\n               dispatch(updateCountDown());\n                validatePrevValue();\n                setTimeState(timeArr)\n                \n            }\n            //console.log(timeState)\n        }, 1000);\n        return () => clearInterval(interval);\n      }, [timeState.length]);\n    //console.log(timeArr)\n    const validatePrevValue=()=>{\n        if((totalTime[key]!==undefined)&&(totalTime[key][getFullDate()]!==undefined)){\n            timeArr=SecondsToArray(totalTime[key][getFullDate()]);\n            setTimeState(timeArr)\n        }\n       \n    }\n    const handleChange=event=>{\n            validatePrevValue();\n            //timeArr.push(event.target.value)\n            timeArr[parseInt(event.target.name)]=event.target.value\n            if(parseInt(event.target.name)<5){\n                document.getElementById(parseInt(event.target.name)+1).disabled=false;\n                document.getElementById(parseInt(event.target.name)+1).focus();\n                document.getElementById(parseInt(event.target.name)+1).value='';\n                if(parseInt(event.target.name)!==0){\n                document.getElementById(parseInt(event.target.name)).disabled=true;\n                }\n            }\n            else{\n                document.getElementById(parseInt(event.target.name)).blur();\n                document.getElementById(parseInt(event.target.name)).disabled=true;\n            }\n            //console.log(timeArr)\n           //console.log((parseInt(timeArr[0])*10+(parseInt(timeArr[1])))*60*60)    \n    }\n    const clearTxt=event=>{\n        document.getElementById(parseInt(event.target.name)).value='';\n    }\n    const getFullDate=()=>{\n        let newDate=new Date()\n            let date = newDate.getDate();\n            let month = newDate.getMonth() + 1;\n            let year = newDate.getFullYear();\n            return(date.toString()+month.toString()+year.toString());\n    }\n    const submitTime=()=>{\n        //console.log(timeArr)\n        setTimeState(timeArr)\n        const totalSeconds=ArrayToSeconds(timeArr);\n        //console.log(totalSeconds)\n        dispatch(saveTotalTime(totalSeconds))\n        \n           \n        //newTime=totalTime[key][getFullDate()];\n        //console.log(newTime)\n    }\n    let cls='timeBox';\n    if(timeState.length>6){\n        cls='timeBox-negative'\n    }\n    let displayCondition=false;\n    if(timeState.length>0 && Object.keys(taskList).length>0){\n        displayCondition=true;\n    }\n    return(\n        <div className='timcardsContainer'>\n            {timeState.length>6?<span className='timeBoxNegative'>-</span>:''}\n            \n            <input className={cls} placeholder='H' type='text' name='0' onFocus={clearTxt} id='0' value={(displayCondition)?timeState[0]:timeArr[0]} maxlength='1' onChange={handleChange}>\n            </input>\n            <input disabled className={cls} placeholder='H' type='text' name='1' onFocus={clearTxt} id='1' value={displayCondition?timeState[1]:timeArr[1]} maxlength='1' onChange={handleChange}>\n            </input>\n            <div className='timerText'>H</div>\n            <input disabled className={cls} placeholder='M' type='text' name='2' onFocus={clearTxt} id='2' value={displayCondition?timeState[2]:timeArr[2]} maxlength='1' onChange={handleChange}>\n            </input>\n            <input disabled className={cls} placeholder='M' type='text' name='3' onFocus={clearTxt} id='3' value={displayCondition?timeState[3]:timeArr[3]} maxlength='1' onChange={handleChange}>\n            </input>\n                <div className='timerText'>M</div>\n                <input disabled className={cls} placeholder='S' type='text' name='4' onFocus={clearTxt} id='4' value={displayCondition?timeState[4]:timeArr[4]} maxlength='1' onChange={handleChange}>\n            </input>\n            <input disabled className={cls} placeholder='S' type='text' name='5' onFocus={clearTxt} id='5' onfocus='this.value=\"\"' value={displayCondition?timeState[5]:timeArr[5]} maxlength='1' onChange={handleChange}>\n            </input>\n                <div className='timerText'>S</div>\n            {totalTime[key]?'':\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className='saveTimeBtn'\n            startIcon={<CheckIcon />}\n            onClick={()=>submitTime()}\n            >\n                Save Time\n            </Button>\n            }\n\n        </div>\n\n    )\n}\n\nexport default TotalTargetTime;","const BreakButtonType={\n    START_BREAK:'START_BREAK',\n    PAUSE_BREAK:'PAUSE_BREAK',\n    GET_BREAK_COLOR:'GET_BREAK_COLOR'\n}\n\nexport default BreakButtonType","import BreakButtonType from './BreakButton.type';\n\nexport const startBreak=(breakName)=>{\n    //console.log(breakName)\n    return{\n    type:BreakButtonType.START_BREAK,\n    breakName:breakName,\n}\n}\n\nexport const pauseBreak=(breakName)=>{\n    return{\n    type:BreakButtonType.PAUSE_BREAK,\n    breakName:breakName,}\n}\n\n","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport CallIcon from '@material-ui/icons/Call';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport EjectIcon from '@material-ui/icons/Eject';\nimport './BreakButtons.style.scss';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport {startBreak} from '../../redux/breakButton/BreakButton.action';\nconst BreakButtons=()=>{\n\n    const breakData=useSelector(state=>state.BreakButtonReducer);\n    const totalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    const totalTimeKey=totalTimeReducer.key;\n    const {totalTime}=totalTimeReducer;\n    const dispatch=useDispatch();\n    //console.log('call')\n\n    const dispatchAction=(buttonName)=>{\n        \n        dispatch(startBreak(buttonName))\n    }\n    return(\n        \n        <div className='breakbuttonsMainContainer'>\n        {totalTime[totalTimeKey]?\n            <>\n            <Tooltip title='Instagram'>\n                <button className={`brakButton-insta-${breakData['instagram'].isActive?'active':''}`} onClick={()=>dispatchAction('instagram')}><InstagramIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            <Tooltip title='Facebook'>\n                <button className={`brakButton-fb-${breakData['faceBook'].isActive?'active':''}`} onClick={()=>dispatchAction('faceBook')}><FacebookIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            \n            <Tooltip title='Youtube'>\n                <button className={`brakButton-youtube-${breakData['youtube'].isActive?'active':''}`} onClick={()=>dispatchAction('youtube')}><YouTubeIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            <Tooltip title='Calls'>\n                <button className={`brakButton-calls-${breakData['call'].isActive?'active':''}`} onClick={()=>dispatchAction('call')}><CallIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            <Tooltip title='Messaging'>\n                <button className={`brakButton-messaging-${breakData['messaging'].isActive?'active':''}`} onClick={()=>dispatchAction('messaging')}><WhatsAppIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            \n\n            <Tooltip title='Sleep'>\n                <button className={`brakButton-sleep-${breakData['sleep'].isActive?'active':''}`} onClick={()=>dispatchAction('sleep')}><AirlineSeatFlatIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            <Tooltip title='Excercise'>\n                <button className={`brakButton-excesise-${breakData['excercise'].isActive?'active':''}`} onClick={()=>dispatchAction('excercise')}><DirectionsRunIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            \n            <Tooltip title='Food'>\n            <button className={`brakButton-food-${breakData['food'].isActive?'active':''}`} onClick={()=>dispatchAction('food')}><FastfoodIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            \n            <Tooltip title='Tea/Coffee'>\n                <button className={`brakButton-tea-${breakData['tea'].isActive?'active':''}`} onClick={()=>dispatchAction('tea')}><FreeBreakfastIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            <Tooltip title='Miscelaneous Task'>\n                <button className={`brakButton-misc-${breakData['miscelaneous'].isActive?'active':''}`} onClick={()=>dispatchAction('miscelaneous')}><LibraryAddIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n\n            <Tooltip title='Release All'>\n                 <button className={`brakButton-eject-${breakData['releaseAll'].isActive?'active':''}`} onClick={()=>dispatchAction('releaseAll')}><EjectIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            </>:''}\n        </div>\n        )\n}\n\nexport default BreakButtons;","const TaskType={\n    ADD_TASK:'ADD_TASK',\n    REMOVE_TASK:'REMOVE_TASK',\n    PAUSE_TASK:'PAUSE_TASK',\n    START_TASK:'START_TASK',\n    COMPLETED_TASK:'COMPLETED_TASK',\n    ADD_BREAK_TASK:'ADD_BREAK_TASK',\n    REMOVE_ALL_TASK:'REMOVE_ALL_TASK',\n    COMPLETE_ALL_TASK:'COMPLETE_ALL_TASK',\n    ADD_REMAINDER:'ADD_REMAINDER',\n    START_REMAINDER:'START_REMAINDER',\n    \n    \n}\nexport default TaskType;","import TaskType from './Task.type';\n\nexport const addTask=(taskName)=>{\n    return{\n        type:TaskType.ADD_TASK,\n        taskName:taskName\n    }\n}\n\nexport const removeTask=(taskName)=>{\n    return{\n        type:TaskType.REMOVE_TASK,\n        taskName:taskName\n    }\n}\n\nexport const pauseTask=(taskName)=>{\n    return{\n        type:TaskType.PAUSE_TASK,\n        taskName:taskName\n    }\n}\n\nexport const startTask=(taskName,seconds,originalTimeLocal)=>{\n    return{\n        type:TaskType.START_TASK,\n        taskName:taskName,\n        seconds:seconds,\n        totalTime:originalTimeLocal\n    }\n}\n\nexport const completeTask=(taskName)=>{\n    return{\n        type:TaskType.COMPLETED_TASK,\n        taskName:taskName\n    }\n}\n\nexport const addBreaktask=(taskName,color)=>{\n    return{\n        type:TaskType.ADD_BREAK_TASK,\n        taskName:taskName,\n        color:color,\n    }\n}\n\nexport const removeAllTask=()=>{\n    return{\n        type:TaskType.REMOVE_ALL_TASK,\n    }\n}\n\nexport const completeAll=()=>{\n    return{\n        type:TaskType.COMPLETE_ALL_TASK,\n    }\n}\n\n\nexport const addRemainder=(remainderName,timeInSec,repeat)=>{\n    return{\n        type:TaskType.ADD_REMAINDER,\n        remainderName:remainderName,\n        time:timeInSec,\n        repeat:repeat,\n    }\n}\n\n\nexport const startRemainder=(seconds)=>{\n    return{\n        type:TaskType.START_REMAINDER,\n        seconds:seconds,\n    }\n}\n\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {removeTask,pauseTask,startTask,completeTask} from '../../redux/task/Task.action'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst AddedTask=({completed,bgColor,taskName,paused,percentage,type,time})=>{\n    \n    const dispatch=useDispatch();\n    const containerStyle={\n        position:'relative',\n        height:'15%',\n        width:'100%',\n        backgroundColor: \"#e0e0de\",\n        borderRadius: '10px',\n        'margin-top':5,\n        display:'flex',\n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${percentage}%`,\n        backgroundColor: `${bgColor}`,\n        textAlign: 'right',\n        borderRadius: '5px',\n        transition: 'width 1s ease-in-out',\n      }\n\n      const labelStyle = {\n        position:'absolute',\n        top:'1vh',\n        left:'-3vw',\n        color: 'black',\n        fontWeight: 'bold',\n        'z-index':-1,\n        width:'10vw',\n        \n      }\n\n      const taskContentStyle={\n        position:'absolute',\n        display:'flex',\n        right:'50%',\n        top:'10%',\n        textAlign:'right',\n\n        'font-weight':'bold',\n      }\n      const iconsListStyle={\n        position:'absolute',\n        top:'0.5vh',\n        display:'flex',\n        left:'1vw',\n        'padding-left':'7.5vw',\n        textAlign: 'right'\n      }\n      const taskNameStyle={\n          position:'absolute',\n          top:'1vh',\n          color:'black',\n          right:'1.9vw',\n          'text-align':'left',\n          width:'11vw',\n          'margin-left':'10%',\n      }\n      \n\n    return(\n        <Tooltip title={taskName.toUpperCase()} placement=\"right-start\" arrow>\n        <div className='taskMainContainer' style={containerStyle}>\n            <div className='contentContainer' style={fillerStyle}>\n               \n            </div>\n            <div className='taskContent' style={taskContentStyle}>\n                <span style={labelStyle}>{`${time[0]+''+time[1]+':'+time[2]+''+time[3]+':'+time[4]+''+time[5]}  -  ${percentage}%`}</span>\n                <div className='taskName' style={taskNameStyle}>\n                    {`${taskName.toUpperCase().slice(0,14)}${taskName.length>14?'...':''}`}\n                </div>\n                {completed && type!=='remainder'?'':\n            \n                \n                <div className='iconsList' style={iconsListStyle}>\n                    {paused\n                        ?\n                            type!=='remainder'\n                            ?\n                                <Tooltip title={`Start ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PlayCircleOutlineIcon key={`${taskName}-playBtn`} onClick={()=>dispatch(startTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                            :type!=='remainder'\n                            ?\n                                <Tooltip title={`Pause ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PauseCircleOutlineIcon key={`${taskName}-pauseBtn`} onClick={()=>dispatch(pauseTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                    }\n                    \n                    {type!=='task'?'':\n                        <Tooltip title={`Mark Complete ${taskName.toUpperCase()}`}  arrow>\n                            <div className='completedButton'>\n                                <DoneOutlineIcon onClick={()=>dispatch(completeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                    }\n                    {type==='break'?'':percentage>0 && type!=='remainder'?'':\n                        <Tooltip title={`Remove ${taskName.toUpperCase()}`}  arrow>\n                            <div className='removeButton'>\n                                <CancelIcon key={`${taskName}-cancelBtn`} onClick={()=>dispatch(removeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                        \n                    }\n                    \n                     \n                </div>\n                }\n            </div>\n        </div>\n        </Tooltip>\n    )\n}\n\nexport default AddedTask;","export const GetDate=()=>{\n    let newDate=new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let fullDate=date.toString()+month.toString()+year.toString();\n    return fullDate;\n}\n\nexport const GetTimeInSeconds=()=>{\n    let seconds=Math.floor(new Date().getTime()/1000);\n    return seconds;\n}\n\nexport const GetDateInFormat=()=>{\n    let newDate=new Date()\n    let date = newDate.getDate();\n    if(date<10){\n        date=`0${date}`\n    }\n    let month = newDate.getMonth() + 1;\n    if(month<10){\n        month=`0${month}`\n    }\n    let year = newDate.getFullYear();\n    let fullDate=date.toString()+month.toString()+year.toString();\n    return fullDate;\n}\n\n//console.log(GetDate());","import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './ToDoTaskContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds'\nimport {GetDate} from '../../logic/getDate';\nconst ToDoTaskContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const dispatch=useDispatch();\n    const[taskName,setTaskName]=useState();\n    //console.log(taskList)\n    const setTask=(event)=>{\n        setTaskName(event.target.value);\n    }\n    const dispatchAddTask=()=>{\n        if(taskName){\n            dispatch(addTask(taskName));\n            setTaskName('');\n            document.getElementById('outlined-basic').blur();\n        }\n        \n    }\n  \n    return(\n        <>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='toDoMainContainer'>\n            <span className='headingToDo'>Task List</span>\n            <div className='addTaskinpputContainer'>\n                <div className='addTaskContainer'>\n                    <input value={taskName} onChange={setTask} className='addTaskText' id=\"outlined-basic\" placeholder=\"Add Task\" variant=\"outlined\" color='primary'></input>\n                   \n                    <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={`saveTaskBtn-${taskName?'enabled':'disabled'}`}\n                    startIcon={<CheckIcon />}\n                    onClick={dispatchAddTask}\n                    \n                    ></Button>\n                    <hr></hr>\n                </div>\n            </div>\n            <div className='addedTaskListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].isCompleted?'':taskList[key].type==='remainder'?'':\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].time)}/>)\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </>\n    )\n}\nexport default ToDoTaskContainer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport './CompletedTaskListContainer.style.scss'\nimport {GetDate} from '../../logic/getDate';\nimport {SecondsToArray} from '../../logic/arrayToSeconds'\nconst CompletedTaskListContainer=()=>{\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    return(\n        <>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='completedTaskListMainContainer'>\n            <span className='headingCompleted'>Completed Task List</span>\n            <div className='completedTaskListContainer'>\n\n            {Object.keys(taskList).map((key)=>\n                {   return(\n                    taskList[key].isCompleted?\n                    (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].time)}/>)\n                    :''\n                    \n                    )\n                }    \n                )\n            }          \n            </div>\n        </div>\n        :''}\n        </>\n    )\n}\nexport default CompletedTaskListContainer; ","import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './RemainderContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask,addRemainder} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds';\nimport {GetTimeInSeconds} from '../../logic/getDate';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {GetDate} from '../../logic/getDate';\n\n\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\nimport Checkbox from'@material-ui/core/Checkbox';\nconst RemainderContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const [remainderName,setRemainderName]=useState();\n    const [time,setTime]=useState();\n    const [repeat,setRepeat]=useState(false);\n    const dispatch=useDispatch();\n    //console.log(taskList)\n    \n    const dispatchAddRemainder=()=>{\n        dispatch(addRemainder(remainderName,time,repeat));\n        setRemainderName('');\n        setTime(undefined);\n        setRepeat(false)\n        document.getElementById('outlined-basic').blur();\n    }\n    let timeError=undefined; \n    const timeValidation=dateTime=>{\n        setTime(Math.floor(new Date(dateTime).getTime()/1000))\n        //console.log(((time-GetTimeInSeconds())/60))\n        if(time!==undefined){\n            if(((time-GetTimeInSeconds())/60)<0){\n                timeError=true;\n                setTime(undefined)\n            }\n        }\n\n    }\n        \n        \n   \n\n    \n   \n    //console.log((time-GetTimeInSeconds())/60)\n    return(\n        <>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='remainderMainContainer'>\n            <span className='headingremainder'>Remainder List</span>\n            <div className='addRemainderinpputContainer'>\n                <div className='addRemainderContainer'>\n                    <div className='remainderAddInputs'>\n                        <input value={remainderName} onChange={e=>setRemainderName(e.target.value)} className='addRemainderText' id=\"outlined-basic\" placeholder=\"Add Remainder\" variant=\"outlined\" color='primary' type='text'></input>\n                        <MuiPickersUtilsProvider  utils={DateFnsUtils}>\n\n                        <TimePicker\n                          \n                          className='timeSelector'\n                          value={time!==undefined?new Date(time*1000):new Date()}\n                          onChange={timeValidation}\n                          ampm={false}\n                        />\n                        \n                         </MuiPickersUtilsProvider>\n                        \n                        </div>\n                    <div className='minutesFromNowContainer'>\n                        <Checkbox\n                        inputProps={{ 'aria-label': 'Checkbox Repeat' }}\n                        style={{'color':'white'}}\n                        color=\"primary\"\n                        className='repeatSelectCheckBox'\n                        onChange={e=>setRepeat(e.target.checked)}\n                        checked={repeat}\n                        />\n                        <span className='minutesFromNow'> {`Repeat Every ${time!==undefined?((time-GetTimeInSeconds())/60).toFixed(1):0} Minutes From Now`}</span>\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='saveRemainderBtn'\n                        startIcon={<CheckIcon />}\n                        onClick={dispatchAddRemainder}\n                        disabled={time===undefined}\n                        ></Button>\n                    </div>\n                    {(time-GetTimeInSeconds())<0?\n                        <span className='timeError'>Please select a future time</span>\n                        :\n                        ''\n                    }\n                    \n                    \n                </div>\n            </div>\n            <div className='addedRemainderListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].type==='remainder'?\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].timeRemaining)}/>)\n                        :''\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </>\n    )\n}\nexport default RemainderContainer;","const SubmitDataType={\n    SUBMIT_ALL_DATA_START:'SUBMIT_ALL_DATA_START',\n    SUBMIT_ALL_DATA_INPROGRESS:'SUBMIT_ALL_DATA_INPROGRESS',\n}\n\nexport default SubmitDataType;","import SubmitDataType from './SubmitData.type';\n\nexport const submitDataStart=()=>{\n    return{\n        type:SubmitDataType.SUBMIT_ALL_DATA_START\n    }\n}\n\nexport const submitDataInProgerss=(taskReducer,breakButtonReducer,totalTimeReducer)=>{\n    return{\n        type:SubmitDataType.SUBMIT_ALL_DATA_INPROGRESS,\n        breakButtonReducer:breakButtonReducer,\n        taskReducer:taskReducer,\n        totalTimeReducer:totalTimeReducer\n    }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {submitDataStart} from '../../redux/submitData/SubmitData.action'\nimport './FinishDayButton.style.scss'\nconst FinishDayButton=()=>{\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const dispatch=useDispatch();\n    const dispatchSubmit=()=>{\n\n    dispatch(submitDataStart());\n    setTimeout(function(){\n        window.location.reload(false);\n\n    }, 500);     \n}\n    return(\n        <>  \n        {totalTime[key]?\n            <Button className='finishDayBtn' variant=\"contained\" color=\"secondary\" onClick={dispatchSubmit}>\n                Finish Your Day\n             </Button>\n        :''}\n        </>\n    )\n}\n\nexport default FinishDayButton;","const NotesType={\n    TOGGLE_NOTE_DISPLAY:'TOGGLE_NOTE_DISPLAY',\n    ADD_NOTE:'ADD_NOTE',\n    REMOVE_NOTE:'REMOVE_NOTE'\n}\n\nexport default NotesType;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { removeNote } from '../../redux/notes/notes.action';\nimport './notes.style.scss'\nconst Notes=({noteMsg,noteKey})=>{\n    const dispatch=useDispatch();\n\n    return(\n        <div className='notesContainer'>\n            <div className='notesText'>{noteMsg}</div>\n            <div className='removeButton'>\n                <CancelIcon onClick={()=>dispatch(removeNote(noteKey))}/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Notes;","import NotesType from \"./notes.type\";\n\nexport const toggleNoteDisplay=()=>{\n    return{\n        type:NotesType.TOGGLE_NOTE_DISPLAY\n    }\n}\n\nexport const addNote=(noteText)=>{\n    return{\n        type:NotesType.ADD_NOTE,\n        noteText:noteText,\n    }\n}\n\nexport const removeNote=(noteId)=>{\n    return{\n        type:NotesType.REMOVE_NOTE,\n        noteId:noteId,\n    }\n}","import React,{useState} from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport Notes from '../notes/notes.component';\nimport { addNote } from '../../redux/notes/notes.action';\nimport './NotesContainer.style.scss';\n\nconst NotesContainer=()=>{\n    const dispatch=useDispatch();\n    const {noteDisplay,notes} =useSelector(state=>state.NoteReducer)\n    const[noteEntered,setNoteEntered]=useState('');\n    \n    const submit=()=>{\n        if(noteEntered.length>0){\n        dispatch(addNote(noteEntered));\n        setNoteEntered('');\n        }\n    }\n    return(\n        noteDisplay?\n        <div className='notesContanerMain'>\n            <div className='notesInput'>\n                <input value={noteEntered} type='text' placeholder='Add Note' className='noteInputs' onChange={e=>setNoteEntered(e.target.value)}></input>\n                <button className={`addNoteBtn-${noteEntered.length>0?'enabled':'disabled'}`} onClick={submit} disabled={noteEntered.length<=0}>Add</button>\n            </div>\n            <div className='notesCollection'>\n                {Object.keys(notes).map((key)=>\n                    {   return(\n                        <Notes noteMsg={notes[key]} noteKey={key}/>\n                        )\n                    }    \n                    )\n                }          \n               \n               \n            </div>\n        </div>\n        :''\n    )\n}\n\nexport default NotesContainer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Doughnut} from 'react-chartjs-2';\nimport './DoughnutChart.style.scss';\nconst DoughnutChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let Doughnutdata={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(4))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n      //console.log(taskHour)\n      //console.log(bgColors)\n    \n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: '# of Votes',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 2,\n              hoverOffset: 20\n            },\n          ],\n      };\n      display=true;\n    }\n    return(\n        <div className={`doughnutChartContainer-${display?'':'hideBarDougnutContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Doughnut data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default DoughnutChart;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss'\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let Doughnutdata={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(3))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n    chartLabels.push('Estimated Total Time');\n    let TotalTimeReducer=data[key].totalTimeData\n    let originalTimeKey=Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n    taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]/3600).toFixed(3));\n    bgColors.push('rgb(28,16,133)');\n    borderColors.push('rgb(255,255,255)');\n    let actualTime=0;\n    if(TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey]<0){\n          actualTime=(-1*TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey])+TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]\n    }\n    else{\n        actualTime=TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]-TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n    }\n    chartLabels.push('Actual Total Time');\n    taskHour.push((actualTime/3600).toFixed(3));\n    bgColors.push('rgb(222, 11, 39)');\n    borderColors.push('rgb(255,255,255)');\n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: 'Time Comparison Chart',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 5,\n              hoverOffset: 20\n            },\n          ],\n        };\n      display=true\n    }\n    return(\n        <div className={`timeConparisonBarChartContainer-${display?'':'hideBarChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport './TimeTrackLineChart.style.scss' \n\nconst TimeTrackerLineChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let dataLine=null;\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {      \n      let xAxis=[];\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      let dataSet=[];\n      var originalTimeData={\n          label:'Estimated Time',\n          data:[],\n          fill:false,\n          borderColor:'rgb(93, 66, 245)',\n          tension:0.1\n      }\n      var TotalTimeData={\n        label:'Actual Time',\n        data:[],\n        fill:false,\n        borderColor:'rgb(245, 5, 25)',\n        tension:0.1\n    }\n      if(Object.keys(data).length>0){\n      \n      for(var k in data){\n          let dt=data[k].date;\n          let actualDate=null;\n          //console.log(dt)\n          if(dt.length===6){\n              actualDate=`0${dt[0]}/0${dt[1]}/${dt.substring(2,7)}`;\n          }\n          else if (dt.length===7){\n            if((dt.substring(2,3)<=9) && (dt.substring(2,3)>2)){\n                actualDate=`${dt.substring(0,2)}/0${dt.substring(2,3)}/${dt.substring(3,8)}`\n            }\n            else if((dt.substring(2,3)<=2) && (dt.substring(2,3)>=0)){\n              if(((dt.substring(1,2)==1))){\n                  actualDate=`0${dt.substring(0,1)}/${dt.substring(1,3)}//${dt.substring(3,8)}`;\n              }\n              else{\n                  actualDate=`${dt.substring(0,2)}/0${dt.substring(2,3)}//${dt.substring(3,8)}`;\n              }\n            }\n          }\n          else if(dt.length===8){\n            actualDate=`${dt.substring(0,2)}/${dt.substring(2,4)}/${dt.substring(4,8)}`\n            //console.log(actualDate)\n          }\n          xAxis.push(actualDate)\n          //console.log(xAxis)\n          var keyLocal=data[k].totalTimeData.key\n         \n           for(var origTimeKey in data[k]['totalTimeData'].originalTime[keyLocal]){\n             originalTimeData.data.push((data[k].totalTimeData.originalTime[keyLocal][origTimeKey]/3600).toFixed(3))\n           }\n           for(var totalTimeKey in data[k].totalTimeData.totalTime[keyLocal]){\n                //console.log(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])\n               var actualTime=0;\n             if(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]<0){\n                 actualTime=(-1*data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])+data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]\n             }\n              else{\n              actualTime=data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]-data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]\n              }\n             TotalTimeData.data.push((actualTime/3600).toFixed(3))\n           }\n       }\n      dataSet=[originalTimeData,TotalTimeData]\n      //console.log(dataSet)\n   \n      display=true\n    }\n    const labels=xAxis;\n    dataLine = {\n      labels: labels,\n      datasets: dataSet\n    };\n\n  }\n    return(\n        <div className={`timeConparisonBarLineContainer-${display?'':'hidelineChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Line className='lineChart' data={dataLine}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeTrackerLineChart;\n","import React from 'react';\nimport './Header.style.scss';\n\n\nconst Header=()=>{\n    \n    return(\n        <nav className='headerContainer'>\n           \n                <div className='logoContainer'>\n                    <div className='logo'>\n                        TimeLogger\n                    </div>\n                </div>\n            \n\n           \n            <div className='optionContainer'>\n                    <div className='option'>\n                        \n                    </div>\n                \n                              \n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React from 'react'\nimport {useDispatch} from 'react-redux';\nimport TotalTargetTime from '../../components/totalTargetTime/TotalTargetTime.component';\nimport BreakButtons from '../../components/breakButtons/BreakButtons.component';\nimport ToDoTaskContainer from '../../components/toDoTaskContainer/ToDoTaskContainer.component'\nimport CompletedTaskListContainer from '../../components/completedTaskListContainer/CompletedTaskListContainer.component';\nimport RemainderContainer from '../../components/remainderContainer/RemainderContainer.component'\nimport FinishDayButton from '../../components/finishDayButton/FinishDayButton.component'\nimport NotesContainer from '../../components/notesContainer/NotesContainer.component'\n\nimport DoughnutChart from '../../doughnutChart/DoughnutChart.component'\nimport TimeComparisonBarChart from '../../components/timeComparisonBarChart/timeComparisonBarChart';\nimport TimeTrackerLineChart from '../../components/timeTrackLineChart/TimeTrackLineChart.component'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport {removeAllTask} from '../../redux/task/Task.action';\nimport {removeAllTime} from '../../redux/totalTime/TotalTime.action';\nimport {toggleNoteDisplay} from '../../redux/notes/notes.action';\nimport Header from '../../components/header/Header.component'\nimport './HomePage.style.scss'\nconst HomePage=()=>{\n    const dispatch=useDispatch();\n    const reset=()=>{\n        dispatch(removeAllTask());\n        dispatch(removeAllTime());\n        setTimeout(function(){\n            window.location.reload(false);\n    \n        }, 500);\n    }\n    return(\n\n        <div className='mainContainerHomePage'>\n             <Header/>\n            <div className='restoreReducer'>\n                <IconButton aria-label=\"reset\"  color=\"primary\" onClick={reset}><RotateLeftIcon/></IconButton>    \n            \n            </div>\n            <div className='openNotes'>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={()=>dispatch(toggleNoteDisplay())}>\n                     <AddIcon />\n                </Fab>\n                <NotesContainer className='notesContainerMainHome'/>\n            </div>\n            <div className='totalTimeContainer'>\n                <TotalTargetTime/>\n            </div>\n            \n                <>\n                <div className='switchButtonsContainer'>\n                    <BreakButtons/>\n                </div>\n                <div className='taskListContainer'>\n                \n                    <ToDoTaskContainer className='toDoListMain'/> \n                    <RemainderContainer clasName='remainderMain'/>\n                    <CompletedTaskListContainer className='completedTaskListMain'/>\n                </div>\n            \n                <div className='reportButtonContainer'>\n                   <FinishDayButton/>\n                </div>\n            </>\n            \n            \n            <div className='graphsContainer'>\n               \n                <div className='chartConatiner1'> \n                    <DoughnutChart/>1\n                    <TimeComparisonBarChart/>\n                </div>\n                <div className='chartContainer2'>\n                    <TimeTrackerLineChart/>\n                </div>\n                \n            </div>\n            \n        </div>\n    )\n}\n\nexport default HomePage\n//countDownProgress?'':","\nimport HomePage from './pages/homePage/Homepage.component'\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n        <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import TotalTimeType from './TotalTime.type';\nimport {GetDate} from '../../logic/getDate';\nconst INITIAL_STATE={\n    key:0,\n    totalTime:{},\n    originalTime:{},\n    countDownProgress:false,\n    lastUpdatedTime:null,\n}\n\nexport const TotalTimeReducer=(state=INITIAL_STATE, action)=>{\n    switch(action.type){\n        case TotalTimeType.SAVE_TOTAL_TIME:\n            state.key=Object.keys(state.totalTime).length;\n            \n            let fullDate=GetDate()\n            state.totalTime[state.key]={[fullDate]:action.payload}\n            state.originalTime[state.key]={[fullDate]:action.payload}\n            return{\n                ...state,\n                key:state.key,\n                totalTime:{...state.totalTime},\n                originalTime:{...state.originalTime},\n            }\n        case TotalTimeType.START_COUNTDOWN:\n            \n            let dateTime=GetDate();\n            state.totalTime[state.key][dateTime]=state.totalTime[state.key][dateTime]-parseInt(action.seconds);\n            return{\n                ...state,\n                totalTime:{...state.totalTime},\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_LAST_RUN_TIME:\n            return{\n                ...state,\n                lastUpdatedTime:action.seconds,\n            }\n        case TotalTimeType.PAUSE_COUNTDOWN:\n            state.countDownProgress=false;\n            return{\n                ...state,\n                countDownProgress:false,\n                lastUpdatedTime:null,\n            }\n        case TotalTimeType.SET_COUNTDOWN_TRUE:\n            return{\n                ...state,\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_COUNTDOWN:\n            return state;\n        case TotalTimeType.REMOVE_ALL_TIME:\n            return{\n                key:0,\n                totalTime:{},\n                originalTime:{},\n                countDownProgress:false,\n                lastUpdatedTime:null,\n            }\n        default:\n            return state;\n    }\n}","import BreakButtonType from './BreakButton.type';\n\nconst INITIAL_STATE={\n    instagram:{isActive:false,time:0,color:'rgb(243, 9, 192)'},\n    faceBook:{isActive:false,time:0,color:'rgb(10, 79, 158)'},\n    youtube:{isActive:false,time:0,color:'rgb(192, 9, 9)'},\n    call:{isActive:false,time:0,color:'rgb(109, 75, 204)'},\n    messaging:{isActive:false,time:0,color:'rgb(43, 192, 43)'},\n    sleep:{isActive:false,time:0,color:'rgb(36, 109, 128)'},\n    excercise:{isActive:false,time:0,color:'rgb(13, 121, 94)'},\n    tea:{isActive:false,time:0,color:'rgb(102, 50, 7)'},\n    food:{isActive:false,time:0,color:'rgb(48, 197, 185)'},\n    releaseAll:{isActive:true,time:0,color:'rgb(48, 1, 1)'},\n    miscelaneous:{isActive:false,time:0,color:'rgb(115, 20, 223)'},\n    currentActive:'releaseAll',\n    \n}\n\n\nexport const BreakButtonReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        \n        case BreakButtonType.START_BREAK:\n            let prevActive='';\n            let btnName=action.breakName;\n            //console.log(btnName)\n            if(action.breakName!=='releaseAll'){\n                \n                state[state.currentActive].isActive=false;\n                state[action.breakName].isActive=true;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            else{\n                \n                state[state.currentActive].isActive=false;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            return{\n                ...state,\n                [btnName]:{...state[btnName]},\n                [prevActive]:{...state[prevActive]}\n            }\n        case BreakButtonType.PAUSE_BREAK:\n            state[state.currentActive].isActive=false;\n            return{\n                ...state,\n                [action.breakName]:{...state[action.breakName]},\n            }\n        case BreakButtonType.GET_BREAK_COLOR:\n            let color=state[action.breakName].color;\n            //console.log(color)\n            //console.log(state[action.breakName])\n            return color;\n        default:\n            return state;\n    }\n}\n\n","import TaskType from './Task.type';\n\nconst INITIAL_STATUS={\n    taskList:{},\n    activeTask:null,\n    notification:null,\n    remainderLastUpdate:null,\n}\n\n\nexport const TaskReducer=(state=INITIAL_STATUS,action)=>{\n    switch(action.type){\n        case TaskType.ADD_TASK:\n            if(state.taskList[action.taskName]===undefined){\n                let taskData={\n                    time:0,\n                    paused:true,\n                    isCompleted:false,\n                    color:'rgb(239, 68, 11)',\n                    percentage:0,\n                    type:'task',\n                }\n                state.taskList[action.taskName]=taskData;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                \n            }\n        case TaskType.REMOVE_TASK:\n            delete state.taskList[action.taskName];\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n                notification:null\n            }\n        case TaskType.PAUSE_TASK:\n            state.taskList[action.taskName].paused=true;\n            state.activeTask=null;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.START_TASK:\n            for(var key in state.taskList){\n                state.taskList[key].paused=true;\n            }\n            state.taskList[action.taskName].paused=false;\n            if(action.seconds!==undefined && action.totalTime!==undefined && state.taskList[action.taskName].type!=='remainder'){\n\n                state.taskList[action.taskName].time=parseInt(state.taskList[action.taskName].time)+parseInt(action.seconds);\n                //console.log(action.totalTime);\n                //console.log(state.taskList[action.taskName].time)\n                \n                state.taskList[action.taskName].percentage=(((state.taskList[action.taskName].time)/(parseInt(action.totalTime)))*parseInt(100)).toFixed(1);\n            }\n            state.activeTask=action.taskName;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.COMPLETED_TASK:\n            state.taskList[action.taskName].isCompleted=true;\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.ADD_BREAK_TASK:\n            for(var k in state.taskList){\n                //console.log(key)\n                if(k!==action.taskName){\n                    state.taskList[k].paused=true;\n                }\n                //console.log(state.taskList[key].pasued)\n            }\n            if(action.taskName!=='releaseAll'){\n                \n                //console.log(state.taskList)\n                if((state.taskList[action.taskName]===undefined)){\n                let taskData={\n                    time:0,\n                    paused:false,\n                    isCompleted:false,\n                    color:action.color,\n                    percentage:0,\n                    type:'break',\n                }\n                state.taskList[action.taskName]=taskData;\n                state.activeTask=action.taskName\n                }\n                else{\n\n                    //console.log('********************************************************')\n                    //console.log(state.taskList[action.taskName].paused)\n                    if(!(state.taskList[action.taskName].paused)){\n                        \n                        state.taskList[action.taskName].paused=true;\n                        state.activeTask=null\n                    }\n                    else{\n                        \n                        state.taskList[action.taskName].paused=false;\n                        state.activeTask=action.taskName\n                    }\n\n                }\n\n            }\n            \n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n            case TaskType.REMOVE_ALL_TASK:\n                return{\n                    ...state,\n                    taskList:{},\n                    activeTask:null,\n                    notification:null\n                }\n            case TaskType.COMPLETE_ALL_TASK:\n                for(var k1 in state.taskList){\n                    state.taskList[k1].isCompleted=true;\n                }\n                //console.log(state.taskList[k1])\n                return{\n                    ...state,\n                    activeTask:null,\n                    taskList:{...state.taskList},\n                    notification:null\n                }\n            case TaskType.ADD_REMAINDER:\n                if(state.taskList[action.remainderName]===undefined){\n                    let remainderData={\n                        time:action.time-Math.floor(new Date()/1000),\n                        isCompleted:false,\n                        color:'rgb(6, 125, 38)',\n                        percentage:100,\n                        timeRemaining:action.time-Math.floor(new Date()/1000),\n                        repeat:action.repeat,\n                        type:'remainder',\n                        \n                    }\n                    state.taskList[action.remainderName]=remainderData;\n                }\n                return{\n                    ...state,\n                    taskList:{...state.taskList},\n                    \n                }\n            case TaskType.START_REMAINDER:\n                state.notification=null;\n                let timeDiff=0;\n                if(state.remainderLastUpdate===null){\n                    state.remainderLastUpdate=action.seconds;\n                    timeDiff=1\n                }\n                else{\n                    timeDiff=action.seconds-state.remainderLastUpdate;\n                    state.remainderLastUpdate=action.seconds;\n                }\n                for(var key in state.taskList){\n                       \n                       if(state.taskList[key].type==='remainder' && state.taskList[key].isCompleted===false){\n                            state.taskList[key].timeRemaining=parseInt(state.taskList[key].timeRemaining)-parseInt(timeDiff);\n                            if(state.taskList[key].timeRemaining<=0 && state.taskList[key].repeat===false){\n                                state.taskList[key].isCompleted=true;\n                                state.notification=key;\n                            }\n                            else if(state.taskList[key].timeRemaining<=0 && state.taskList[key].repeat===true){\n                                state.notification=key;\n                                state.taskList[key].timeRemaining=state.taskList[key].time\n                            }\n                            state.taskList[key].percentage=(((state.taskList[key].timeRemaining)/(state.taskList[key].time))*parseInt(100)).toFixed(1);\n                        }\n                    \n                }\n                return{\n                    ...state,\n                    taskList:{...state.taskList},\n                    notification: state.notification,\n                    remainderLastUpdate:state.remainderLastUpdate\n                }\n        default:\n            return state;\n    }\n}","import SubmitDataType from './SubmitData.type';\nimport {GetDate,GetDateInFormat} from '../../logic/getDate';\nconst INITIAL_STATE={\n        key:0,\n        data:{}        \n    };\n\nexport const SubmitDataReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case SubmitDataType.SUBMIT_ALL_DATA_START:\n           \n            return{\n                ...state,\n            }\n        case SubmitDataType.SUBMIT_ALL_DATA_INPROGRESS:\n            state.key=Object.keys(state.data).length;\n            let date=GetDateInFormat();\n            let taskData=action.taskReducer;\n            for(var key in taskData){\n               if(taskData[key].type==='remainder'){\n                   delete taskData[key];\n               }\n            }\n            let breakButtonData=action.breakButtonReducer;\n            let totalTimeData=action.totalTimeReducer;\n            \n            state.data[state.key]={\n                date:date,\n                taskData:taskData,\n                breakButtonData:breakButtonData,\n                totalTimeData:totalTimeData\n            }\n            return{\n                ...state,\n                key:state.key,\n                data:{...state.data}\n            }\n        default:\n            return state;\n    }\n}","import NotesType from \"./notes.type\";\n\nconst INITIAL_STATE={\n    noteKey:0,\n    notes:{},\n    noteDisplay:false,\n}\nexport const NoteReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case NotesType.TOGGLE_NOTE_DISPLAY:\n            return{\n                ...state,\n                noteDisplay:!(state.noteDisplay)\n            }\n        case NotesType.ADD_NOTE:\n            state.notes[state.noteKey]=action.noteText\n            return{\n                ...state,\n                noteKey:state.noteKey+1,\n                notes:{...state.notes}\n            }\n        case NotesType.REMOVE_NOTE:\n            delete state.notes[action.noteId]\n            return{\n                ...state,\n                notes:{...state.notes}\n            }\n        default:\n            return state;\n\n    }\n}","import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport {TotalTimeReducer} from './totalTime/TotalTime.reducer';\nimport {BreakButtonReducer} from './breakButton/BreakButton.reducer';\nimport {TaskReducer} from './task/Task.reducer';\nimport {SubmitDataReducer} from './submitData/SubmitData.reducer';\nimport { NoteReducer } from './notes/notes.reducer';\nconst persistConfig={\n    key:'root',\n    storage,\n    whiteList:['TotalTimeReducer','SubmitDataReducer'],\n    \n}\n\nexport const rootReducer=combineReducers({\n    TotalTimeReducer:TotalTimeReducer,\n    BreakButtonReducer:BreakButtonReducer,\n    TaskReducer:TaskReducer,\n    SubmitDataReducer:SubmitDataReducer,\n    NoteReducer:NoteReducer\n});\n\nexport const persistReducer1=persistReducer(persistConfig,rootReducer);","import BreakButtonType from './BreakButton.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {addBreaktask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action';\n\nfunction* startBreakInTask({breakName}){\n        let breakButtonSatate=yield select(state=>state.BreakButtonReducer);\n    let taskReducer=yield select(state=>state.TaskReducer);\n    yield put(addBreaktask(breakName,breakButtonSatate[breakName].color));\n    if((breakName!=='releaseAll') && (taskReducer.taskList[breakName].paused===false)){\n        yield put(setCountDownTrue());\n    }\n    else{\n        yield put(pauseCountDown());\n    }\n    \n    \n}\nexport function* startBreakSaga(){\n    yield takeEvery(BreakButtonType.START_BREAK,startBreakInTask)\n\n}","import TaskType from './Task.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\n//import {startBreak} from '../breakButton/BreakButton.action'\n//import {startTask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action'\n\nfunction* startTaskEffects({type,taskName,seconds}){\n\n    yield put(setCountDownTrue());\n    //yield put(startBreak('releaseAll'))\n}\n\nfunction* pauseTaskEffects({type,taskName}){\n\n    yield put(pauseCountDown());\n}\n\nfunction* completeTaskEffects({type,taskName}){\n    const taskReducer=yield select(state=>state.TaskReducer)\n    //console.log(taskReducer.activeTask)\n    if(taskReducer.activeTask===null){\n        yield put(pauseCountDown());\n    }\n    \n}\n\nexport function* startTask(){\n    yield takeEvery(TaskType.START_TASK, startTaskEffects)\n    \n}\nexport function* pauseTask(){\n    yield takeEvery(TaskType.PAUSE_TASK, pauseTaskEffects)\n}\n\nexport function* completeTask(){\n    yield takeEvery(TaskType.COMPLETED_TASK,completeTaskEffects)\n}\n\nexport function* removeTask(){\n    yield takeEvery(TaskType.REMOVE_TASK,completeTaskEffects)\n}","import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\ntoast.configure()\n\nexport const notify=(taskName)=>{\n    toast.info(`Hi There!!! You had set a remainder for ${taskName}`,\n    {position:toast.POSITION.TOP_RIGHT,\n    autoClose:false\n    })\n    var audio = new Audio(\n        'https://www.fesliyanstudios.com/play-mp3/4384');\n                    audio.play();\n}","import TotalTimeType from './TotalTime.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startTask,startRemainder} from '../task/Task.action';\nimport {startCountDown,updateLastRunSec} from '../totalTime/TotalTime.action';\nimport {GetDate,GetTimeInSeconds} from '../../logic/getDate';\nimport {submitDataStart} from '../submitData/SubmitData.action'\nimport {notify} from '../../components/remainderNotification/RemainderNotification.component'\nfunction* updateCountDown(){\n    var d = new Date(); // for now\n    var hr=d.getHours(); // => 9\n    var min=d.getMinutes(); // =>  30\n    var sec=d.getSeconds(); \n    const {key,countDownProgress,originalTime,lastUpdatedTime}=yield select(state=>state.TotalTimeReducer)\n    const taskReducer=yield select(state=>state.TaskReducer)\n    //console.log(taskReducer)\n    //If the time is 23:59:58, it will save all task. as we are using the key to identify time ofter 00:00:00 key will change, hence breaking the function\n    if(parseInt(hr)===23 && parseInt(min)===59 && parseInt(sec)===58){\n        window.alert('The day is about to end, and a new day will begin, We will Save your progress so far');\n        yield put(submitDataStart())\n        setTimeout(function(){\n            \n    \n        }, 500); \n        window.location.reload(false);\n    }\n    else{\n    let originalTimeLocal=originalTime[key][GetDate()];\n    let seconds=GetTimeInSeconds();\n    yield put(startRemainder(seconds))\n    if(taskReducer.notification!==null){\n        notify(taskReducer.notification)\n    }\n    //updates the time of main timer as well as the tasks\n    if(countDownProgress){\n        if(lastUpdatedTime===null){\n            //console.log('in saga')\n            yield put(updateLastRunSec(seconds))\n            yield put(startCountDown(1))\n            \n            yield put(startTask(taskReducer.activeTask,1,originalTimeLocal))\n        }\n        else{\n            let timeDiff=seconds-lastUpdatedTime;\n            \n            yield put(updateLastRunSec(seconds))\n            yield put(startCountDown(timeDiff))\n            yield put(startTask(taskReducer.activeTask,timeDiff,originalTimeLocal))\n        }\n       \n    }\n    }\n}\n\nexport function* startTaskTime(){\n    yield takeEvery(TotalTimeType.UPDATE_COUNTDOWN, updateCountDown)\n}","import SubmitDataType from './SubmitData.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startBreak} from '../breakButton/BreakButton.action'\nimport {submitDataInProgerss} from '../submitData/SubmitData.action'\nimport {removeAllTask,completeAll} from '../task/Task.action';\nimport {removeAllTime} from '../totalTime/TotalTime.action';\nfunction* startSubmitProcess(){\n\n    //console.log(1)\n    yield put(startBreak('releaseAll'));\n    //console.log(2)\n    yield put(completeAll())\n    const taskReducer=yield select(state=>state.TaskReducer.taskList)\n    const breakButtonReducer=yield select(state=>state.BreakButtonReducer)\n    const totalTimeReducer=yield select(state=>state.TotalTimeReducer)\n    yield put(submitDataInProgerss(taskReducer,breakButtonReducer,totalTimeReducer))\n    yield put(removeAllTask());\n    yield put(removeAllTime());\n}\n\n\nexport function* startSubmit(){\n    yield takeEvery(SubmitDataType.SUBMIT_ALL_DATA_START, startSubmitProcess);\n}","import {all,call} from 'redux-saga/effects';\nimport {startBreakSaga} from './breakButton/BreakButton.sagas';\nimport {startTask,pauseTask,completeTask,removeTask} from './task/Task.saga';\nimport {startTaskTime} from './totalTime/TotalTime.sagas';\nimport {startSubmit} from './submitData/SubmitData.saga';\n\nexport function* rootSaga(){\n    yield all([call(startBreakSaga),\n        call(startTask),\n        call(pauseTask),\n        call(completeTask),\n        call(removeTask),\n        call(startTaskTime),\n        call(startSubmit)    \n    ]);\n}","import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {persistStore} from 'redux-persist';\nimport {persistReducer1} from './root-reducer';\nimport {rootSaga} from './root-saga';\nconst sagaMiddleware=createSagaMiddleware();\nconst middleware=[sagaMiddleware];\n\nexport const store=createStore(persistReducer1,applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor=persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react'\n//import Store from './redux/store';\nimport {store} from './redux/store';\nimport {persistor} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
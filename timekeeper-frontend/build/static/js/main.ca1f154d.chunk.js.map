{"version":3,"sources":["redux/totalTime/TotalTime.type.js","redux/totalTime/TotalTime.action.js","logic/arrayToSeconds.js","components/timeInputComponent/timeInput.component.jsx","components/timeCard/timeCard.component.jsx","components/totalTargetTime/TotalTargetTime.component.jsx","redux/breakButton/BreakButton.type.js","redux/breakButton/BreakButton.action.js","components/breakButtons/BreakButtons.component.jsx","redux/task/Task.type.js","redux/task/Task.action.js","components/addedTask/AddedTask.component.jsx","logic/getDate.js","components/toDoTaskContainer/ToDoTaskContainer.component.jsx","components/completedTaskListContainer/CompletedTaskListContainer.component.jsx","components/remainderContainer/RemainderContainer.component.jsx","redux/submitData/SubmitData.type.js","redux/submitData/SubmitData.action.js","components/finishDayButton/FinishDayButton.component.jsx","redux/notes/notes.type.js","components/notes/notes.component.jsx","redux/notes/notes.action.js","components/notesContainer/NotesContainer.component.jsx","doughnutChart/DoughnutChart.component.jsx","components/timeComparisonBarChart/timeComparisonBarChart.js","components/timeTrackLineChart/TimeTrackLineChart.component.jsx","components/header/Header.component.jsx","pages/homePage/Homepage.component.jsx","App.js","reportWebVitals.js","redux/totalTime/TotalTime.reducer.js","redux/breakButton/BreakButton.reducer.js","redux/task/Task.reducer.js","redux/submitData/SubmitData.reducer.js","redux/notes/notes.reducer.js","redux/root-reducer.js","redux/breakButton/BreakButton.sagas.js","redux/task/Task.saga.js","components/remainderNotification/RemainderNotification.component.jsx","redux/totalTime/TotalTime.sagas.js","redux/submitData/SubmitData.saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["TotalTimeType","SAVE_TOTAL_TIME","START_COUNTDOWN","PAUSE_COUNTDOWN","SET_COUNTDOWN_TRUE","UPDATE_COUNTDOWN","REMOVE_ALL_TIME","UPDATE_LAST_RUN_TIME","startCountDown","seconds","type","pauseCountDown","setCountDownTrue","removeAllTime","updateLastRunSec","SecondsToArray","timeInSec","timeArr","totalSeconds","parseInt","hour","Math","floor","hourSec","minutes","strhour","toString","substr","strMinutes","strSeconds","TimeInput","id","placeHolder","value","cls","className","placeholder","name","maxLength","disabled","TimeCard","onChange","onFocus","onKeyDown","timeState","timeBoxes","displayCondition","totalTime","timeKey","submitTime","length","map","box","key","Button","variant","color","startIcon","onClick","TotalTargetTime","dispatch","useDispatch","useSelector","state","TotalTimeReducer","taskList","TaskReducer","useState","setTimeState","useEffect","validatePrevValue","interval","setInterval","clearInterval","undefined","getFullDate","newDate","Date","date","getDate","month","getMonth","year","getFullYear","Object","keys","event","isNaN","target","document","getElementById","focus","blur","pressedKey","pop","ArrayToSeconds","payload","console","log","BreakButtonType","START_BREAK","PAUSE_BREAK","GET_BREAK_COLOR","startBreak","breakName","BreakButtons","breakData","BreakButtonReducer","totalTimeReducer","totalTimeKey","dispatchAction","buttonName","Tooltip","title","isActive","style","fill","fontSize","TaskType","ADD_TASK","REMOVE_TASK","PAUSE_TASK","START_TASK","COMPLETED_TASK","ADD_BREAK_TASK","REMOVE_ALL_TASK","COMPLETE_ALL_TASK","ADD_REMAINDER","START_REMAINDER","startTask","taskName","originalTimeLocal","removeAllTask","startRemainder","React","memo","completed","bgColor","paused","percentage","time","backgrouColorForStart","containerStyle","position","height","width","backgroundColor","borderRadius","display","fillerStyle","textAlign","transition","toUpperCase","placement","arrow","right","top","left","fontWeight","slice","pauseTask","completeTask","removeTask","GetDate","GetTimeInSeconds","getTime","ToDoTaskContainer","setTaskName","dispatchAddTask","addTask","Fragment","onSubmit","preventDefault","isCompleted","CompletedTaskListContainer","RemainderContainer","remainderName","setRemainderName","setTime","repeat","setRepeat","e","utils","DateFnsUtils","TimePicker","dateTime","ampm","Checkbox","inputProps","checked","toFixed","addRemainder","timeRemaining","SubmitDataType","SUBMIT_ALL_DATA_START","SUBMIT_ALL_DATA_INPROGRESS","submitDataStart","submitDataInProgerss","taskReducer","breakButtonReducer","FinishDayButton","setTimeout","window","location","reload","NotesType","TOGGLE_NOTE_DISPLAY","ADD_NOTE","REMOVE_NOTE","Notes","noteMsg","noteKey","noteId","NotesContainer","NoteReducer","noteDisplay","notes","noteEntered","setNoteEntered","noteText","DoughnutChart","SubmitDataReducer","data","Doughnutdata","chartLabels","taskHour","bgColors","borderColors","obj","taskData","k","push","labels","datasets","label","borderColor","borderWidth","hoverOffset","TimeComparisonBarChart","totalTimeData","originalTimeKey","originalTime","actualTime","TimeTrackerLineChart","dataLine","xAxis","dataSet","originalTimeData","tension","TotalTimeData","keyLocal","origTimeKey","Header","HomePage","IconButton","aria-label","Fab","clasName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","countDownProgress","lastUpdatedTime","instagram","faceBook","youtube","call","messaging","sleep","excercise","tea","food","releaseAll","miscelaneous","currentActive","INITIAL_STATUS","activeTask","notification","remainderLastUpdate","persistConfig","storage","whiteList","rootReducer","combineReducers","action","fullDate","prevActive","btnName","k1","remainderData","timeDiff","breakButtonData","persistReducer1","persistReducer","startBreakInTask","startBreakSaga","select","breakButtonSatate","put","takeEvery","startTaskEffects","pauseTaskEffects","completeTaskEffects","toast","configure","updateCountDown","startTaskTime","d","hr","getHours","min","getMinutes","sec","getSeconds","alert","info","POSITION","TOP_RIGHT","autoClose","Audio","play","startSubmitProcess","startSubmit","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render"],"mappings":"iiBASeA,EATK,CAChBC,gBAAgB,kBAChBC,gBAAgB,kBAChBC,gBAAgB,kBAChBC,mBAAmB,qBACnBC,iBAAiB,mBACjBC,gBAAgB,kBAChBC,qBAAqB,wBCGZC,EAAe,SAACC,GACzB,MAAM,CACFC,KAAKV,EAAcE,gBACnBO,QAAQA,IAIHE,EAAe,WACxB,MAAM,CACFD,KAAKV,EAAcG,kBAIdS,EAAiB,WAC1B,MAAO,CACHF,KAAKV,EAAcI,qBAUdS,EAAc,WACvB,MAAM,CACFH,KAAKV,EAAcM,kBAIdQ,EAAiB,SAACL,GAC3B,MAAM,CACFC,KAAKV,EAAcO,qBACnBE,QAAQA,IClCHM,EAAe,SAACC,GACzB,IAAIC,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACpBD,EAAU,IACTA,IAAqB,EACrBC,EAAQ,GAAG,KAEf,IAAIC,EAAaC,SAASH,GACtBI,EAAKC,KAAKC,MAAMJ,EAAa,MAE7BK,EAAa,KAALH,EACRI,EAAQH,KAAKC,OAAOJ,EAAcK,GAAU,IAC5Cd,EAAQS,EAAcK,EAAkB,GAARC,EAGpC,GAAGJ,EAAK,GACJH,EAAQ,GAAGG,MAEX,CACA,IAAIK,EAAQL,EAAKM,WACjBT,EAAQ,GAAGQ,EAAQE,OAAO,EAAE,GAC5BV,EAAQ,GAAGQ,EAAQE,OAAO,GAE9B,GAAGH,EAAQ,GACPP,EAAQ,GAAGO,MAEX,CACA,IAAII,EAAWJ,EAAQE,WACvBT,EAAQ,GAAGW,EAAWD,OAAO,EAAE,GAC/BV,EAAQ,GAAGW,EAAWD,OAAO,GAEjC,GAAGlB,EAAQ,GACPQ,EAAQ,GAAGR,MAEX,CACA,IAAIoB,EAAWpB,EAAQiB,WACvBT,EAAQ,GAAGY,EAAWF,OAAO,EAAE,GAC/BV,EAAQ,GAAGY,EAAWF,OAAO,GAGjC,OAAOV,G,0BCxBIa,MAvBf,YAAgD,IAA5BC,EAA2B,EAA3BA,GAAGC,EAAwB,EAAxBA,YAAYC,EAAY,EAAZA,MAAMC,EAAM,EAANA,IAErC,OACI,oCACA,2BACIC,UAAWD,EACXE,YAAaJ,EACbtB,KAAK,OACL2B,KAAMN,EACNA,GAAIA,EACJE,MAAOA,EACPK,UAAU,IACVC,SAAe,IAALR,IAIVA,EAAG,IAAI,EAAE,yBAAKI,UAAU,aAAaH,GAAmB,KCoBrDQ,MAlCf,YAA+H,IAA5GC,EAA2G,EAA3GA,SAASC,EAAkG,EAAlGA,QAAQC,EAA0F,EAA1FA,UAAUC,EAAgF,EAAhFA,UAAUC,EAAsE,EAAtEA,UAAUX,EAA4D,EAA5DA,IAAIY,EAAwD,EAAxDA,iBAAiB7B,EAAuC,EAAvCA,QAAQ8B,EAA+B,EAA/BA,UAAUC,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,WAG7G,OACI,yBAAKd,UAAU,oBAAoBM,SAAUA,EAAUC,QAASA,EAASC,UAAWA,GAC/EC,EAAUM,OAAO,EAAE,0BAAMf,UAAU,mBAAhB,KAA2C,GAC9DU,EAAUM,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,CACIC,IAAKD,EAAIrB,GACTA,GAAIqB,EAAIrB,GACRC,YAAaoB,EAAIhB,YACjBF,IAAKA,EACLD,MAAQa,EAAkBF,EAAUQ,EAAIrB,IAAId,EAAQmC,EAAIrB,SAK/DgB,EAAUC,GAAS,GACpB,kBAACM,EAAA,EAAD,CACAC,QAAQ,YACRC,MAAM,UACNnB,KAAK,eACLF,UAAU,cACVsB,UAAW,kBAAC,IAAD,MACXC,QAAS,kBAAIT,MANb,eCuJGU,G,OAnKO,WAClB,IAAMC,EAASC,cACf,EAAsBC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAAxCX,EAAP,EAAOA,IAAIN,EAAX,EAAWA,UACJkB,EAAUH,aAAY,SAAAC,GAAK,OAAEA,EAAMG,eAAnCD,SACP,EAA+BE,mBAAS,IAAxC,mBAAOvB,EAAP,KAAiBwB,EAAjB,KAGInD,EAAQ,GAGZoD,qBAAU,WACNC,IACA,IAAMC,EAAWC,aAAY,WAEtB5B,EAAUM,OAAO,IACjBU,EJKL,CACFlD,KAAKV,EAAcK,mBILXiE,IACAF,EAAanD,MAIlB,KACH,OAAO,kBAAMwD,cAAcF,MAC1B,CAAC3B,EAAUM,SAEhB,IAAMoB,EAAkB,gBACCI,IAAjB3B,EAAUM,SAAoDqB,IAAhC3B,EAAUM,GAAKsB,OAC7C1D,EAAQF,EAAegC,EAAUM,GAAKsB,MACtCP,EAAanD,KA+Bf0D,EAAY,WACd,IAAIC,EAAQ,IAAIC,KACRC,EAAOF,EAAQG,UACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAON,EAAQO,cACnB,OAAOL,EAAKpD,WAAWsD,EAAMtD,WAAWwD,EAAKxD,YAgBjDQ,EAAI,UACLU,EAAUM,OAAO,IAChBhB,EAAI,oBAER,IAAIY,GAAiB,EAClBF,EAAUM,OAAO,GAAKkC,OAAOC,KAAKpB,GAAUf,OAAO,IAClDJ,GAAiB,GA6CrB,OACI,kBAAC,EAAD,CAAUL,SApGK,SAAA6C,GAEXhB,IAEIiB,MAAMD,EAAME,OAAOvD,OAelBwD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,OAAOJ,MAAM,IAdhEhB,EAAQE,SAASmE,EAAME,OAAOnD,OAAOiD,EAAME,OAAOvD,MAC3Cd,SAASmE,EAAME,OAAOnD,MAAM,GAC3BoD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,MAAM,GAAGE,UAAS,EAChEkD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,MAAM,GAAGsD,QACvDF,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,MAAM,GAAGJ,MAAM,GAC5B,IAA9Bd,SAASmE,EAAME,OAAOnD,QACzBoD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,OAAOE,UAAS,KAI9DkD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,OAAOuD,OACrDH,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,OAAOE,UAAS,KAoFxCG,QA7EvB,SAAA4C,GACa,kBAApBA,EAAME,OAAOnD,OACjBoD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,OAAOJ,MAAM,KA2ENU,UA5CtC,SAAC2C,GAChB,IAAMO,EAAWP,EAAMjC,IACvB,IAAiB,cAAbwC,GAAyC,WAAbA,KAC5B5E,EAAQ6E,MAED3E,SAASmE,EAAME,OAAOnD,OAAO,GAAE,CAC9B,GAAGlB,SAASmE,EAAME,OAAOnD,MAAM,EAC3B,OAAO,EAEXoD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,MAAM,GAAGE,UAAS,EAChEkD,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,MAAM,GAAGsD,QACvDF,SAASC,eAAevE,SAASmE,EAAME,OAAOnD,MAAM,GAAGJ,MAAM,KAiCKW,UAAWA,EAAWC,UA5BxF,CACZ,CACId,GAAG,EACHK,YAAY,KAEhB,CACIL,GAAG,EACHK,YAAY,KAEhB,CACIL,GAAG,EACHK,YAAY,KAEhB,CACIL,GAAG,EACHK,YAAY,KAEhB,CACIL,GAAG,EACHK,YAAY,KAEhB,CACIL,GAAG,EACHK,YAAY,MAK0GF,IAAKA,EAAKY,iBAAkBA,EAAkB7B,QAASA,EAAS8B,UAAWA,EAAWC,QAASK,EAAKJ,WAlEjN,WACb,GAAGhC,EAAQiC,OAAO,CACdkB,EAAanD,GACb,IAAMC,EH9EU,SAACD,GAMzB,OAFgB,MAHe,GAArBE,SAASF,EAAQ,IAAQE,SAASF,EAAQ,KAG1B,IAFK,GAArBE,SAASF,EAAQ,IAAQE,SAASF,EAAQ,MACrB,GAArBE,SAASF,EAAQ,IAAQE,SAASF,EAAQ,KG2EzB8E,CAAe9E,GAElC2C,EJ7ED,CACHlD,KAAMV,EAAcC,gBACpB+F,QI2E2B9E,SAGvB+E,QAAQC,IAAI,sB,wNC9ETC,EANO,CAClBC,YAAY,cACZC,YAAY,cACZC,gBAAgB,mBCDPC,EAAW,SAACC,GAErB,MAAM,CACN9F,KAAKyF,EAAgBC,YACrBI,UAAUA,IC+ECC,EArEI,WAEf,IAAMC,EAAU5C,aAAY,SAAAC,GAAK,OAAEA,EAAM4C,sBACnCC,EAAiB9C,aAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAC1C6C,EAAaD,EAAiBvD,IAC7BN,EAAW6D,EAAX7D,UACDa,EAASC,cAGTiD,EAAe,SAACC,GAElBnD,EAAS2C,EAAWQ,KAExB,OAEI,yBAAK5E,UAAU,6BACdY,EAAU8D,GACP,6BACA,kBAACG,EAAA,EAAD,CAASC,MAAM,aACX,4BAAQ9E,UAAS,2BAAsBuE,EAAS,UAAcQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,eAAc,kBAAC,IAAD,CAAeK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAEpL,kBAACL,EAAA,EAAD,CAASC,MAAM,YACX,4BAAQ9E,UAAS,wBAAmBuE,EAAS,SAAaQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,cAAa,kBAAC,IAAD,CAAcK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAG9K,kBAACL,EAAA,EAAD,CAASC,MAAM,WACX,4BAAQ9E,UAAS,6BAAwBuE,EAAS,QAAYQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,aAAY,kBAAC,IAAD,CAAaK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAGhL,kBAACL,EAAA,EAAD,CAASC,MAAM,SACX,4BAAQ9E,UAAS,2BAAsBuE,EAAS,KAASQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,UAAS,kBAAC,IAAD,CAAUK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAGrK,kBAACL,EAAA,EAAD,CAASC,MAAM,aACX,4BAAQ9E,UAAS,+BAA0BuE,EAAS,UAAcQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,eAAc,kBAAC,IAAD,CAAcK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAIvL,kBAACL,EAAA,EAAD,CAASC,MAAM,SACX,4BAAQ9E,UAAS,2BAAsBuE,EAAS,MAAUQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,WAAU,kBAAC,IAAD,CAAqBK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAGlL,kBAACL,EAAA,EAAD,CAASC,MAAM,aACX,4BAAQ9E,UAAS,8BAAyBuE,EAAS,UAAcQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,eAAc,kBAAC,IAAD,CAAmBK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAI3L,kBAACL,EAAA,EAAD,CAASC,MAAM,QACf,4BAAQ9E,UAAS,0BAAqBuE,EAAS,KAASQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,UAAS,kBAAC,IAAD,CAAcK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAIpK,kBAACL,EAAA,EAAD,CAASC,MAAM,cACX,4BAAQ9E,UAAS,yBAAoBuE,EAAS,IAAQQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,SAAQ,kBAAC,IAAD,CAAmBK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAG1K,kBAACL,EAAA,EAAD,CAASC,MAAM,qBACX,4BAAQ9E,UAAS,0BAAqBuE,EAAS,aAAiBQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,kBAAiB,kBAAC,IAAD,CAAgBK,MAAO,CAACC,KAAM,SAAUC,SAAS,YAG1L,kBAACL,EAAA,EAAD,CAASC,MAAM,eACV,4BAAQ9E,UAAS,2BAAsBuE,EAAS,WAAeQ,SAAS,SAAS,IAAMxD,QAAS,kBAAIoD,EAAe,gBAAe,kBAAC,IAAD,CAAWK,MAAO,CAACC,KAAM,SAAUC,SAAS,aAG5K,KClEJC,G,OAdA,CACXC,SAAS,WACTC,YAAY,cACZC,WAAW,aACXC,WAAW,aACXC,eAAe,iBACfC,eAAe,iBACfC,gBAAgB,kBAChBC,kBAAkB,oBAClBC,cAAc,gBACdC,gBAAgB,oBCaPC,EAAU,SAACC,EAASzH,EAAQ0H,GACrC,MAAM,CACFzH,KAAK4G,EAASI,WACdQ,SAASA,EACTzH,QAAQA,EACRsC,UAAUoF,IAmBLC,EAAc,WACvB,MAAM,CACF1H,KAAK4G,EAASO,kBAqBTQ,EAAe,SAAC5H,GACzB,MAAM,CACFC,KAAK4G,EAASU,gBACdvH,QAAQA,I,gFC4DD6H,OAAMC,MA7HL,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,UAAUC,EAAgD,EAAhDA,QAAQP,EAAwC,EAAxCA,SAASQ,EAA+B,EAA/BA,OAAOC,EAAwB,EAAxBA,WAAWjI,EAAa,EAAbA,KAAKkI,EAAQ,EAARA,KAE1DhF,EAASC,cACXgF,EAAsB,WACd,IAATH,IACCG,EAAsB,WAE1B,IAAMC,EAAe,CACjBC,SAAS,WACTC,OAAO,MACPC,MAAM,OACNC,gBAAiBL,EACjBM,aAAc,OACd,aAAa,EACbC,QAAQ,QAGNC,EAAc,CAChBL,OAAQ,OACRC,MAAM,GAAD,OAAKN,EAAL,KACLO,gBAAgB,GAAD,OAAKT,GACpBa,UAAW,QACXH,aAAc,MACdI,WAAY,wBA0ChB,OACI,kBAACvC,EAAA,EAAD,CAASC,MAAOiB,EAASsB,cAAeC,UAAU,cAAcC,OAAK,GACrE,yBAAKvH,UAAU,oBAAoBgF,MAAO2B,GACtC,yBAAK3G,UAAU,mBAAmBgF,MAAOkC,IAGzC,yBAAKlH,UAAU,cAAcgF,MAlCZ,CACrB4B,SAAS,WACTK,QAAQ,OACRO,MAAM,MACNC,IAAI,MACJN,UAAU,QAEV,cAAc,SA4BN,0BAAMnC,MA9CG,CACjB4B,SAAS,WACTa,IAAI,MACJC,KAAK,OACLrG,MAAO,QACPsG,WAAY,OACZ,WAAW,EACXb,MAAM,SAuCE,UAA6BL,EAAK,GAAG,GAAGA,EAAK,GAAG,IAAIA,EAAK,GAAMA,EAAK,GAAG,IAAIA,EAAK,GAAMA,EAAK,GAA3F,gBAAqGD,EAArG,MACA,yBAAKxG,UAAU,WAAWgF,MAnBhB,CAChB4B,SAAS,WACTa,IAAI,MACJpG,MAAM,QACNmG,MAAM,QACN,aAAa,OACbV,MAAM,OACN,cAAc,QAYR,UACQf,EAASsB,cAAcO,MAAM,EAAE,KADvC,OAC6C7B,EAAShF,OAAO,GAAG,MAAM,KAErEsF,GAAoB,cAAP9H,EAAmB,GAGjC,yBAAKyB,UAAU,YAAYgF,MAjChB,CACnB4B,SAAS,WACTa,IAAI,QACJR,QAAQ,OACRS,KAAK,MACL,eAAe,QACfP,UAAW,UA4BEZ,EAEc,cAAPhI,EAEI,kBAACsG,EAAA,EAAD,CAASC,MAAK,gBAAWiB,EAASsB,eAAkBE,OAAK,GACrD,yBAAKvH,UAAU,cACX,kBAAC,IAAD,CAAuBkB,IAAG,UAAK6E,EAAL,YAAyBxE,QAAS,kBAAIE,EAASqE,EAAUC,SAG9F,GACO,cAAPxH,EAEG,kBAACsG,EAAA,EAAD,CAASC,MAAK,gBAAWiB,EAASsB,eAAkBE,OAAK,GACrD,yBAAKvH,UAAU,cACX,kBAAC,KAAD,CAAwBkB,IAAG,UAAK6E,EAAL,aAA0BxE,QAAS,kBAAIE,EDtFnF,SAACsE,GACpB,MAAM,CACFxH,KAAK4G,EAASG,WACdS,SAASA,GCmFkG8B,CAAU9B,SAGhG,GAGD,SAAPxH,EAAc,GACX,kBAACsG,EAAA,EAAD,CAASC,MAAK,wBAAmBiB,EAASsB,eAAkBE,OAAK,GAC7D,yBAAKvH,UAAU,mBACX,kBAAC,KAAD,CAAiBuB,QAAS,kBAAIE,ED/EpC,SAACsE,GACvB,MAAM,CACFxH,KAAK4G,EAASK,eACdO,SAASA,GC4EsD+B,CAAa/B,SAIxD,UAAPxH,GAAkBiI,EAAW,GAAY,cAAPjI,EAAnB,GACZ,kBAACsG,EAAA,EAAD,CAASC,MAAK,iBAAYiB,EAASsB,eAAkBE,OAAK,GACtD,yBAAKvH,UAAU,gBACX,kBAAC,KAAD,CAAYkB,IAAG,UAAK6E,EAAL,cAA2BxE,QAAS,kBAAIE,ED7G/D,SAACsE,GACrB,MAAM,CACFxH,KAAK4G,EAASE,YACdU,SAASA,GC0G+EgC,CAAWhC,gBCtH9FiC,GAAQ,WACjB,IAAIvF,EAAQ,IAAIC,KACZC,EAAOF,EAAQG,UACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAON,EAAQO,cAEnB,OADaL,EAAKpD,WAAWsD,EAAMtD,WAAWwD,EAAKxD,YAI1C0I,GAAiB,WAE1B,OADY/I,KAAKC,OAAM,IAAIuD,MAAOwF,UAAU,MC6DjCC,GA9DS,WAEpB,IAAOrG,EAAUH,aAAY,SAAAC,GAAK,OAAEA,EAAMG,eAAnCD,SACP,EAAsBH,aAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAAxCX,EAAP,EAAOA,IAAIN,EAAX,EAAWA,UACLa,EAASC,cACf,EAA4BM,qBAA5B,mBAAM+D,EAAN,KAAeqC,EAAf,KAKMC,EAAgB,WACftC,IACCtE,EHnBS,SAACsE,GAClB,MAAM,CACFxH,KAAK4G,EAASC,SACdW,SAASA,GGgBIuC,CAAQvC,IACjBqC,EAAY,IACZ9E,SAASC,eAAe,kBAAkBE,SAUlD,OACI,kBAAC,IAAM8E,SAAP,UACkBhG,IAAjB3B,EAAUM,IAAoBN,EAAUM,GAAK8G,MAC9C,yBAAKhI,UAAU,qBACX,0BAAMA,UAAU,eAAhB,aACA,yBAAKA,UAAU,0BACX,0BAAMwI,SAXC,SAACrF,GAChBA,EAAMsF,iBACNJ,KASsCrI,UAAU,oBAEpC,2BAAOF,MAAOiG,EAAUzF,SAzB1B,SAAC6C,GACXiF,EAAYjF,EAAME,OAAOvD,QAwB8BE,UAAU,cAAcJ,GAAG,iBAAiBK,YAAY,WAAWmB,QAAQ,WAAWC,MAAM,YAEvI,kBAACF,EAAA,EAAD,CACAC,QAAQ,YACR7C,KAAK,SACL8C,MAAM,UACNrB,UAAS,sBAAiB+F,EAAS,UAAU,YAC7CzE,UAAW,kBAAC,IAAD,QAGX,+BAGR,yBAAKtB,UAAU,0BAEViD,OAAOC,KAAKpB,GAAUd,KAAI,SAACE,GACpB,OACAY,EAASZ,GAAKwH,aAAoC,cAArB5G,EAASZ,GAAK3C,KAAjB,GACzB,kBAAC,GAAD,CAAW2C,IAAKA,EAAK3C,KAAMuD,EAASZ,GAAK3C,KAAM8H,UAAWvE,EAASZ,GAAKwH,YAAapC,QAASxE,EAASZ,GAAKG,MAAO0E,SAAU7E,EAAKqF,OAAQzE,EAASZ,GAAKqF,OAAQC,WAAY1E,EAASZ,GAAKsF,WAAYC,KAAM7H,EAAekD,EAASZ,GAAKuF,aAQzP,KCnCMkC,I,OA1BkB,WAC7B,IAAO7G,EAAUH,aAAY,SAAAC,GAAK,OAAEA,EAAMG,eAAnCD,SACP,EAAsBH,aAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAAxCX,EAAP,EAAOA,IAAIN,EAAX,EAAWA,UACX,OACI,kBAAC,IAAM2H,SAAP,UACkBhG,IAAjB3B,EAAUM,IAAoBN,EAAUM,GAAK8G,MAC9C,yBAAKhI,UAAU,kCACX,0BAAMA,UAAU,oBAAhB,uBACA,yBAAKA,UAAU,8BAEdiD,OAAOC,KAAKpB,GAAUd,KAAI,SAACE,GACpB,OACAY,EAASZ,GAAKwH,YACb,kBAAC,GAAD,CAAWxH,IAAKA,EAAK3C,KAAMuD,EAASZ,GAAK3C,KAAM8H,UAAWvE,EAASZ,GAAKwH,YAAapC,QAASxE,EAASZ,GAAKG,MAAO0E,SAAU7E,EAAKqF,OAAQzE,EAASZ,GAAKqF,OAAQC,WAAY1E,EAASZ,GAAKsF,WAAYC,KAAM7H,EAAekD,EAASZ,GAAKuF,QACzO,QAQZ,M,gDCwFMmC,GAlGU,WAErB,IAAO9G,EAAUH,aAAY,SAAAC,GAAK,OAAEA,EAAMG,eAAnCD,SACP,EAAsBH,aAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAAxCX,EAAP,EAAOA,IAAIN,EAAX,EAAWA,UACX,EAAuCoB,qBAAvC,mBAAO6G,EAAP,KAAqBC,EAArB,KACA,EAAqB9G,qBAArB,mBAAOyE,EAAP,KAAYsC,EAAZ,KACA,EAAyB/G,oBAAS,GAAlC,mBAAOgH,EAAP,KAAcC,EAAd,KACMxH,EAASC,cAuBf,OACI,kBAAC,IAAM6G,SAAP,UACkBhG,IAAjB3B,EAAUM,IAAoBN,EAAUM,GAAK8G,MAC9C,yBAAKhI,UAAU,0BACX,0BAAMA,UAAU,oBAAhB,kBACA,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,sBACX,2BAAOF,MAAO+I,EAAevI,SAAU,SAAA4I,GAAC,OAAEJ,EAAiBI,EAAE7F,OAAOvD,QAAQE,UAAU,mBAAmBJ,GAAG,iBAAiBK,YAAY,gBAAgBmB,QAAQ,WAAWC,MAAM,UAAU9C,KAAK,SACjM,kBAAC,KAAD,CAA0B4K,MAAOC,MAEjC,kBAACC,GAAA,EAAD,CAEErJ,UAAU,eACVF,WAAcyC,IAAPkE,EAAiB,IAAI/D,KAAU,IAAL+D,GAAW,IAAI/D,KAChDpC,SA3BD,SAAAgJ,GACjBP,EAAQ7J,KAAKC,MAAM,IAAIuD,KAAK4G,GAAUpB,UAAU,WAEtC3F,IAAPkE,IACMA,EAAKwB,MAAoB,GAAI,KACpB,EACVc,OAAQxG,KAsBEgH,MAAM,MAMZ,yBAAKvJ,UAAU,2BACX,kBAACwJ,GAAA,EAAD,CACAC,WAAY,CAAE,aAAc,mBAC5BzE,MAAO,CAAC,MAAQ,SAChB3D,MAAM,UACNrB,UAAU,uBACVM,SAAU,SAAA4I,GAAC,OAAED,EAAUC,EAAE7F,OAAOqG,UAChCA,QAASV,IAET,0BAAMhJ,UAAU,kBAAhB,gCAA0DuC,IAAPkE,IAAmBA,EAAKwB,MAAoB,IAAI0B,QAAQ,GAAG,EAA9G,sBACA,kBAACxI,EAAA,EAAD,CACAC,QAAQ,YACRC,MAAM,UACNrB,UAAU,mBACVsB,UAAW,kBAAC,IAAD,MACXC,QAzDO,WACvBE,EL+BkB,SAACoH,EAAchK,EAAUmK,GAC/C,MAAM,CACFzK,KAAK4G,EAASS,cACdiD,cAAcA,EACdpC,KAAK5H,EACLmK,OAAOA,GKpCEY,CAAaf,EAAcpC,EAAKuC,IACzCF,EAAiB,IACjBC,OAAQxG,GACR0G,GAAU,GACV3F,SAASC,eAAe,kBAAkBE,QAqD1BrD,cAAiBmC,IAAPkE,KAGZA,EAAKwB,KAAoB,EACvB,0BAAMjI,UAAU,aAAhB,+BAEA,KAMZ,yBAAKA,UAAU,+BAEViD,OAAOC,KAAKpB,GAAUd,KAAI,SAACE,GACpB,MACqB,cAArBY,EAASZ,GAAK3C,KACb,kBAAC,GAAD,CAAW2C,IAAKA,EAAK3C,KAAMuD,EAASZ,GAAK3C,KAAM8H,UAAWvE,EAASZ,GAAKwH,YAAapC,QAASxE,EAASZ,GAAKG,MAAO0E,SAAU7E,EAAKqF,OAAQzE,EAASZ,GAAKqF,OAAQC,WAAY1E,EAASZ,GAAKsF,WAAYC,KAAM7H,EAAekD,EAASZ,GAAK2I,iBACzO,QAQhB,KC3GMC,GALM,CACjBC,sBAAsB,wBACtBC,2BAA2B,8BCAlBC,GAAgB,WACzB,MAAM,CACF1L,KAAKuL,GAAeC,wBAIfG,GAAqB,SAACC,EAAYC,EAAmB3F,GAC9D,MAAM,CACFlG,KAAKuL,GAAeE,2BACpBI,mBAAmBA,EACnBD,YAAYA,EACZ1F,iBAAiBA,ICcV4F,I,OAtBO,WAClB,MAAsB1I,aAAY,SAAAC,GAAK,OAAEA,EAAMC,oBAAxCX,EAAP,EAAOA,IAAIN,EAAX,EAAWA,UACLa,EAASC,cASf,OACI,kBAAC,IAAM6G,SAAP,KACC3H,EAAUM,GACP,kBAACC,EAAA,EAAD,CAAQnB,UAAU,eAAeoB,QAAQ,YAAYC,MAAM,YAAYE,QAX1D,WAErBE,EAASwI,MACTK,YAAW,WACPC,OAAOC,SAASC,QAAO,KAExB,OAKK,mBAGH,MChBMC,GANC,CACZC,oBAAoB,sBACpBC,SAAS,WACTC,YAAY,eCgBDC,I,OAdH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,QACZvJ,EAASC,cAEf,OACI,yBAAK1B,UAAU,kBACX,yBAAKA,UAAU,aAAa+K,GAC5B,yBAAK/K,UAAU,gBACX,kBAAC,KAAD,CAAYuB,QAAS,kBAAIE,ECI/B,CACFlD,KAAKmM,GAAUG,YACfI,ODNqDD,WEwB9CE,I,OA9BM,WACjB,IAAMzJ,EAASC,cACf,EAA2BC,aAAY,SAAAC,GAAK,OAAEA,EAAMuJ,eAA7CC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,MACnB,EAAkCrJ,mBAAS,IAA3C,mBAAMsJ,EAAN,KAAkBC,EAAlB,KASA,OACI,yBAAKvL,UAAS,4BAAuBoL,EAAY,4BAA4B,8BACzE,0BAAM5C,SATK,SAACrF,GAChBA,EAAMsF,iBACH6C,EAAYvK,OAAO,IACtBU,EDLE,CACFlD,KAAKmM,GAAUE,SACfY,SCGiBF,IACjBC,EAAe,MAKmBvL,UAAS,qBAAgBoL,EAAY,qBAAqB,uBACpF,2BAAOtL,MAAOwL,EAAa/M,KAAK,OAAO0B,YAAY,WAAWD,UAAU,aAAaM,SAAU,SAAA4I,GAAC,OAAEqC,EAAerC,EAAE7F,OAAOvD,UAC1H,4BAAQE,UAAS,qBAAgBsL,EAAYvK,OAAO,EAAE,UAAU,WAA/C,YAA6DqK,EAAY,qBAAqB,sBAAwB7M,KAAK,SAAS6B,SAAUkL,EAAYvK,QAAQ,GAAnL,QAEJ,yBAAKf,UAAU,mBACViD,OAAOC,KAAKmI,GAAOrK,KAAI,SAACE,GACjB,OACA,kBAAC,GAAD,CAAO6J,QAASM,EAAMnK,GAAM8J,QAAS9J,W,SC0B9CuK,I,OAjDK,WAChB,MAAiB9J,aAAY,SAAAC,GAAK,OAAEA,EAAM8J,qBAAnCxK,EAAP,EAAOA,IAAIyK,EAAX,EAAWA,KACPC,EAAa,GACb3E,GAAQ,EACZ,GAAGhE,OAAOC,KAAKyI,GAAM5K,OAAO,GAAKkC,OAAOC,KAAKyI,EAAKzK,IAAMH,OAAO,EAAG,CAChE,IAAI8K,EAAY,GACZC,EAAS,GACTC,EAAS,GACTC,EAAa,GAGjB,GAAG/I,OAAOC,KAAKyI,GAAM5K,OAAO,EAAE,CAC9B,IAAIkL,EAAIN,EAAKzK,GAAKgL,SAElB,IAAI,IAAIC,KAAKF,EACTJ,EAAYO,KAAKD,EAAE9E,eAEnByE,EAASM,MAAOH,EAAIE,GAAG1F,KAAM,MAAMkD,QAAQ,IAC3CoC,EAASK,KAAKH,EAAIE,GAAG9K,OACrB2K,EAAaI,KAAK,oBAMtBR,EAAe,CACXS,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,aACPZ,KAAMG,EACN/E,gBAAiBgF,EACjBS,YAAaR,EACbS,YAAa,EACbC,YAAa,MAIrBzF,GAAQ,EAEV,OACI,yBAAKjH,UAAS,iCAA4BiH,EAAQ,GAAG,4BAChDhE,OAAOC,KAAKyI,GAAM5K,OAAO,GAAKkC,OAAOC,KAAKyI,EAAKzK,IAAMH,OAAO,EAC7D,kBAAC,YAAD,CAAU4K,KAAMC,IACf,MCoBEe,I,OAhEc,WACzB,MAAiBhL,aAAY,SAAAC,GAAK,OAAEA,EAAM8J,qBAAnCxK,EAAP,EAAOA,IAAIyK,EAAX,EAAWA,KAEPC,EAAa,GACb3E,GAAQ,EACZ,GAAGhE,OAAOC,KAAKyI,GAAM5K,OAAO,GAAKkC,OAAOC,KAAKyI,EAAKzK,IAAMH,OAAO,EAAG,CAChE,IAAI8K,EAAY,GACZC,EAAS,GACTC,EAAS,GACTC,EAAa,GAGjB,GAAG/I,OAAOC,KAAKyI,GAAM5K,OAAO,EAAE,CAC9B,IAAIkL,EAAIN,EAAKzK,GAAKgL,SAElB,IAAI,IAAIC,KAAKF,EACTJ,EAAYO,KAAKD,EAAE9E,eAEnByE,EAASM,MAAOH,EAAIE,GAAG1F,KAAM,MAAMkD,QAAQ,IAC3CoC,EAASK,KAAKH,EAAIE,GAAG9K,OACrB2K,EAAaI,KAAK,oBAGxBP,EAAYO,KAAK,wBACjB,IAAIvK,EAAiB8J,EAAKzK,GAAK0L,cAC3BC,EAAgB5J,OAAOC,KAAKrB,EAAiBiL,aAAajL,EAAiBX,MAAM,GACrF4K,EAASM,MAAMvK,EAAiBiL,aAAajL,EAAiBX,KAAK2L,GAAiB,MAAMlD,QAAQ,IAClGoC,EAASK,KAAK,kBACdJ,EAAaI,KAAK,oBAClB,IAAIW,EAAW,EAETA,EADHlL,EAAiBjB,UAAUiB,EAAiBX,KAAK2L,GAAiB,GAClD,EAAEhL,EAAiBjB,UAAUiB,EAAiBX,KAAK2L,GAAkBhL,EAAiBiL,aAAajL,EAAiBX,KAAK2L,GAG7HhL,EAAiBiL,aAAajL,EAAiBX,KAAK2L,GAAiBhL,EAAiBjB,UAAUiB,EAAiBX,KAAK2L,GAErIhB,EAAYO,KAAK,qBACjBN,EAASM,MAAMW,EAAW,MAAMpD,QAAQ,IACxCoC,EAASK,KAAK,oBACdJ,EAAaI,KAAK,oBAChBR,EAAe,CACXS,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,wBACPZ,KAAMG,EACN/E,gBAAiBgF,EACjBS,YAAaR,EACbS,YAAa,EACbC,YAAa,MAIrBzF,GAAQ,EAEV,OACI,yBAAKjH,UAAS,0CAAqCiH,EAAQ,GAAG,0BACzDhE,OAAOC,KAAKyI,GAAM5K,OAAO,GAAKkC,OAAOC,KAAKyI,EAAKzK,IAAMH,OAAO,EAC7D,kBAAC,OAAD,CAAK4K,KAAMC,IACV,MCUEoB,I,OApEY,WACvB,MAAiBrL,aAAY,SAAAC,GAAK,OAAEA,EAAM8J,qBAAnCxK,EAAP,EAAOA,IAAIyK,EAAX,EAAWA,KACPsB,EAAS,KAEThG,GAAQ,EACZ,GAAGhE,OAAOC,KAAKyI,GAAM5K,OAAO,GAAKkC,OAAOC,KAAKyI,EAAKzK,IAAMH,OAAO,EAAG,CAChE,IAAImM,EAAM,GAGNC,EAAQ,GACRC,EAAiB,CACjBb,MAAM,iBACNZ,KAAK,GACL1G,MAAK,EACLuH,YAAY,mBACZa,QAAQ,IAERC,EAAc,CAChBf,MAAM,cACNZ,KAAK,GACL1G,MAAK,EACLuH,YAAY,kBACZa,QAAQ,IAEV,GAAGpK,OAAOC,KAAKyI,GAAM5K,OAAO,EAAE,CAE9B,IAAI,IAAIoL,KAAKR,EAAK,CAEduB,EAAMd,KAAKT,EAAKQ,GAAGxJ,MAEnB,IAAI4K,EAAS5B,EAAKQ,GAAGS,cAAc1L,IAElC,IAAI,IAAIsM,KAAe7B,EAAKQ,GAAL,cAAyBW,aAAaS,GAC3DH,EAAiBzB,KAAKS,MAAMT,EAAKQ,GAAGS,cAAcE,aAAaS,GAAUC,GAAa,MAAM7D,QAAQ,IAEtG,IAAI,IAAIjF,KAAgBiH,EAAKQ,GAAGS,cAAchM,UAAU2M,GAAU,CAE9D,IAAIR,EAAW,EAEbA,EADDpB,EAAKQ,GAAGS,cAAchM,UAAU2M,GAAU7I,GAAc,GAC1C,EAAEiH,EAAKQ,GAAGS,cAAchM,UAAU2M,GAAU7I,GAAeiH,EAAKQ,GAAGS,cAAcE,aAAaS,GAAU7I,GAG7GiH,EAAKQ,GAAGS,cAAcE,aAAaS,GAAU7I,GAAciH,EAAKQ,GAAGS,cAAchM,UAAU2M,GAAU7I,GAEjH4I,EAAc3B,KAAKS,MAAMW,EAAW,MAAMpD,QAAQ,KAGzDwD,EAAQ,CAACC,EAAiBE,GAG1BrG,GAAQ,EAGVgG,EAAW,CACTZ,OAFWa,EAGXZ,SAAUa,GAIZ,OACI,yBAAKnN,UAAS,yCAAoCiH,EAAQ,GAAG,2BACxDhE,OAAOC,KAAKyI,GAAM5K,OAAO,GAAKkC,OAAOC,KAAKyI,EAAKzK,IAAMH,OAAO,EAC7D,kBAAC,QAAD,CAAMf,UAAU,YAAY2L,KAAMsB,IACjC,M,8DCxCEQ,I,OAxBF,WAET,OACI,yBAAKzN,UAAU,mBAEP,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,QAAf,eAOR,yBAAKA,UAAU,mBACP,yBAAKA,UAAU,eCiEpB0N,I,OA7DA,WACX,IAAMjM,EAASC,cASf,OAEI,yBAAK1B,UAAU,yBACV,kBAAC,GAAD,MACD,yBAAKA,UAAU,kBACX,kBAAC2N,GAAA,EAAD,CAAYC,aAAW,QAASvM,MAAM,UAAUE,QAbhD,WACRE,EAASwE,KACTxE,EAAS/C,KACT4L,YAAW,WACPC,OAAOC,SAASC,QAAO,KAExB,OAOqE,kBAAC,KAAD,QAGpE,yBAAKzK,UAAU,aACX,kBAAC6N,GAAA,EAAD,CAAKxM,MAAM,UAAUuM,aAAW,MAAMrM,QAAS,kBAAIE,ENtCzD,CACFlD,KAAKmM,GAAUC,wBMsCF,kBAAC,KAAD,OAEL,kBAAC,GAAD,CAAgB3K,UAAU,4BAE9B,yBAAKA,UAAU,sBACX,kBAAC,EAAD,OAGJ,kBAAC,IAAMuI,SAAP,KACI,yBAAKvI,UAAU,0BACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qBAEX,kBAAC,GAAD,CAAmBA,UAAU,iBAC7B,kBAAC,GAAD,CAAoB8N,SAAS,kBAC7B,kBAAC,GAAD,CAA4B9N,UAAU,2BAG1C,yBAAKA,UAAU,yBACZ,kBAAC,GAAD,QAKP,yBAAKA,UAAU,mBAEX,yBAAKA,UAAU,mBACX,kBAAC,GAAD,MADJ,IAEI,kBAAC,GAAD,OAEJ,yBAAKA,UAAU,mBACX,kBAAC,GAAD,WC/DL+N,OATf,WACE,OACE,yBAAK/N,UAAU,OAEX,kBAAC,GAAD,QCMOgO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qFCLRQ,GAAc,CAChBvN,IAAI,EACJN,UAAU,GACVkM,aAAa,GACb4B,mBAAkB,EAClBC,gBAAgB,MCLdF,GAAc,CAChBG,UAAU,CAAC7J,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,oBACvCwN,SAAS,CAAC9J,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,oBACtCyN,QAAQ,CAAC/J,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,kBACrC0N,KAAK,CAAChK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,qBAClC2N,UAAU,CAACjK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,oBACvC4N,MAAM,CAAClK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,qBACnC6N,UAAU,CAACnK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,oBACvC8N,IAAI,CAACpK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,mBACjC+N,KAAK,CAACrK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,qBAClCgO,WAAW,CAACtK,UAAS,EAAK0B,KAAK,EAAEpF,MAAM,iBACvCiO,aAAa,CAACvK,UAAS,EAAM0B,KAAK,EAAEpF,MAAM,qBAC1CkO,cAAc,cCZZC,GAAe,CACjB1N,SAAS,GACT2N,WAAW,KACXC,aAAa,KACbC,oBAAoB,MCJlBlB,GAAc,CACZvN,IAAI,EACJyK,KAAK,ICFP8C,GAAc,CAChBzD,QAAQ,EACRK,MAAM,GACND,aAAY,GCIVwE,GAAc,CAChB1O,IAAI,OACJ2O,aACAC,UAAU,CAAC,mBAAmB,sBAIrBC,GAAYC,aAAgB,CACrCnO,iBLP0B,WAAgC,IAA/BD,EAA8B,uDAAxB6M,GAAewB,EAAS,uCACzD,OAAOA,EAAO1R,MACV,KAAKV,EAAcC,gBACf8D,EAAMV,IAAI+B,OAAOC,KAAKtB,EAAMhB,WAAWG,OAEvC,IAAImP,EAASlI,KAGb,OAFApG,EAAMhB,UAAUgB,EAAMV,KAAtB,gBAA6BgP,EAAUD,EAAOpM,SAC9CjC,EAAMkL,aAAalL,EAAMV,KAAzB,gBAAgCgP,EAAUD,EAAOpM,SACjD,6BACOjC,GADP,IAEIV,IAAIU,EAAMV,IACVN,UAAU,gBAAIgB,EAAMhB,WACpBkM,aAAa,gBAAIlL,EAAMkL,gBAE/B,KAAKjP,EAAcE,gBAEf,IAAIuL,EAAStB,KAEb,OADApG,EAAMhB,UAAUgB,EAAMV,KAAKoI,GAAU1H,EAAMhB,UAAUgB,EAAMV,KAAKoI,GAAUtK,SAASiR,EAAO3R,SAC1F,6BACOsD,GADP,IAEIhB,UAAU,gBAAIgB,EAAMhB,WACpB8N,mBAAkB,IAE1B,KAAK7Q,EAAcO,qBACf,oCACOwD,GADP,IAEI+M,gBAAgBsB,EAAO3R,UAE/B,KAAKT,EAAcG,gBAEf,OADA4D,EAAM8M,mBAAkB,EACxB,6BACO9M,GADP,IAEI8M,mBAAkB,EAClBC,gBAAgB,OAExB,KAAK9Q,EAAcI,mBACf,oCACO2D,GADP,IAEI8M,mBAAkB,IAE1B,KAAK7Q,EAAcK,iBACf,OAAO0D,EACX,KAAK/D,EAAcM,gBACf,MAAM,CACF+C,IAAI,EACJN,UAAU,GACVkM,aAAa,GACb4B,mBAAkB,EAClBC,gBAAgB,MAExB,QACI,OAAO/M,IK3Cf4C,mBJA4B,WAA+B,IAAD,EAA7B5C,EAA6B,uDAAvB6M,GAAcwB,EAAS,uCAC1D,OAAOA,EAAO1R,MAEV,KAAKyF,EAAgBC,YACjB,IAAIkM,EAAW,GACXC,EAAQH,EAAO5L,UAenB,MAbsB,eAAnB4L,EAAO5L,WAENzC,EAAMA,EAAM2N,eAAexK,UAAS,EACpCnD,EAAMqO,EAAO5L,WAAWU,UAAS,EACjCnD,EAAM2N,cAAcU,EAAO5L,UAC3B8L,EAAWvO,EAAM2N,gBAIjB3N,EAAMA,EAAM2N,eAAexK,UAAS,EACpCnD,EAAM2N,cAAcU,EAAO5L,UAC3B8L,EAAWvO,EAAM2N,eAErB,6BACO3N,GADP,wBAEKwO,EAFL,gBAEkBxO,EAAMwO,KAFxB,eAGKD,EAHL,gBAGqBvO,EAAMuO,KAH3B,IAKJ,KAAKnM,EAAgBE,YAEjB,OADAtC,EAAMA,EAAM2N,eAAexK,UAAS,EACpC,6BACOnD,GADP,mBAEKqO,EAAO5L,UAFZ,gBAE2BzC,EAAMqO,EAAO5L,cAE5C,KAAKL,EAAgBG,gBACjB,IAAI9C,EAAMO,EAAMqO,EAAO5L,WAAWhD,MAClC,OAAOA,EACX,QACI,OAAOO,IIlCfG,YHTqB,WAAgC,IAA/BH,EAA8B,uDAAxB4N,GAAeS,EAAS,uCACpD,OAAOA,EAAO1R,MACV,KAAK4G,EAASC,SACV,QAAqC7C,IAAlCX,EAAME,SAASmO,EAAOlK,UAAsB,CAC3C,IAAImG,EAAS,CACTzF,KAAK,EACLF,QAAO,EACPmC,aAAY,EACZrH,MAAM,mBACNmF,WAAW,EACXjI,KAAK,QAETqD,EAAME,SAASmO,EAAOlK,UAAUmG,EAEpC,oCACOtK,GADP,IAEIE,SAAS,gBAAIF,EAAME,YAG3B,KAAKqD,EAASE,YAKV,cAJOzD,EAAME,SAASmO,EAAOlK,UAC1BnE,EAAM6N,aAAaQ,EAAOlK,WACzBnE,EAAM6N,WAAW,MAErB,6BACO7N,GADP,IAEIE,SAAS,gBAAIF,EAAME,UACnB2N,WAAW7N,EAAM6N,WACjBC,aAAa,OAErB,KAAKvK,EAASG,WAGV,OAFA1D,EAAME,SAASmO,EAAOlK,UAAUQ,QAAO,EACvC3E,EAAM6N,WAAW,KACjB,6BACO7N,GADP,IAEIE,SAAS,gBAAIF,EAAME,UACnB2N,WAAW7N,EAAM6N,aAEzB,KAAKtK,EAASI,WACV,IAAI,IAAIrE,KAAOU,EAAME,SACjBF,EAAME,SAASZ,GAAKqF,QAAO,EAY/B,OAVA3E,EAAME,SAASmO,EAAOlK,UAAUQ,QAAO,OACnBhE,IAAjB0N,EAAO3R,cAA0CiE,IAAnB0N,EAAOrP,WAAgE,cAAvCgB,EAAME,SAASmO,EAAOlK,UAAUxH,OAE7FqD,EAAME,SAASmO,EAAOlK,UAAUU,KAAKzH,SAAS4C,EAAME,SAASmO,EAAOlK,UAAUU,MAAMzH,SAASiR,EAAO3R,SAIpGsD,EAAME,SAASmO,EAAOlK,UAAUS,YAAc5E,EAAME,SAASmO,EAAOlK,UAAUU,KAAOzH,SAASiR,EAAOrP,WAAa5B,SAAS,MAAM2K,QAAQ,IAE7I/H,EAAM6N,WAAWQ,EAAOlK,SACxB,6BACOnE,GADP,IAEIE,SAAS,gBAAIF,EAAME,UACnB2N,WAAW7N,EAAM6N,aAEzB,KAAKtK,EAASK,eAKV,OAJA5D,EAAME,SAASmO,EAAOlK,UAAU2C,aAAY,EACzC9G,EAAM6N,aAAaQ,EAAOlK,WACzBnE,EAAM6N,WAAW,MAErB,6BACO7N,GADP,IAEIE,SAAS,gBAAIF,EAAME,UACnB2N,WAAW7N,EAAM6N,aAEzB,KAAKtK,EAASM,eACV,IAAI,IAAI0G,KAAKvK,EAAME,SAEZqK,IAAI8D,EAAOlK,WACVnE,EAAME,SAASqK,GAAG5F,QAAO,GAIjC,GAAqB,eAAlB0J,EAAOlK,SAGN,QAAsCxD,IAAlCX,EAAME,SAASmO,EAAOlK,UAAuB,CACjD,IAAImG,EAAS,CACTzF,KAAK,EACLF,QAAO,EACPmC,aAAY,EACZrH,MAAM4O,EAAO5O,MACbmF,WAAW,EACXjI,KAAK,SAETqD,EAAME,SAASmO,EAAOlK,UAAUmG,EAChCtK,EAAM6N,WAAWQ,EAAOlK,cAMfnE,EAAME,SAASmO,EAAOlK,UAAUQ,QAOjC3E,EAAME,SAASmO,EAAOlK,UAAUQ,QAAO,EACvC3E,EAAM6N,WAAWQ,EAAOlK,WANxBnE,EAAME,SAASmO,EAAOlK,UAAUQ,QAAO,EACvC3E,EAAM6N,WAAW,MAY7B,oCACO7N,GADP,IAEIE,SAAS,gBAAIF,EAAME,UACnB2N,WAAW7N,EAAM6N,aAErB,KAAKtK,EAASO,gBACV,oCACO9D,GADP,IAEIE,SAAS,GACT2N,WAAW,KACXC,aAAa,OAErB,KAAKvK,EAASQ,kBACV,IAAI,IAAI0K,KAAMzO,EAAME,SAChBF,EAAME,SAASuO,GAAI3H,aAAY,EAGnC,oCACO9G,GADP,IAEI6N,WAAW,KACX3N,SAAS,gBAAIF,EAAME,UACnB4N,aAAa,OAErB,KAAKvK,EAASS,cACV,QAA0CrD,IAAvCX,EAAME,SAASmO,EAAOpH,eAA2B,CAChD,IAAIyH,EAAc,CACd7J,KAAKwJ,EAAOxJ,KAAKvH,KAAKC,MAAM,IAAIuD,KAAO,KACvCgG,aAAY,EACZrH,MAAM,kBACNmF,WAAW,IACXqD,cAAcoG,EAAOxJ,KAAKvH,KAAKC,MAAM,IAAIuD,KAAO,KAChDsG,OAAOiH,EAAOjH,OACdzK,KAAK,aAGTqD,EAAME,SAASmO,EAAOpH,eAAeyH,EAEzC,oCACO1O,GADP,IAEIE,SAAS,gBAAIF,EAAME,YAG3B,KAAKqD,EAASU,gBACVjE,EAAM8N,aAAa,KACnB,IAAIa,EAAS,EASb,IAAI,IAAIrP,KARuB,OAA5BU,EAAM+N,qBACL/N,EAAM+N,oBAAoBM,EAAO3R,QACjCiS,EAAS,IAGTA,EAASN,EAAO3R,QAAQsD,EAAM+N,oBAC9B/N,EAAM+N,oBAAoBM,EAAO3R,SAEtBsD,EAAME,SAEgB,cAA3BF,EAAME,SAASZ,GAAK3C,OAAwD,IAAlCqD,EAAME,SAASZ,GAAKwH,cAC5D9G,EAAME,SAASZ,GAAK2I,cAAc7K,SAAS4C,EAAME,SAASZ,GAAK2I,eAAe7K,SAASuR,GACpF3O,EAAME,SAASZ,GAAK2I,eAAe,IAAkC,IAA7BjI,EAAME,SAASZ,GAAK8H,QAC3DpH,EAAME,SAASZ,GAAKwH,aAAY,EAChC9G,EAAM8N,aAAaxO,GAEfU,EAAME,SAASZ,GAAK2I,eAAe,IAAkC,IAA7BjI,EAAME,SAASZ,GAAK8H,SAChEpH,EAAM8N,aAAaxO,EACnBU,EAAME,SAASZ,GAAK2I,cAAcjI,EAAME,SAASZ,GAAKuF,MAE1D7E,EAAME,SAASZ,GAAKsF,YAAc5E,EAAME,SAASZ,GAAK2I,cAAgBjI,EAAME,SAASZ,GAAKuF,KAAOzH,SAAS,MAAM2K,QAAQ,IAIpI,oCACO/H,GADP,IAEIE,SAAS,gBAAIF,EAAME,UACnB4N,aAAc9N,EAAM8N,aACpBC,oBAAoB/N,EAAM+N,sBAEtC,QACI,OAAO/N,IG/Kf8J,kBFb2B,WAA+B,IAA9B9J,EAA6B,uDAAvB6M,GAAcwB,EAAS,uCACzD,OAAOA,EAAO1R,MACV,KAAKuL,GAAeC,sBAEhB,uBACOnI,GAEX,KAAKkI,GAAeE,2BAChBpI,EAAMV,IAAI+B,OAAOC,KAAKtB,EAAM+J,MAAM5K,OAClC,IAAI4B,EAAKqF,KACLkE,EAAS+D,EAAO9F,YACpB,IAAI,IAAIjJ,KAAOgL,EACY,cAArBA,EAAShL,GAAK3C,aACN2N,EAAShL,GAGvB,IAAIsP,EAAgBP,EAAO7F,mBACvBwC,EAAcqD,EAAOxL,iBAQzB,OANA7C,EAAM+J,KAAK/J,EAAMV,KAAK,CAClByB,KAAKA,EACLuJ,SAASA,EACTsE,gBAAgBA,EAChB5D,cAAcA,GAElB,6BACOhL,GADP,IAEIV,IAAIU,EAAMV,IACVyK,KAAK,gBAAI/J,EAAM+J,QAEvB,QACI,OAAO/J,IEjBfuJ,YDdqB,WAA+B,IAA9BvJ,EAA6B,uDAAvB6M,GAAcwB,EAAS,uCACnD,OAAOA,EAAO1R,MACV,KAAKmM,GAAUC,oBACX,oCACO/I,GADP,IAEIwJ,aAAcxJ,EAAMwJ,cAE5B,KAAKV,GAAUE,SAEX,OADAhJ,EAAMyJ,MAAMzJ,EAAMoJ,SAASiF,EAAOzE,SAClC,6BACO5J,GADP,IAEIoJ,QAAQpJ,EAAMoJ,QAAQ,EACtBK,MAAM,gBAAIzJ,EAAMyJ,SAExB,KAAKX,GAAUG,YAEX,cADOjJ,EAAMyJ,MAAM4E,EAAOhF,QAC1B,6BACOrJ,GADP,IAEIyJ,MAAM,gBAAIzJ,EAAMyJ,SAExB,QACI,OAAOzJ,MCJN6O,GAAgBC,aAAed,GAAcG,I,yCCnBhDY,I,aAaOC,IAbjB,SAAUD,GAAV,+EAC8B,OADFtM,EAA5B,EAA4BA,UAA5B,SACoCwM,cAAO,SAAAjP,GAAK,OAAEA,EAAM4C,sBADxD,OAEoB,OADRsM,EADZ,gBAE0BD,cAAO,SAAAjP,GAAK,OAAEA,EAAMG,eAF9C,OAGI,OADIoI,EAFR,gBAGU4G,c1B+BiBhL,E0B/BA1B,E1B+BShD,E0B/BCyP,EAAkBzM,GAAWhD,M1BgCxD,CACF9C,KAAK4G,EAASM,eACdM,SAASA,EACT1E,MAAMA,K0BtCd,UAIoB,eAAZgD,IAAuE,IAAzC8F,EAAYrI,SAASuC,GAAWkC,OAJtE,iBAKQ,OALR,UAKcwK,aAAItS,KALlB,gCAQQ,OARR,UAQcsS,aAAIvS,KARlB,kC1BkC0B,IAACuH,EAAS1E,I0BlCpC,IAaO,SAAUuP,KAAV,kEACH,OADG,SACGI,aAAUhN,EAAgBC,YAAY0M,IADzC,wC,iBCZGM,I,aAMAC,I,aAKAC,I,aASOrL,I,aAIA+B,I,aAIAC,I,aAIAC,IAhCjB,SAAUkJ,GAAV,qEAEI,OAFJ,EAA4B1S,KAA5B,EAAiCwH,SAAjC,EAA0CzH,QAA1C,SAEUyS,aAAItS,KAFd,wCAMA,SAAUyS,GAAV,qEAEI,OAFJ,EAA4B3S,KAA5B,EAAiCwH,SAAjC,SAEUgL,aAAIvS,KAFd,wCAKA,SAAU2S,GAAV,qEACsB,OADtB,EAA+B5S,KAA/B,EAAoCwH,SAApC,SAC4B8K,cAAO,SAAAjP,GAAK,OAAEA,EAAMG,eADhD,UAGgC,OAHhC,OAGmB0N,WAHnB,gBAIQ,OAJR,SAIcsB,aAAIvS,KAJlB,wCASO,SAAUsH,KAAV,kEACH,OADG,SACGkL,aAAU7L,EAASI,WAAY0L,IADlC,wCAIA,SAAUpJ,KAAV,kEACH,OADG,SACGmJ,aAAU7L,EAASG,WAAY4L,IADlC,wCAIA,SAAUpJ,KAAV,kEACH,OADG,SACGkJ,aAAU7L,EAASK,eAAe2L,IADrC,wCAIA,SAAUpJ,KAAV,kEACH,OADG,SACGiJ,aAAU7L,EAASE,YAAY8L,IADlC,wC,oBClCPC,KAAMC,YAEC,I,aCCGC,I,aA8COC,IA9CjB,SAAUD,KAAV,gGAK+D,OAJvDE,EAAI,IAAI9O,KACR+O,EAAGD,EAAEE,WACLC,EAAIH,EAAEI,aACNC,EAAIL,EAAEM,aAJd,SAKqEjB,cAAO,SAAAjP,GAAK,OAAEA,EAAMC,oBALzF,OAMsB,OANtB,SAKWX,EALX,EAKWA,IAAIwN,EALf,EAKeA,kBAAkB5B,EALjC,EAKiCA,aAAa6B,EAL9C,EAK8CA,gBAL9C,UAM4BkC,cAAO,SAAAjP,GAAK,OAAEA,EAAMG,eANhD,WAMUoI,EANV,OASsB,KAAfnL,SAASyS,IAA4B,KAAhBzS,SAAS2S,IAA6B,KAAhB3S,SAAS6S,GAT3D,iBAWQ,OADAtH,OAAOwH,MAAM,wFAVrB,UAWchB,aAAI9G,MAXlB,QAYQK,YAAW,cAGR,KACHC,OAAOC,SAASC,QAAO,GAhB/B,wBAqBI,OAFIzE,EAAkB8G,EAAa5L,GAAK8G,MACpC1J,EAAQ2J,KApBhB,UAqBU8I,aAAI7K,EAAe5H,IArB7B,WAsBkC,OAA3B6L,EAAYuF,eDvBE3J,ECwBNoE,EAAYuF,aDvBvB0B,KAAMY,KAAN,kDAAsDjM,GACtD,CAACa,SAASwK,KAAMa,SAASC,UACzBC,WAAU,IAEE,IAAIC,MACZ,iDACkBC,SCoBnB3D,EA1BP,oBA2B6B,OAAlBC,EA3BX,iBA6BY,OA7BZ,UA6BkBoC,aAAIpS,EAAiBL,IA7BvC,QA8BY,OA9BZ,UA8BkByS,aAAI1S,EAAe,IA9BrC,QAgCY,OAhCZ,UAgCkB0S,aAAIjL,EAAUqE,EAAYsF,WAAW,EAAEzJ,IAhCzD,gCAqCY,OAFIuK,EAASjS,EAAQqQ,EAnCjC,UAqCkBoC,aAAIpS,EAAiBL,IArCvC,QAsCY,OAtCZ,UAsCkByS,aAAI1S,EAAekS,IAtCrC,QAuCY,OAvCZ,UAuCkBQ,aAAIjL,EAAUqE,EAAYsF,WAAWc,EAASvK,IAvChE,kCDDoB,IAACD,ICCrB,IA8CO,SAAUwL,KAAV,kEACH,OADG,SACGP,aAAUnT,EAAcK,iBAAkBoT,IAD7C,wC,iBC/CGgB,I,aAeOC,IAfjB,SAAUD,KAAV,4EAGI,OAHJ,SAGUvB,aAAI3M,EAAW,eAHzB,OAKI,OALJ,SAKU2M,a9B2CA,CACFxS,KAAK4G,EAASQ,oB8BjDtB,OAMsB,OANtB,SAM4BkL,cAAO,SAAAjP,GAAK,OAAEA,EAAMG,YAAYD,YAN5D,OAO6B,OADnBqI,EANV,gBAOmC0G,cAAO,SAAAjP,GAAK,OAAEA,EAAM4C,sBAPvD,OAQ2B,OADjB4F,EAPV,iBAQiCyG,cAAO,SAAAjP,GAAK,OAAEA,EAAMC,oBARrD,QASI,OADM4C,EARV,iBASUsM,aAAI7G,GAAqBC,EAAYC,EAAmB3F,IATlE,QAUI,OAVJ,UAUUsM,aAAI9K,KAVd,QAWI,OAXJ,UAWU8K,aAAIrS,KAXd,yCAeO,SAAU6T,KAAV,kEACH,OADG,SACGvB,aAAUlH,GAAeC,sBAAuBuI,IADnD,wC,iBCfUE,IAAV,SAAUA,KAAV,kEACH,OADG,SACGC,aAAI,CAAC1D,aAAK6B,IACZ7B,aAAKjJ,IACLiJ,aAAKlH,IACLkH,aAAKjH,IACLiH,aAAKhH,IACLgH,aAAKwC,IACLxC,aAAKwD,MAPN,wCCCP,IAAMG,GAAeC,eAEfC,GAAW,CAACF,IACLG,GAAMC,aAAYrC,GAAgBsC,KAAe,WAAf,EAAmBH,KAClEF,GAAeM,IAAIR,IACZ,IAAMS,GAAUC,aAAaL,ICApCM,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,KAAD,CAAaI,UAAWA,IACtB,kBAAC,GAAD,QAGJ3P,SAASC,eAAe,SAM1ByK,O","file":"static/js/main.ca1f154d.chunk.js","sourcesContent":["const TotalTimeType={\n    SAVE_TOTAL_TIME:'SAVE_TOTAL_TIME',\n    START_COUNTDOWN:'START_COUNTDOWN',\n    PAUSE_COUNTDOWN:'PAUSE_COUNTDOWN',\n    SET_COUNTDOWN_TRUE:'SET_COUNTDOWN_TRUE',\n    UPDATE_COUNTDOWN:'UPDATE_COUNTDOWN',\n    REMOVE_ALL_TIME:'REMOVE_ALL_TIME',\n    UPDATE_LAST_RUN_TIME:'UPDATE_LAST_RUN_TIME',\n}\nexport default TotalTimeType; ","import TotalTimeType from './TotalTime.type';\n\n\nexport const saveTotalTime=(timeInSec)=>{\n    return({\n        type: TotalTimeType.SAVE_TOTAL_TIME,\n        payload: timeInSec\n        })\n}\n\nexport const startCountDown=(seconds)=>{\n    return{\n        type:TotalTimeType.START_COUNTDOWN,\n        seconds:seconds,\n    }\n}\n\nexport const pauseCountDown=()=>{\n    return{\n        type:TotalTimeType.PAUSE_COUNTDOWN,\n    }\n}\n\nexport const setCountDownTrue=()=>{\n    return {\n        type:TotalTimeType.SET_COUNTDOWN_TRUE,\n    }\n}\n\nexport const updateCountDown=()=>{\n    return{\n        type:TotalTimeType.UPDATE_COUNTDOWN\n    }\n}\n\nexport const removeAllTime=()=>{\n    return{\n        type:TotalTimeType.REMOVE_ALL_TIME,\n    }\n}\n\nexport const updateLastRunSec=(seconds)=>{\n    return{\n        type:TotalTimeType.UPDATE_LAST_RUN_TIME,\n        seconds:seconds,\n    }\n}","\nexport const ArrayToSeconds=(timeArr)=>{\n    const hh=(parseInt(timeArr[0])*10)+parseInt(timeArr[1]);\n    const mm=(parseInt(timeArr[2])*10)+parseInt(timeArr[3]);\n    const ss=(parseInt(timeArr[4])*10)+parseInt(timeArr[5]);\n    let seconds=(hh*3600)+(mm*60)+(ss);\n    //console.log(seconds)\n    return(seconds)\n}\n\nexport const SecondsToArray=(timeInSec)=>{\n    let timeArr=[0,0,0,0,0,0];\n    if(timeInSec<0){\n        timeInSec=timeInSec*-1;\n        timeArr[6]='-';\n    }\n    let totalSeconds=parseInt(timeInSec);\n    let hour=Math.floor(totalSeconds/3600);\n    //console.log(hour)\n    let hourSec=hour*3600;\n    let minutes=Math.floor((totalSeconds-(hourSec))/60);\n    let seconds=totalSeconds-(hourSec)-(minutes*60);\n    \n    \n    if(hour<10){\n        timeArr[1]=hour;\n    }\n    else{\n        let strhour=hour.toString();\n        timeArr[0]=strhour.substr(0,1);\n        timeArr[1]=strhour.substr(1,);\n    }\n    if(minutes<10){\n        timeArr[3]=minutes;\n    }\n    else{\n        let strMinutes=minutes.toString();\n        timeArr[2]=strMinutes.substr(0,1);\n        timeArr[3]=strMinutes.substr(1,);\n    }\n    if(seconds<10){\n        timeArr[5]=seconds;\n    }\n    else{\n        let strSeconds=seconds.toString();\n        timeArr[4]=strSeconds.substr(0,1);\n        timeArr[5]=strSeconds.substr(1,);\n    }\n    //console.log(timeArr);\n    return timeArr;\n}\n//console.log(SecondsToArray(-3))\n//console.log(SecondsToArray(ArrayToSeconds([1,1,5,8,0,3])))\n\n\n","import React from 'react'\n\nfunction TimeInput({id,placeHolder,value,cls}) {\n    \n    return (\n        <>\n        <input \n            className={cls} \n            placeholder={placeHolder} \n            type='text' \n            name={id}  \n            id={id} \n            value={value} \n            maxLength='1'\n            disabled={id!==0?true:false}\n        >\n        </input>\n        {\n            id%2!==0?<div className='timerText'>{placeHolder}</div>:''\n        } \n        \n        </>\n    )\n}\n\nexport default TimeInput;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport TimeInput from '../timeInputComponent/timeInput.component';\nfunction TimeCard({onChange,onFocus,onKeyDown,timeState,timeBoxes,cls,displayCondition,timeArr,totalTime,timeKey,submitTime}) {\n    // console.log(totalTime);\n    // console.log(timeKey);\n    return (\n        <div className='timcardsContainer' onChange={onChange} onFocus={onFocus} onKeyDown={onKeyDown}>\n            {timeState.length>6?<span className='timeBoxNegative'>-</span>:''}\n            {timeBoxes.map((box)=>(\n                <TimeInput\n                    key={box.id}\n                    id={box.id}\n                    placeHolder={box.placeholder}\n                    cls={cls}\n                    value={(displayCondition)?timeState[box.id]:timeArr[box.id]}\n                />\n            ))}\n\n            \n            {totalTime[timeKey]?'':\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            name='submitButton'\n            className='saveTimeBtn'\n            startIcon={<CheckIcon />}\n            onClick={()=>submitTime()}\n            >\n                Save Time\n            </Button>\n            }\n\n         </div>\n    )\n}\n\nexport default TimeCard\n","import React,{useState,useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {saveTotalTime,updateCountDown} from '../../redux/totalTime/TotalTime.action';\nimport {ArrayToSeconds,SecondsToArray} from '../../logic/arrayToSeconds';\nimport TimeCard from '../timeCard/timeCard.component';\nimport './TotalTargetTime.scss' \n\n\nconst TotalTargetTime=()=>{\n    const dispatch=useDispatch();\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const [timeState,setTimeState]=useState([]);\n    \n    //console.log(timeState)\n    let timeArr=[]\n    //console.log(timeArr)\n   \n    useEffect(() => {\n        validatePrevValue();\n        const interval = setInterval(() => {\n            //console.log('countDownRunning')\n            if(timeState.length>0){\n               dispatch(updateCountDown());\n                validatePrevValue();\n                setTimeState(timeArr)\n                \n            }\n            //console.log(timeState)\n        }, 1000);\n        return () => clearInterval(interval);\n      }, [timeState.length]);\n    //console.log(timeArr)\n    const validatePrevValue=()=>{\n        if((totalTime[key]!==undefined)&&(totalTime[key][getFullDate()]!==undefined)){\n            timeArr=SecondsToArray(totalTime[key][getFullDate()]);\n            setTimeState(timeArr)\n        }\n       \n    }\n    const handleChange=event=>{\n            \n            validatePrevValue();\n            //timeArr.push(event.target.value)\n            if(!isNaN(event.target.value)){\n            timeArr[parseInt(event.target.name)]=event.target.value\n                if(parseInt(event.target.name)<5){\n                    document.getElementById(parseInt(event.target.name)+1).disabled=false;\n                    document.getElementById(parseInt(event.target.name)+1).focus();\n                    document.getElementById(parseInt(event.target.name)+1).value='';\n                    if(parseInt(event.target.name)!==0){\n                    document.getElementById(parseInt(event.target.name)).disabled=true;\n                    }\n                }\n                else{\n                    document.getElementById(parseInt(event.target.name)).blur();\n                    document.getElementById(parseInt(event.target.name)).disabled=true;\n                }\n            }\n            else{document.getElementById(parseInt(event.target.name)).value='';}\n            //console.log(timeArr)\n           //console.log((parseInt(timeArr[0])*10+(parseInt(timeArr[1])))*60*60)    \n    }\n    const clearTxt=event=>{\n        if(!event.target.name==='submitButton')\n        document.getElementById(parseInt(event.target.name)).value='';\n    }\n    const getFullDate=()=>{\n        let newDate=new Date()\n            let date = newDate.getDate();\n            let month = newDate.getMonth() + 1;\n            let year = newDate.getFullYear();\n            return(date.toString()+month.toString()+year.toString());\n    }\n    const submitTime=()=>{\n        if(timeArr.length){\n            setTimeState(timeArr)\n            const totalSeconds=ArrayToSeconds(timeArr);\n            //console.log(totalSeconds)\n            dispatch(saveTotalTime(totalSeconds))\n        }\n        else{\n            console.log(\"time is blank\");\n        }\n           \n        //newTime=totalTime[key][getFullDate()];\n        //console.log(newTime)\n    }\n    let cls='timeBox';\n    if(timeState.length>6){\n        cls='timeBox-negative'\n    }\n    let displayCondition=false;\n    if(timeState.length>0 && Object.keys(taskList).length>0){\n        displayCondition=true;\n    }\n    const handleDelete=(event)=>{\n        const pressedKey=event.key;\n        if (pressedKey==='Backspace' || pressedKey==='Delete'){\n            timeArr.pop();\n            //console.log(event.target.name);\n                if(parseInt(event.target.name)<=5){\n                    if(parseInt(event.target.name)<1){\n                        return false\n                    }\n                    document.getElementById(parseInt(event.target.name)-1).disabled=false;\n                    document.getElementById(parseInt(event.target.name)-1).focus();\n                    document.getElementById(parseInt(event.target.name)-1).value='';\n                    \n                }\n        }\n    }\n    const timeBoxes=[\n        {\n            id:0,\n            placeholder:'H',\n        },\n        {\n            id:1,\n            placeholder:'H',\n        },\n        {\n            id:2,\n            placeholder:'M',\n        },\n        {\n            id:3,\n            placeholder:'M',\n        },\n        {\n            id:4,\n            placeholder:'S',\n        },\n        {\n            id:5,\n            placeholder:'S',\n        },\n    ]\n    \n    return(\n        <TimeCard onChange={handleChange} onFocus={clearTxt} onKeyDown={handleDelete} timeState={timeState} timeBoxes={timeBoxes} cls={cls} displayCondition={displayCondition} timeArr={timeArr} totalTime={totalTime} timeKey={key} submitTime={submitTime}/>\n        // <div className='timcardsContainer' onChange={handleChange} onFocus={clearTxt} onKeyDown={handleDelete}>\n        //     {timeState.length>6?<span className='timeBoxNegative'>-</span>:''}\n        //     {timeBoxes.map((box)=>(\n        //         <TimeInput\n        //             id={box.id}\n        //             placeHolder={box.placeholder}\n        //             cls={cls}\n        //             value={(displayCondition)?timeState[box.id]:timeArr[box.id]}\n        //         />\n        //     ))}\n\n            \n        //     {totalTime[key]?'':\n        //     <Button\n        //     variant=\"contained\"\n        //     color=\"primary\"\n        //     name='submitButton'\n        //     className='saveTimeBtn'\n        //     startIcon={<CheckIcon />}\n        //     onClick={()=>submitTime()}\n        //     >\n        //         Save Time\n        //     </Button>\n        //     }\n\n        // </div>\n\n    )\n}\n\nexport default TotalTargetTime;","const BreakButtonType={\n    START_BREAK:'START_BREAK',\n    PAUSE_BREAK:'PAUSE_BREAK',\n    GET_BREAK_COLOR:'GET_BREAK_COLOR'\n}\n\nexport default BreakButtonType","import BreakButtonType from './BreakButton.type';\n\nexport const startBreak=(breakName)=>{\n    //console.log(breakName)\n    return{\n    type:BreakButtonType.START_BREAK,\n    breakName:breakName,\n}\n}\n\nexport const pauseBreak=(breakName)=>{\n    return{\n    type:BreakButtonType.PAUSE_BREAK,\n    breakName:breakName,}\n}\n\n","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport CallIcon from '@material-ui/icons/Call';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport EjectIcon from '@material-ui/icons/Eject';\nimport './BreakButtons.style.scss';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport {startBreak} from '../../redux/breakButton/BreakButton.action';\nconst BreakButtons=()=>{\n\n    const breakData=useSelector(state=>state.BreakButtonReducer);\n    const totalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    const totalTimeKey=totalTimeReducer.key;\n    const {totalTime}=totalTimeReducer;\n    const dispatch=useDispatch();\n    //('call')\n\n    const dispatchAction=(buttonName)=>{\n        \n        dispatch(startBreak(buttonName))\n    }\n    return(\n        \n        <div className='breakbuttonsMainContainer'>\n        {totalTime[totalTimeKey]?\n            <div>\n            <Tooltip title='Instagram'>\n                <button className={`brakButton-insta-${breakData['instagram'].isActive?'active':''}`} onClick={()=>dispatchAction('instagram')}><InstagramIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            <Tooltip title='Facebook'>\n                <button className={`brakButton-fb-${breakData['faceBook'].isActive?'active':''}`} onClick={()=>dispatchAction('faceBook')}><FacebookIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            \n            <Tooltip title='Youtube'>\n                <button className={`brakButton-youtube-${breakData['youtube'].isActive?'active':''}`} onClick={()=>dispatchAction('youtube')}><YouTubeIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            <Tooltip title='Calls'>\n                <button className={`brakButton-calls-${breakData['call'].isActive?'active':''}`} onClick={()=>dispatchAction('call')}><CallIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            <Tooltip title='Messaging'>\n                <button className={`brakButton-messaging-${breakData['messaging'].isActive?'active':''}`} onClick={()=>dispatchAction('messaging')}><WhatsAppIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            \n\n            <Tooltip title='Sleep'>\n                <button className={`brakButton-sleep-${breakData['sleep'].isActive?'active':''}`} onClick={()=>dispatchAction('sleep')}><AirlineSeatFlatIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            <Tooltip title='Excercise'>\n                <button className={`brakButton-excesise-${breakData['excercise'].isActive?'active':''}`} onClick={()=>dispatchAction('excercise')}><DirectionsRunIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            \n            <Tooltip title='Food'>\n            <button className={`brakButton-food-${breakData['food'].isActive?'active':''}`} onClick={()=>dispatchAction('food')}><FastfoodIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            \n            <Tooltip title='Tea/Coffee'>\n                <button className={`brakButton-tea-${breakData['tea'].isActive?'active':''}`} onClick={()=>dispatchAction('tea')}><FreeBreakfastIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            <Tooltip title='Miscelaneous Task'>\n                <button className={`brakButton-misc-${breakData['miscelaneous'].isActive?'active':''}`} onClick={()=>dispatchAction('miscelaneous')}><LibraryAddIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n\n            <Tooltip title='Release All'>\n                 <button className={`brakButton-eject-${breakData['releaseAll'].isActive?'active':''}`} onClick={()=>dispatchAction('releaseAll')}><EjectIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            </div>:''}\n        </div>\n        )\n}\n\nexport default BreakButtons;","const TaskType={\n    ADD_TASK:'ADD_TASK',\n    REMOVE_TASK:'REMOVE_TASK',\n    PAUSE_TASK:'PAUSE_TASK',\n    START_TASK:'START_TASK',\n    COMPLETED_TASK:'COMPLETED_TASK',\n    ADD_BREAK_TASK:'ADD_BREAK_TASK',\n    REMOVE_ALL_TASK:'REMOVE_ALL_TASK',\n    COMPLETE_ALL_TASK:'COMPLETE_ALL_TASK',\n    ADD_REMAINDER:'ADD_REMAINDER',\n    START_REMAINDER:'START_REMAINDER',\n    \n    \n}\nexport default TaskType;","import TaskType from './Task.type';\n\nexport const addTask=(taskName)=>{\n    return{\n        type:TaskType.ADD_TASK,\n        taskName:taskName\n    }\n}\n\nexport const removeTask=(taskName)=>{\n    return{\n        type:TaskType.REMOVE_TASK,\n        taskName:taskName\n    }\n}\n\nexport const pauseTask=(taskName)=>{\n    return{\n        type:TaskType.PAUSE_TASK,\n        taskName:taskName\n    }\n}\n\nexport const startTask=(taskName,seconds,originalTimeLocal)=>{\n    return{\n        type:TaskType.START_TASK,\n        taskName:taskName,\n        seconds:seconds,\n        totalTime:originalTimeLocal\n    }\n}\n\nexport const completeTask=(taskName)=>{\n    return{\n        type:TaskType.COMPLETED_TASK,\n        taskName:taskName\n    }\n}\n\nexport const addBreaktask=(taskName,color)=>{\n    return{\n        type:TaskType.ADD_BREAK_TASK,\n        taskName:taskName,\n        color:color,\n    }\n}\n\nexport const removeAllTask=()=>{\n    return{\n        type:TaskType.REMOVE_ALL_TASK,\n    }\n}\n\nexport const completeAll=()=>{\n    return{\n        type:TaskType.COMPLETE_ALL_TASK,\n    }\n}\n\n\nexport const addRemainder=(remainderName,timeInSec,repeat)=>{\n    return{\n        type:TaskType.ADD_REMAINDER,\n        remainderName:remainderName,\n        time:timeInSec,\n        repeat:repeat,\n    }\n}\n\n\nexport const startRemainder=(seconds)=>{\n    return{\n        type:TaskType.START_REMAINDER,\n        seconds:seconds,\n    }\n}\n\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {removeTask,pauseTask,startTask,completeTask} from '../../redux/task/Task.action'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst AddedTask=({completed,bgColor,taskName,paused,percentage,type,time})=>{\n    //console.log(taskName+' '+paused)\n    const dispatch=useDispatch();\n    let backgrouColorForStart=\"#e0e0de\";\n    if(paused===false){\n        backgrouColorForStart=\"#c1edb4\";\n    }\n    const containerStyle={\n        position:'relative',\n        height:'15%',\n        width:'100%',\n        backgroundColor: backgrouColorForStart,\n        borderRadius: '10px',\n        'margin-top':5,\n        display:'flex',\n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${percentage}%`,\n        backgroundColor: `${bgColor}`,\n        textAlign: 'right',\n        borderRadius: '5px',\n        transition: 'width 1s ease-in-out',\n      }\n\n      const labelStyle = {\n        position:'absolute',\n        top:'1vh',\n        left:'-3vw',\n        color: 'black',\n        fontWeight: 'bold',\n        'z-index':-1,\n        width:'10vw',\n        \n      }\n\n      const taskContentStyle={\n        position:'absolute',\n        display:'flex',\n        right:'50%',\n        top:'10%',\n        textAlign:'right',\n\n        'font-weight':'bold',\n      }\n      const iconsListStyle={\n        position:'absolute',\n        top:'0.5vh',\n        display:'flex',\n        left:'1vw',\n        'padding-left':'7.5vw',\n        textAlign: 'right'\n      }\n      const taskNameStyle={\n          position:'absolute',\n          top:'1vh',\n          color:'black',\n          right:'1.9vw',\n          'text-align':'left',\n          width:'11vw',\n          'margin-left':'10%',\n      }\n      \n\n    return(\n        <Tooltip title={taskName.toUpperCase()} placement=\"right-start\" arrow>\n        <div className='taskMainContainer' style={containerStyle}>\n            <div className='contentContainer' style={fillerStyle}>\n               \n            </div>\n            <div className='taskContent' style={taskContentStyle}>\n                <span style={labelStyle}>{`${time[0]+''+time[1]+':'+time[2]+''+time[3]+':'+time[4]+''+time[5]}  -  ${percentage}%`}</span>\n                <div className='taskName' style={taskNameStyle}>\n                    {`${taskName.toUpperCase().slice(0,14)}${taskName.length>14?'...':''}`}\n                </div>\n                {completed && type!=='remainder'?'':\n            \n                \n                <div className='iconsList' style={iconsListStyle}>\n                    {paused\n                        ?\n                            type!=='remainder'\n                            ?\n                                <Tooltip title={`Start ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PlayCircleOutlineIcon key={`${taskName}-playBtn`} onClick={()=>dispatch(startTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                            :type!=='remainder'\n                            ?\n                                <Tooltip title={`Pause ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PauseCircleOutlineIcon key={`${taskName}-pauseBtn`} onClick={()=>dispatch(pauseTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                    }\n                    \n                    {type!=='task'?'':\n                        <Tooltip title={`Mark Complete ${taskName.toUpperCase()}`}  arrow>\n                            <div className='completedButton'>\n                                <DoneOutlineIcon onClick={()=>dispatch(completeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                    }\n                    {type==='break'?'':percentage>0 && type!=='remainder'?'':\n                        <Tooltip title={`Remove ${taskName.toUpperCase()}`}  arrow>\n                            <div className='removeButton'>\n                                <CancelIcon key={`${taskName}-cancelBtn`} onClick={()=>dispatch(removeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                        \n                    }\n                    \n                     \n                </div>\n                }\n            </div>\n        </div>\n        </Tooltip>\n    )\n}\n\nexport default React.memo(AddedTask);","export const GetDate=()=>{\n    let newDate=new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let fullDate=date.toString()+month.toString()+year.toString();\n    return fullDate;\n}\n\nexport const GetTimeInSeconds=()=>{\n    let seconds=Math.floor(new Date().getTime()/1000);\n    return seconds;\n}","import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './ToDoTaskContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds'\nimport {GetDate} from '../../logic/getDate';\nconst ToDoTaskContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const dispatch=useDispatch();\n    const[taskName,setTaskName]=useState();\n    //console.log(taskList)\n    const setTask=(event)=>{\n        setTaskName(event.target.value);\n    }\n    const dispatchAddTask=()=>{\n        if(taskName){\n            dispatch(addTask(taskName));\n            setTaskName('');\n            document.getElementById('outlined-basic').blur();\n        }\n        \n    }\n\n    const handleSubmit=(event)=>{\n        event.preventDefault();\n        dispatchAddTask();\n    }\n  \n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='toDoMainContainer'>\n            <span className='headingToDo'>Task List</span>\n            <div className='addTaskinpputContainer'>\n                <form onSubmit={handleSubmit} className='addTaskContainer'>\n                    \n                    <input value={taskName} onChange={setTask} className='addTaskText' id=\"outlined-basic\" placeholder=\"Add Task\" variant=\"outlined\" color='primary'></input>\n                   \n                    <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    className={`saveTaskBtn-${taskName?'enabled':'disabled'}`}\n                    startIcon={<CheckIcon />}                    \n                    ></Button>\n                    \n                    <hr></hr>\n                </form>\n            </div>\n            <div className='addedTaskListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].isCompleted?'':taskList[key].type==='remainder'?'':\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].time)}/>)\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default ToDoTaskContainer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport './CompletedTaskListContainer.style.scss'\nimport {GetDate} from '../../logic/getDate';\nimport {SecondsToArray} from '../../logic/arrayToSeconds'\nconst CompletedTaskListContainer=()=>{\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='completedTaskListMainContainer'>\n            <span className='headingCompleted'>Completed Task List</span>\n            <div className='completedTaskListContainer'>\n\n            {Object.keys(taskList).map((key)=>\n                {   return(\n                    taskList[key].isCompleted?\n                    (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].time)}/>)\n                    :''\n                    \n                    )\n                }    \n                )\n            }          \n            </div>\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default CompletedTaskListContainer; ","import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './RemainderContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask,addRemainder} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds';\nimport {GetTimeInSeconds} from '../../logic/getDate';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {GetDate} from '../../logic/getDate';\n\n\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\nimport Checkbox from'@material-ui/core/Checkbox';\nconst RemainderContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const [remainderName,setRemainderName]=useState();\n    const [time,setTime]=useState();\n    const [repeat,setRepeat]=useState(false);\n    const dispatch=useDispatch();\n    //console.log(taskList)\n    \n    const dispatchAddRemainder=()=>{\n        dispatch(addRemainder(remainderName,time,repeat));\n        setRemainderName('');\n        setTime(undefined);\n        setRepeat(false)\n        document.getElementById('outlined-basic').blur();\n    }\n    let timeError=undefined; \n    const timeValidation=dateTime=>{\n        setTime(Math.floor(new Date(dateTime).getTime()/1000))\n        //console.log(((time-GetTimeInSeconds())/60))\n        if(time!==undefined){\n            if(((time-GetTimeInSeconds())/60)<0){\n                timeError=true;\n                setTime(undefined)\n            }\n        }\n\n    }   \n    //console.log((time-GetTimeInSeconds())/60)\n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='remainderMainContainer'>\n            <span className='headingremainder'>Remainder List</span>\n            <div className='addRemainderinpputContainer'>\n                <div className='addRemainderContainer'>\n                    <div className='remainderAddInputs'>\n                        <input value={remainderName} onChange={e=>setRemainderName(e.target.value)} className='addRemainderText' id=\"outlined-basic\" placeholder=\"Add Remainder\" variant=\"outlined\" color='primary' type='text'></input>\n                        <MuiPickersUtilsProvider  utils={DateFnsUtils}>\n\n                        <TimePicker\n                          \n                          className='timeSelector'\n                          value={time!==undefined?new Date(time*1000):new Date()}\n                          onChange={timeValidation}\n                          ampm={false}\n                        />\n                        \n                         </MuiPickersUtilsProvider>\n                        \n                        </div>\n                    <div className='minutesFromNowContainer'>\n                        <Checkbox\n                        inputProps={{ 'aria-label': 'Checkbox Repeat' }}\n                        style={{'color':'white'}}\n                        color=\"primary\"\n                        className='repeatSelectCheckBox'\n                        onChange={e=>setRepeat(e.target.checked)}\n                        checked={repeat}\n                        />\n                        <span className='minutesFromNow'> {`Repeat Every ${time!==undefined?((time-GetTimeInSeconds())/60).toFixed(1):0} Minutes From Now`}</span>\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='saveRemainderBtn'\n                        startIcon={<CheckIcon />}\n                        onClick={dispatchAddRemainder}\n                        disabled={time===undefined}\n                        ></Button>\n                    </div>\n                    {(time-GetTimeInSeconds())<0?\n                        <span className='timeError'>Please select a future time</span>\n                        :\n                        ''\n                    }\n                    \n                    \n                </div>\n            </div>\n            <div className='addedRemainderListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].type==='remainder'?\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].timeRemaining)}/>)\n                        :''\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default RemainderContainer;","const SubmitDataType={\n    SUBMIT_ALL_DATA_START:'SUBMIT_ALL_DATA_START',\n    SUBMIT_ALL_DATA_INPROGRESS:'SUBMIT_ALL_DATA_INPROGRESS',\n}\n\nexport default SubmitDataType;","import SubmitDataType from './SubmitData.type';\n\nexport const submitDataStart=()=>{\n    return{\n        type:SubmitDataType.SUBMIT_ALL_DATA_START\n    }\n}\n\nexport const submitDataInProgerss=(taskReducer,breakButtonReducer,totalTimeReducer)=>{\n    return{\n        type:SubmitDataType.SUBMIT_ALL_DATA_INPROGRESS,\n        breakButtonReducer:breakButtonReducer,\n        taskReducer:taskReducer,\n        totalTimeReducer:totalTimeReducer\n    }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {submitDataStart} from '../../redux/submitData/SubmitData.action'\nimport './FinishDayButton.style.scss'\nconst FinishDayButton=()=>{\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const dispatch=useDispatch();\n    const dispatchSubmit=()=>{\n\n    dispatch(submitDataStart());\n    setTimeout(function(){\n        window.location.reload(false);\n\n    }, 500);     \n}\n    return(\n        <React.Fragment>  \n        {totalTime[key]?\n            <Button className='finishDayBtn' variant=\"contained\" color=\"secondary\" onClick={dispatchSubmit}>\n                Finish Your Day\n             </Button>\n        :''}\n        </React.Fragment>\n    )\n}\n\nexport default FinishDayButton;","const NotesType={\n    TOGGLE_NOTE_DISPLAY:'TOGGLE_NOTE_DISPLAY',\n    ADD_NOTE:'ADD_NOTE',\n    REMOVE_NOTE:'REMOVE_NOTE'\n}\n\nexport default NotesType;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { removeNote } from '../../redux/notes/notes.action';\nimport './notes.style.scss'\nconst Notes=({noteMsg,noteKey})=>{\n    const dispatch=useDispatch();\n\n    return(\n        <div className='notesContainer'>\n            <div className='notesText'>{noteMsg}</div>\n            <div className='removeButton'>\n                <CancelIcon onClick={()=>dispatch(removeNote(noteKey))}/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Notes;","import NotesType from \"./notes.type\";\n\nexport const toggleNoteDisplay=()=>{\n    return{\n        type:NotesType.TOGGLE_NOTE_DISPLAY\n    }\n}\n\nexport const addNote=(noteText)=>{\n    return{\n        type:NotesType.ADD_NOTE,\n        noteText:noteText,\n    }\n}\n\nexport const removeNote=(noteId)=>{\n    return{\n        type:NotesType.REMOVE_NOTE,\n        noteId:noteId,\n    }\n}","import React,{useState} from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport Notes from '../notes/notes.component';\nimport { addNote } from '../../redux/notes/notes.action';\nimport './NotesContainer.style.scss';\n\nconst NotesContainer=()=>{\n    const dispatch=useDispatch();\n    const {noteDisplay,notes} =useSelector(state=>state.NoteReducer)\n    const[noteEntered,setNoteEntered]=useState('');\n    \n    const handleSubmit=(event)=>{\n        event.preventDefault();\n        if(noteEntered.length>0){\n        dispatch(addNote(noteEntered));\n        setNoteEntered('');\n        }\n    }\n    return(\n        <div className={`notesContanerMain ${noteDisplay?'notesContanerMain__expand':'notesContanerMain__shrink'}`}>\n            <form onSubmit={handleSubmit} className={`notesInput ${noteDisplay?'notesInput__expand':'notesInput__shrink'}`}>\n                <input value={noteEntered} type='text' placeholder='Add Note' className='noteInputs' onChange={e=>setNoteEntered(e.target.value)}></input>\n                <button className={`addNoteBtn-${noteEntered.length>0?'enabled':'disabled'} ${noteDisplay?'addNoteBtn__expand':'addNoteBtn__shrink'}`} type=\"submit\" disabled={noteEntered.length<=0}>Add</button>\n            </form>\n            <div className='notesCollection'>\n                {Object.keys(notes).map((key)=>\n                    {   return(\n                        <Notes noteMsg={notes[key]} noteKey={key}/>\n                        )\n                    }    \n                    )\n                }          \n            </div>\n        </div>       \n    )\n}\nexport default NotesContainer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Doughnut} from 'react-chartjs-2';\nimport './DoughnutChart.style.scss';\nconst DoughnutChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let Doughnutdata={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(4))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n      //console.log(taskHour)\n      //console.log(bgColors)\n    \n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: '# of Votes',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 2,\n              hoverOffset: 20\n            },\n          ],\n      };\n      display=true;\n    }\n    return(\n        <div className={`doughnutChartContainer-${display?'':'hideBarDougnutContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Doughnut data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default DoughnutChart;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss'\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let Doughnutdata={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(3))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n    chartLabels.push('Estimated Total Time');\n    let TotalTimeReducer=data[key].totalTimeData\n    let originalTimeKey=Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n    taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]/3600).toFixed(3));\n    bgColors.push('rgb(28,16,133)');\n    borderColors.push('rgb(255,255,255)');\n    let actualTime=0;\n    if(TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey]<0){\n          actualTime=(-1*TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey])+TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]\n    }\n    else{\n        actualTime=TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]-TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n    }\n    chartLabels.push('Actual Total Time');\n    taskHour.push((actualTime/3600).toFixed(3));\n    bgColors.push('rgb(222, 11, 39)');\n    borderColors.push('rgb(255,255,255)');\n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: 'Time Comparison Chart',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 5,\n              hoverOffset: 20\n            },\n          ],\n        };\n      display=true\n    }\n    return(\n        <div className={`timeConparisonBarChartContainer-${display?'':'hideBarChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport './TimeTrackLineChart.style.scss' \n\nconst TimeTrackerLineChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let dataLine=null;\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {      \n      let xAxis=[];\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      let dataSet=[];\n      var originalTimeData={\n          label:'Estimated Time',\n          data:[],\n          fill:false,\n          borderColor:'rgb(93, 66, 245)',\n          tension:0.1\n      }\n      var TotalTimeData={\n        label:'Actual Time',\n        data:[],\n        fill:false,\n        borderColor:'rgb(245, 5, 25)',\n        tension:0.1\n    }\n      if(Object.keys(data).length>0){\n      \n      for(var k in data){\n          \n          xAxis.push(data[k].date)\n          \n          var keyLocal=data[k].totalTimeData.key\n         \n           for(var origTimeKey in data[k]['totalTimeData'].originalTime[keyLocal]){\n             originalTimeData.data.push((data[k].totalTimeData.originalTime[keyLocal][origTimeKey]/3600).toFixed(3))\n           }\n           for(var totalTimeKey in data[k].totalTimeData.totalTime[keyLocal]){\n                //console.log(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])\n               var actualTime=0;\n             if(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]<0){\n                 actualTime=(-1*data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])+data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]\n             }\n              else{\n              actualTime=data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]-data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]\n              }\n             TotalTimeData.data.push((actualTime/3600).toFixed(3))\n           }\n       }\n      dataSet=[originalTimeData,TotalTimeData]\n      //console.log(dataSet)\n   \n      display=true\n    }\n    const labels=xAxis;\n    dataLine = {\n      labels: labels,\n      datasets: dataSet\n    };\n\n  }\n    return(\n        <div className={`timeConparisonBarLineContainer-${display?'':'hidelineChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Line className='lineChart' data={dataLine}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeTrackerLineChart;\n","import React from 'react';\nimport './Header.style.scss';\n\n\nconst Header=()=>{\n    \n    return(\n        <nav className='headerContainer'>\n           \n                <div className='logoContainer'>\n                    <div className='logo'>\n                        TimeLogger\n                    </div>\n                </div>\n            \n\n           \n            <div className='optionContainer'>\n                    <div className='option'>\n                        \n                    </div>\n                \n                              \n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React from 'react'\nimport {useDispatch} from 'react-redux';\nimport TotalTargetTime from '../../components/totalTargetTime/TotalTargetTime.component';\nimport BreakButtons from '../../components/breakButtons/BreakButtons.component';\nimport ToDoTaskContainer from '../../components/toDoTaskContainer/ToDoTaskContainer.component'\nimport CompletedTaskListContainer from '../../components/completedTaskListContainer/CompletedTaskListContainer.component';\nimport RemainderContainer from '../../components/remainderContainer/RemainderContainer.component'\nimport FinishDayButton from '../../components/finishDayButton/FinishDayButton.component'\nimport NotesContainer from '../../components/notesContainer/NotesContainer.component'\n\nimport DoughnutChart from '../../doughnutChart/DoughnutChart.component'\nimport TimeComparisonBarChart from '../../components/timeComparisonBarChart/timeComparisonBarChart';\nimport TimeTrackerLineChart from '../../components/timeTrackLineChart/TimeTrackLineChart.component'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport {removeAllTask} from '../../redux/task/Task.action';\nimport {removeAllTime} from '../../redux/totalTime/TotalTime.action';\nimport {toggleNoteDisplay} from '../../redux/notes/notes.action';\nimport Header from '../../components/header/Header.component'\nimport './HomePage.style.scss'\nconst HomePage=()=>{\n    const dispatch=useDispatch();\n    const reset=()=>{\n        dispatch(removeAllTask());\n        dispatch(removeAllTime());\n        setTimeout(function(){\n            window.location.reload(false);\n    \n        }, 500);\n    }\n    return(\n\n        <div className='mainContainerHomePage'>\n             <Header/>\n            <div className='restoreReducer'>\n                <IconButton aria-label=\"reset\"  color=\"primary\" onClick={reset}><RotateLeftIcon/></IconButton>    \n            \n            </div>\n            <div className='openNotes'>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={()=>dispatch(toggleNoteDisplay())}>\n                     <AddIcon />\n                </Fab>\n                <NotesContainer className='notesContainerMainHome'/>\n            </div>\n            <div className='totalTimeContainer'>\n                <TotalTargetTime/>\n            </div>\n            \n            <React.Fragment>\n                <div className='switchButtonsContainer'>\n                    <BreakButtons/>\n                </div>\n                <div className='taskListContainer'>\n                \n                    <ToDoTaskContainer className='toDoListMain'/> \n                    <RemainderContainer clasName='remainderMain'/>\n                    <CompletedTaskListContainer className='completedTaskListMain'/>\n                </div>\n            \n                <div className='reportButtonContainer'>\n                   <FinishDayButton/>\n                </div>\n            </React.Fragment>\n            \n            \n            <div className='graphsContainer'>\n               \n                <div className='chartConatiner1'> \n                    <DoughnutChart/>1\n                    <TimeComparisonBarChart/>\n                </div>\n                <div className='chartContainer2'>\n                    <TimeTrackerLineChart/>\n                </div>\n                \n            </div>\n            \n        </div>\n    )\n}\n\nexport default HomePage\n//countDownProgress?'':","import React from 'react'\nimport HomePage from './pages/homePage/Homepage.component'\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n        <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import TotalTimeType from './TotalTime.type';\nimport {GetDate} from '../../logic/getDate';\nconst INITIAL_STATE={\n    key:0,\n    totalTime:{},\n    originalTime:{},\n    countDownProgress:false,\n    lastUpdatedTime:null,\n}\n\nexport const TotalTimeReducer=(state=INITIAL_STATE, action)=>{\n    switch(action.type){\n        case TotalTimeType.SAVE_TOTAL_TIME:\n            state.key=Object.keys(state.totalTime).length;\n            \n            let fullDate=GetDate()\n            state.totalTime[state.key]={[fullDate]:action.payload}\n            state.originalTime[state.key]={[fullDate]:action.payload}\n            return{\n                ...state,\n                key:state.key,\n                totalTime:{...state.totalTime},\n                originalTime:{...state.originalTime},\n            }\n        case TotalTimeType.START_COUNTDOWN:\n            \n            let dateTime=GetDate();\n            state.totalTime[state.key][dateTime]=state.totalTime[state.key][dateTime]-parseInt(action.seconds);\n            return{\n                ...state,\n                totalTime:{...state.totalTime},\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_LAST_RUN_TIME:\n            return{\n                ...state,\n                lastUpdatedTime:action.seconds,\n            }\n        case TotalTimeType.PAUSE_COUNTDOWN:\n            state.countDownProgress=false;\n            return{\n                ...state,\n                countDownProgress:false,\n                lastUpdatedTime:null,\n            }\n        case TotalTimeType.SET_COUNTDOWN_TRUE:\n            return{\n                ...state,\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_COUNTDOWN:\n            return state;\n        case TotalTimeType.REMOVE_ALL_TIME:\n            return{\n                key:0,\n                totalTime:{},\n                originalTime:{},\n                countDownProgress:false,\n                lastUpdatedTime:null,\n            }\n        default:\n            return state;\n    }\n}","import BreakButtonType from './BreakButton.type';\n\nconst INITIAL_STATE={\n    instagram:{isActive:false,time:0,color:'rgb(243, 9, 192)'},\n    faceBook:{isActive:false,time:0,color:'rgb(10, 79, 158)'},\n    youtube:{isActive:false,time:0,color:'rgb(192, 9, 9)'},\n    call:{isActive:false,time:0,color:'rgb(109, 75, 204)'},\n    messaging:{isActive:false,time:0,color:'rgb(43, 192, 43)'},\n    sleep:{isActive:false,time:0,color:'rgb(36, 109, 128)'},\n    excercise:{isActive:false,time:0,color:'rgb(13, 121, 94)'},\n    tea:{isActive:false,time:0,color:'rgb(102, 50, 7)'},\n    food:{isActive:false,time:0,color:'rgb(48, 197, 185)'},\n    releaseAll:{isActive:true,time:0,color:'rgb(48, 1, 1)'},\n    miscelaneous:{isActive:false,time:0,color:'rgb(115, 20, 223)'},\n    currentActive:'releaseAll',\n}\n\n\nexport const BreakButtonReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        \n        case BreakButtonType.START_BREAK:\n            let prevActive='';\n            let btnName=action.breakName;\n            //console.log(btnName)\n            if(action.breakName!=='releaseAll'){\n                \n                state[state.currentActive].isActive=false;\n                state[action.breakName].isActive=true;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            else{\n                \n                state[state.currentActive].isActive=false;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            return{\n                ...state,\n                [btnName]:{...state[btnName]},\n                [prevActive]:{...state[prevActive]}\n            }\n        case BreakButtonType.PAUSE_BREAK:\n            state[state.currentActive].isActive=false;\n            return{\n                ...state,\n                [action.breakName]:{...state[action.breakName]},\n            }\n        case BreakButtonType.GET_BREAK_COLOR:\n            let color=state[action.breakName].color;\n            return color;\n        default:\n            return state;\n    }\n}\n\n","import TaskType from './Task.type';\n\nconst INITIAL_STATUS={\n    taskList:{},\n    activeTask:null,\n    notification:null,\n    remainderLastUpdate:null,\n}\n\n\nexport const TaskReducer=(state=INITIAL_STATUS,action)=>{\n    switch(action.type){\n        case TaskType.ADD_TASK:\n            if(state.taskList[action.taskName]===undefined){\n                let taskData={\n                    time:0,\n                    paused:true,\n                    isCompleted:false,\n                    color:'rgb(239, 68, 11)',\n                    percentage:0,\n                    type:'task',\n                }\n                state.taskList[action.taskName]=taskData;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                \n            }\n        case TaskType.REMOVE_TASK:\n            delete state.taskList[action.taskName];\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n                notification:null\n            }\n        case TaskType.PAUSE_TASK:\n            state.taskList[action.taskName].paused=true;\n            state.activeTask=null;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.START_TASK:\n            for(var key in state.taskList){\n                state.taskList[key].paused=true;\n            }\n            state.taskList[action.taskName].paused=false;\n            if(action.seconds!==undefined && action.totalTime!==undefined && state.taskList[action.taskName].type!=='remainder'){\n\n                state.taskList[action.taskName].time=parseInt(state.taskList[action.taskName].time)+parseInt(action.seconds);\n                //console.log(action.totalTime);\n                //console.log(state.taskList[action.taskName].time)\n                \n                state.taskList[action.taskName].percentage=(((state.taskList[action.taskName].time)/(parseInt(action.totalTime)))*parseInt(100)).toFixed(1);\n            }\n            state.activeTask=action.taskName;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.COMPLETED_TASK:\n            state.taskList[action.taskName].isCompleted=true;\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.ADD_BREAK_TASK:\n            for(var k in state.taskList){\n                //console.log(key)\n                if(k!==action.taskName){\n                    state.taskList[k].paused=true;\n                }\n                //console.log(state.taskList[key].pasued)\n            }\n            if(action.taskName!=='releaseAll'){\n                \n                //console.log(state.taskList)\n                if((state.taskList[action.taskName]===undefined)){\n                let taskData={\n                    time:0,\n                    paused:false,\n                    isCompleted:false,\n                    color:action.color,\n                    percentage:0,\n                    type:'break',\n                }\n                state.taskList[action.taskName]=taskData;\n                state.activeTask=action.taskName\n                }\n                else{\n\n                    //console.log('********************************************************')\n                    //console.log(state.taskList[action.taskName].paused)\n                    if(!(state.taskList[action.taskName].paused)){\n                        \n                        state.taskList[action.taskName].paused=true;\n                        state.activeTask=null\n                    }\n                    else{\n                        \n                        state.taskList[action.taskName].paused=false;\n                        state.activeTask=action.taskName\n                    }\n\n                }\n\n            }\n            \n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n            case TaskType.REMOVE_ALL_TASK:\n                return{\n                    ...state,\n                    taskList:{},\n                    activeTask:null,\n                    notification:null\n                }\n            case TaskType.COMPLETE_ALL_TASK:\n                for(var k1 in state.taskList){\n                    state.taskList[k1].isCompleted=true;\n                }\n                //console.log(state.taskList[k1])\n                return{\n                    ...state,\n                    activeTask:null,\n                    taskList:{...state.taskList},\n                    notification:null\n                }\n            case TaskType.ADD_REMAINDER:\n                if(state.taskList[action.remainderName]===undefined){\n                    let remainderData={\n                        time:action.time-Math.floor(new Date()/1000),\n                        isCompleted:false,\n                        color:'rgb(6, 125, 38)',\n                        percentage:100,\n                        timeRemaining:action.time-Math.floor(new Date()/1000),\n                        repeat:action.repeat,\n                        type:'remainder',\n                        \n                    }\n                    state.taskList[action.remainderName]=remainderData;\n                }\n                return{\n                    ...state,\n                    taskList:{...state.taskList},\n                    \n                }\n            case TaskType.START_REMAINDER:\n                state.notification=null;\n                let timeDiff=0;\n                if(state.remainderLastUpdate===null){\n                    state.remainderLastUpdate=action.seconds;\n                    timeDiff=1\n                }\n                else{\n                    timeDiff=action.seconds-state.remainderLastUpdate;\n                    state.remainderLastUpdate=action.seconds;\n                }\n                for(var key in state.taskList){\n                       \n                       if(state.taskList[key].type==='remainder' && state.taskList[key].isCompleted===false){\n                            state.taskList[key].timeRemaining=parseInt(state.taskList[key].timeRemaining)-parseInt(timeDiff);\n                            if(state.taskList[key].timeRemaining<=0 && state.taskList[key].repeat===false){\n                                state.taskList[key].isCompleted=true;\n                                state.notification=key;\n                            }\n                            else if(state.taskList[key].timeRemaining<=0 && state.taskList[key].repeat===true){\n                                state.notification=key;\n                                state.taskList[key].timeRemaining=state.taskList[key].time\n                            }\n                            state.taskList[key].percentage=(((state.taskList[key].timeRemaining)/(state.taskList[key].time))*parseInt(100)).toFixed(1);\n                        }\n                    \n                }\n                return{\n                    ...state,\n                    taskList:{...state.taskList},\n                    notification: state.notification,\n                    remainderLastUpdate:state.remainderLastUpdate\n                }\n        default:\n            return state;\n    }\n}","import SubmitDataType from './SubmitData.type';\nimport {GetDate} from '../../logic/getDate';\nconst INITIAL_STATE={\n        key:0,\n        data:{}        \n    };\n\nexport const SubmitDataReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case SubmitDataType.SUBMIT_ALL_DATA_START:\n           \n            return{\n                ...state,\n            }\n        case SubmitDataType.SUBMIT_ALL_DATA_INPROGRESS:\n            state.key=Object.keys(state.data).length;\n            let date=GetDate();\n            let taskData=action.taskReducer;\n            for(var key in taskData){\n               if(taskData[key].type==='remainder'){\n                   delete taskData[key];\n               }\n            }\n            let breakButtonData=action.breakButtonReducer;\n            let totalTimeData=action.totalTimeReducer;\n            \n            state.data[state.key]={\n                date:date,\n                taskData:taskData,\n                breakButtonData:breakButtonData,\n                totalTimeData:totalTimeData\n            }\n            return{\n                ...state,\n                key:state.key,\n                data:{...state.data}\n            }\n        default:\n            return state;\n    }\n}","import NotesType from \"./notes.type\";\n\nconst INITIAL_STATE={\n    noteKey:0,\n    notes:{},\n    noteDisplay:false,\n}\nexport const NoteReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case NotesType.TOGGLE_NOTE_DISPLAY:\n            return{\n                ...state,\n                noteDisplay:!(state.noteDisplay)\n            }\n        case NotesType.ADD_NOTE:\n            state.notes[state.noteKey]=action.noteText\n            return{\n                ...state,\n                noteKey:state.noteKey+1,\n                notes:{...state.notes}\n            }\n        case NotesType.REMOVE_NOTE:\n            delete state.notes[action.noteId]\n            return{\n                ...state,\n                notes:{...state.notes}\n            }\n        default:\n            return state;\n\n    }\n}","import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport {TotalTimeReducer} from './totalTime/TotalTime.reducer';\nimport {BreakButtonReducer} from './breakButton/BreakButton.reducer';\nimport {TaskReducer} from './task/Task.reducer';\nimport {SubmitDataReducer} from './submitData/SubmitData.reducer';\nimport { NoteReducer } from './notes/notes.reducer';\nconst persistConfig={\n    key:'root',\n    storage,\n    whiteList:['TotalTimeReducer','SubmitDataReducer'],\n    \n}\n\nexport const rootReducer=combineReducers({\n    TotalTimeReducer:TotalTimeReducer,\n    BreakButtonReducer:BreakButtonReducer,\n    TaskReducer:TaskReducer,\n    SubmitDataReducer:SubmitDataReducer,\n    NoteReducer:NoteReducer\n});\n\nexport const persistReducer1=persistReducer(persistConfig,rootReducer);","import BreakButtonType from './BreakButton.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {addBreaktask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action';\n\nfunction* startBreakInTask({breakName}){\n        let breakButtonSatate=yield select(state=>state.BreakButtonReducer);\n    let taskReducer=yield select(state=>state.TaskReducer);\n    yield put(addBreaktask(breakName,breakButtonSatate[breakName].color));\n    if((breakName!=='releaseAll') && (taskReducer.taskList[breakName].paused===false)){\n        yield put(setCountDownTrue());\n    }\n    else{\n        yield put(pauseCountDown());\n    }\n    \n    \n}\nexport function* startBreakSaga(){\n    yield takeEvery(BreakButtonType.START_BREAK,startBreakInTask)\n\n}","import TaskType from './Task.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\n//import {startBreak} from '../breakButton/BreakButton.action'\n//import {startTask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action'\n\nfunction* startTaskEffects({type,taskName,seconds}){\n\n    yield put(setCountDownTrue());\n    //yield put(startBreak('releaseAll'))\n}\n\nfunction* pauseTaskEffects({type,taskName}){\n\n    yield put(pauseCountDown());\n}\n\nfunction* completeTaskEffects({type,taskName}){\n    const taskReducer=yield select(state=>state.TaskReducer)\n    //console.log(taskReducer.activeTask)\n    if(taskReducer.activeTask===null){\n        yield put(pauseCountDown());\n    }\n    \n}\n\nexport function* startTask(){\n    yield takeEvery(TaskType.START_TASK, startTaskEffects)\n    \n}\nexport function* pauseTask(){\n    yield takeEvery(TaskType.PAUSE_TASK, pauseTaskEffects)\n}\n\nexport function* completeTask(){\n    yield takeEvery(TaskType.COMPLETED_TASK,completeTaskEffects)\n}\n\nexport function* removeTask(){\n    yield takeEvery(TaskType.REMOVE_TASK,completeTaskEffects)\n}","import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\ntoast.configure()\n\nexport const notify=(taskName)=>{\n    toast.info(`Hi There!!! You had set a remainder for ${taskName}`,\n    {position:toast.POSITION.TOP_RIGHT,\n    autoClose:false\n    })\n    var audio = new Audio(\n        'https://www.fesliyanstudios.com/play-mp3/4384');\n                    audio.play();\n}","import TotalTimeType from './TotalTime.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startTask,startRemainder} from '../task/Task.action';\nimport {startCountDown,updateLastRunSec} from '../totalTime/TotalTime.action';\nimport {GetDate,GetTimeInSeconds} from '../../logic/getDate';\nimport {submitDataStart} from '../submitData/SubmitData.action'\nimport {notify} from '../../components/remainderNotification/RemainderNotification.component'\nfunction* updateCountDown(){\n    var d = new Date(); // for now\n    var hr=d.getHours(); // => 9\n    var min=d.getMinutes(); // =>  30\n    var sec=d.getSeconds(); \n    const {key,countDownProgress,originalTime,lastUpdatedTime}=yield select(state=>state.TotalTimeReducer)\n    const taskReducer=yield select(state=>state.TaskReducer)\n    //console.log(taskReducer)\n    //If the time is 23:59:58, it will save all task. as we are using the key to identify time ofter 00:00:00 key will change, hence breaking the function\n    if(parseInt(hr)===23 && parseInt(min)===59 && parseInt(sec)===58){\n        window.alert('The day is about to end, and a new day will begin, We will Save your progress so far');\n        yield put(submitDataStart())\n        setTimeout(function(){\n            \n    \n        }, 500); \n        window.location.reload(false);\n    }\n    else{\n    let originalTimeLocal=originalTime[key][GetDate()];\n    let seconds=GetTimeInSeconds();\n    yield put(startRemainder(seconds))\n    if(taskReducer.notification!==null){\n        notify(taskReducer.notification)\n    }\n    //updates the time of main timer as well as the tasks\n    if(countDownProgress){\n        if(lastUpdatedTime===null){\n            //console.log('in saga')\n            yield put(updateLastRunSec(seconds))\n            yield put(startCountDown(1))\n            \n            yield put(startTask(taskReducer.activeTask,1,originalTimeLocal))\n        }\n        else{\n            let timeDiff=seconds-lastUpdatedTime;\n            \n            yield put(updateLastRunSec(seconds))\n            yield put(startCountDown(timeDiff))\n            yield put(startTask(taskReducer.activeTask,timeDiff,originalTimeLocal))\n        }\n       \n    }\n    }\n}\n\nexport function* startTaskTime(){\n    yield takeEvery(TotalTimeType.UPDATE_COUNTDOWN, updateCountDown)\n}","import SubmitDataType from './SubmitData.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startBreak} from '../breakButton/BreakButton.action'\nimport {submitDataInProgerss} from '../submitData/SubmitData.action'\nimport {removeAllTask,completeAll} from '../task/Task.action';\nimport {removeAllTime} from '../totalTime/TotalTime.action';\nfunction* startSubmitProcess(){\n\n    //console.log(1)\n    yield put(startBreak('releaseAll'));\n    //console.log(2)\n    yield put(completeAll())\n    const taskReducer=yield select(state=>state.TaskReducer.taskList)\n    const breakButtonReducer=yield select(state=>state.BreakButtonReducer)\n    const totalTimeReducer=yield select(state=>state.TotalTimeReducer)\n    yield put(submitDataInProgerss(taskReducer,breakButtonReducer,totalTimeReducer))\n    yield put(removeAllTask());\n    yield put(removeAllTime());\n}\n\n\nexport function* startSubmit(){\n    yield takeEvery(SubmitDataType.SUBMIT_ALL_DATA_START, startSubmitProcess);\n}","import {all,call} from 'redux-saga/effects';\nimport {startBreakSaga} from './breakButton/BreakButton.sagas';\nimport {startTask,pauseTask,completeTask,removeTask} from './task/Task.saga';\nimport {startTaskTime} from './totalTime/TotalTime.sagas';\nimport {startSubmit} from './submitData/SubmitData.saga';\n\nexport function* rootSaga(){\n    yield all([call(startBreakSaga),\n        call(startTask),\n        call(pauseTask),\n        call(completeTask),\n        call(removeTask),\n        call(startTaskTime),\n        call(startSubmit)    \n    ]);\n}","import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {persistStore} from 'redux-persist';\nimport {persistReducer1} from './root-reducer';\nimport {rootSaga} from './root-saga';\nconst sagaMiddleware=createSagaMiddleware();\n//const middleware=[logger,sagaMiddleware];\nconst middleware=[sagaMiddleware];\nexport const store=createStore(persistReducer1,applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor=persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react'\n//import Store from './redux/store';\nimport {store} from './redux/store';\nimport {persistor} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
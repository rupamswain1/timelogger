{"version":3,"sources":["redux/totalTime/TotalTime.type.js","redux/totalTime/TotalTime.action.js","logic/arrayToSeconds.js","customHooks/useTimerHooks.js","components/timeInputComponent/timeInput.component.jsx","components/timeCard/timeCard.component.jsx","components/totalTargetTime/TotalTargetTime.component.jsx","redux/breakButton/BreakButton.type.js","redux/breakButton/BreakButton.action.js","components/breakButtons/BreakButtons.component.jsx","redux/task/Task.type.js","redux/task/Task.action.js","components/addedTask/AddedTask.component.jsx","logic/getDate.js","components/toDoTaskContainer/ToDoTaskContainer.component.jsx","components/completedTaskListContainer/CompletedTaskListContainer.component.jsx","components/remainderContainer/RemainderContainer.component.jsx","redux/submitData/SubmitData.type.js","redux/submitData/SubmitData.action.js","components/finishDayButton/FinishDayButton.component.jsx","redux/notes/notes.type.js","components/notes/notes.component.jsx","redux/notes/notes.action.js","components/notesContainer/NotesContainer.component.jsx","doughnutChart/DoughnutChart.component.jsx","components/timeComparisonBarChart/timeComparisonBarChart.js","components/timeTrackLineChart/TimeTrackLineChart.component.jsx","components/header/Header.component.jsx","components/modalWrapper/ModalWrapper.component.jsx","components/confirmationDialoge/ConfirmationDialog.component.jsx","pages/confirmCancelPage/ConfirmCancelPage.component.jsx","components/clearAllButton/ClearAllButton.component.jsx","pages/homePage/Homepage.component.jsx","App.js","reportWebVitals.js","redux/totalTime/TotalTime.reducer.js","redux/breakButton/BreakButton.reducer.js","redux/task/Task.reducer.js","redux/submitData/SubmitData.reducer.js","redux/notes/notes.reducer.js","redux/root-reducer.js","redux/breakButton/BreakButton.sagas.js","redux/task/Task.saga.js","components/remainderNotification/RemainderNotification.component.jsx","redux/totalTime/TotalTime.sagas.js","redux/submitData/SubmitData.saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["TotalTimeType","SAVE_TOTAL_TIME","START_COUNTDOWN","PAUSE_COUNTDOWN","SET_COUNTDOWN_TRUE","UPDATE_COUNTDOWN","REMOVE_ALL_TIME","UPDATE_LAST_RUN_TIME","startCountDown","seconds","type","pauseCountDown","setCountDownTrue","removeAllTime","updateLastRunSec","SecondsToArray","timeInSec","timeArr","totalSeconds","parseInt","hour","Math","floor","hourSec","minutes","strhour","toString","substr","strMinutes","strSeconds","getFullDate","newDate","Date","date","getDate","month","getMonth","year","getFullYear","useTimerHooks","dispatch","useDispatch","useSelector","state","TotalTimeReducer","key","totalTime","countDownProgress","taskList","TaskReducer","useState","timeState","setTimeState","useEffect","validatePrevValue","interval","setInterval","length","clearInterval","undefined","handleChange","useCallback","event","isNaN","target","value","document","getElementById","name","disabled","focus","blur","clearTxt","submitTime","ArrayToSeconds","payload","console","log","cls","useMemo","handleDelete","pressedKey","pop","timeBoxes","id","placeholder","Object","keys","TimeInput","placeHolder","className","maxLength","TimeCard","onChange","onFocus","onKeyDown","displayCondition","timeKey","map","box","Button","variant","color","startIcon","onClick","TotalTargetTime","BreakButtonType","START_BREAK","PAUSE_BREAK","GET_BREAK_COLOR","startBreak","breakName","BreakButtons","breakData","BreakButtonReducer","totalTimeReducer","totalTimeKey","dispatchAction","buttonName","Tooltip","title","isActive","style","fill","fontSize","TaskType","ADD_TASK","REMOVE_TASK","PAUSE_TASK","START_TASK","COMPLETED_TASK","ADD_BREAK_TASK","REMOVE_ALL_TASK","COMPLETE_ALL_TASK","ADD_REMAINDER","START_REMAINDER","startTask","taskName","originalTimeLocal","removeAllTask","startRemainder","React","memo","completed","bgColor","paused","percentage","time","backgrouColorForStart","containerStyle","position","height","width","backgroundColor","borderRadius","display","fillerStyle","textAlign","transition","toUpperCase","placement","arrow","right","top","left","fontWeight","slice","pauseTask","completeTask","removeTask","GetDate","GetTimeInSeconds","getTime","ToDoTaskContainer","setTaskName","dispatchAddTask","addTask","Fragment","onSubmit","preventDefault","isCompleted","CompletedTaskListContainer","RemainderContainer","remainderName","setRemainderName","setTime","repeat","setRepeat","e","utils","DateFnsUtils","TimePicker","dateTime","ampm","Checkbox","inputProps","checked","toFixed","addRemainder","timeRemaining","SubmitDataType","SUBMIT_ALL_DATA_START","SUBMIT_ALL_DATA_INPROGRESS","Delete_ALL_DATA","submitDataStart","submitDataInProgerss","taskReducer","breakButtonReducer","FinishDayButton","setTimeout","window","location","reload","NotesType","TOGGLE_NOTE_DISPLAY","ADD_NOTE","REMOVE_NOTE","Notes","noteMsg","noteKey","noteId","NotesContainer","NoteReducer","noteDisplay","notes","noteEntered","setNoteEntered","noteText","ChartJS","register","ArcElement","Legend","CategoryScale","LinearScale","PointElement","BarElement","LineController","LineElement","DoughnutChart","SubmitDataReducer","data","Doughnutdata","Options","chartLabels","taskHour","bgColors","borderColors","obj","taskData","k","push","labels","datasets","label","borderColor","borderWidth","hoverOffset","responsive","maintainAspectRatio","options","TimeComparisonBarChart","totalTimeData","originalTimeKey","originalTime","actualTime","TimeTrackerLineChart","dataLine","xAxis","dataSet","originalTimeData","tension","TotalTimeData","keyLocal","origTimeKey","Header","ModalWrapper","props","children","ConfirmationDialog","onCancelClick","heading","content","ConfirmCancelPage","ClearAllButton","displayConfirmation","setDisplayConfirmation","HomePage","IconButton","aria-label","Fab","clasName","innerHTML","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","lastUpdatedTime","instagram","faceBook","youtube","call","messaging","sleep","excercise","tea","food","releaseAll","miscelaneous","currentActive","INITIAL_STATUS","activeTask","notification","remainderLastUpdate","persistConfig","storage","whiteList","rootReducer","combineReducers","action","fullDate","prevActive","btnName","k1","remainderData","timeDiff","breakButtonData","persistReducer1","persistReducer","startBreakInTask","startBreakSaga","select","breakButtonSatate","put","takeEvery","startTaskEffects","pauseTaskEffects","completeTaskEffects","toast","configure","updateCountDown","startTaskTime","d","hr","getHours","min","getMinutes","sec","getSeconds","alert","info","POSITION","TOP_RIGHT","autoClose","Audio","play","startSubmitProcess","startSubmit","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.efb2b74e.chunk.js","sourcesContent":["const TotalTimeType={\n    SAVE_TOTAL_TIME:'SAVE_TOTAL_TIME',\n    START_COUNTDOWN:'START_COUNTDOWN',\n    PAUSE_COUNTDOWN:'PAUSE_COUNTDOWN',\n    SET_COUNTDOWN_TRUE:'SET_COUNTDOWN_TRUE',\n    UPDATE_COUNTDOWN:'UPDATE_COUNTDOWN',\n    REMOVE_ALL_TIME:'REMOVE_ALL_TIME',\n    UPDATE_LAST_RUN_TIME:'UPDATE_LAST_RUN_TIME',\n}\nexport default TotalTimeType; ","import TotalTimeType from './TotalTime.type';\n\n\nexport const saveTotalTime=(timeInSec)=>{\n    return({\n        type: TotalTimeType.SAVE_TOTAL_TIME,\n        payload: timeInSec\n        })\n}\n\nexport const startCountDown=(seconds)=>{\n    return{\n        type:TotalTimeType.START_COUNTDOWN,\n        seconds:seconds,\n    }\n}\n\nexport const pauseCountDown=()=>{\n    return{\n        type:TotalTimeType.PAUSE_COUNTDOWN,\n    }\n}\n\nexport const setCountDownTrue=()=>{\n    return {\n        type:TotalTimeType.SET_COUNTDOWN_TRUE,\n    }\n}\n\nexport const updateCountDown=()=>{\n    return{\n        type:TotalTimeType.UPDATE_COUNTDOWN\n    }\n}\n\nexport const removeAllTime=()=>{\n    return{\n        type:TotalTimeType.REMOVE_ALL_TIME,\n    }\n}\n\nexport const updateLastRunSec=(seconds)=>{\n    return{\n        type:TotalTimeType.UPDATE_LAST_RUN_TIME,\n        seconds:seconds,\n    }\n}","\nexport const ArrayToSeconds=(timeArr)=>{\n    const hh=(parseInt(timeArr[0])*10)+parseInt(timeArr[1]);\n    const mm=(parseInt(timeArr[2])*10)+parseInt(timeArr[3]);\n    const ss=(parseInt(timeArr[4])*10)+parseInt(timeArr[5]);\n    let seconds=(hh*3600)+(mm*60)+(ss);\n    //console.log(seconds)\n    return(seconds)\n}\n\nexport const SecondsToArray=(timeInSec)=>{\n    let timeArr=[0,0,0,0,0,0];\n    if(timeInSec<0){\n        timeInSec=timeInSec*-1;\n        timeArr[6]='-';\n    }\n    let totalSeconds=parseInt(timeInSec);\n    let hour=Math.floor(totalSeconds/3600);\n    //console.log(hour)\n    let hourSec=hour*3600;\n    let minutes=Math.floor((totalSeconds-(hourSec))/60);\n    let seconds=totalSeconds-(hourSec)-(minutes*60);\n    \n    \n    if(hour<10){\n        timeArr[1]=hour;\n    }\n    else{\n        let strhour=hour.toString();\n        timeArr[0]=strhour.substr(0,1);\n        timeArr[1]=strhour.substr(1,);\n    }\n    if(minutes<10){\n        timeArr[3]=minutes;\n    }\n    else{\n        let strMinutes=minutes.toString();\n        timeArr[2]=strMinutes.substr(0,1);\n        timeArr[3]=strMinutes.substr(1,);\n    }\n    if(seconds<10){\n        timeArr[5]=seconds;\n    }\n    else{\n        let strSeconds=seconds.toString();\n        timeArr[4]=strSeconds.substr(0,1);\n        timeArr[5]=strSeconds.substr(1,);\n    }\n    //console.log(timeArr);\n    return timeArr;\n}\n//console.log(SecondsToArray(-3))\n//console.log(SecondsToArray(ArrayToSeconds([1,1,5,8,0,3])))\n\n\n","import {useState,useEffect, useCallback,useMemo} from 'react';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {saveTotalTime,updateCountDown} from '../redux/totalTime/TotalTime.action'\nimport {ArrayToSeconds,SecondsToArray} from '../logic/arrayToSeconds';\n\n\nconst getFullDate=()=>{\n    let newDate=new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        return(date.toString()+month.toString()+year.toString());\n}\nexport const useTimerHooks=()=>{\n    const dispatch=useDispatch();\n    const {key,totalTime,countDownProgress}=useSelector(state=>state.TotalTimeReducer);\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const [timeState,setTimeState]=useState([]);\n\n    let timeArr=[]\n  \n    useEffect(() => {\n        validatePrevValue();\n        \n        const interval = setInterval(() => {\n            if(timeState.length>0){\n               dispatch(updateCountDown());\n                validatePrevValue();\n                setTimeState(timeArr)\n                \n            }\n        }, 1000);\n        return () => clearInterval(interval);\n      }, [...timeState,countDownProgress]);\n\n    const validatePrevValue=()=>{\n        \n        if((totalTime[key]!==undefined)&&(totalTime[key][getFullDate()]!==undefined)){\n            timeArr=SecondsToArray(totalTime[key][getFullDate()]);\n            setTimeState(timeArr)\n        }\n       \n    }\n    const handleChange=useCallback((event)=>{\n            \n            validatePrevValue();\n            //timeArr.push(event.target.value)\n            if(!isNaN(event.target.value)){\n            timeArr[parseInt(event.target.name)]=event.target.value\n                if(parseInt(event.target.name)<5){\n                    document.getElementById(parseInt(event.target.name)+1).disabled=false;\n                    document.getElementById(parseInt(event.target.name)+1).focus();\n                    document.getElementById(parseInt(event.target.name)+1).value='';\n                    if(parseInt(event.target.name)!==0){\n                    document.getElementById(parseInt(event.target.name)).disabled=true;\n                    }\n                }\n                else{\n                    document.getElementById(parseInt(event.target.name)).blur();\n                    document.getElementById(parseInt(event.target.name)).disabled=true;\n                }\n            }\n            else{document.getElementById(parseInt(event.target.name)).value='';}\n\n    },[])\n    \n    const clearTxt=useCallback((event)=>{   \n        if(event.target.name!=='submitButton'){\n            document.getElementById(parseInt(event.target.name)).value='';\n        }\n    },[])\n\n   \n    const submitTime=useCallback(()=>{\n        if(timeArr.length>=6){\n            setTimeState(timeArr)\n            const totalSeconds=ArrayToSeconds(timeArr);\n            //console.log(totalSeconds)\n            dispatch(saveTotalTime(totalSeconds))\n        }\n        else{\n            console.log(\"time is blank\");\n        }\n    },[])\n\n \n    const cls=useMemo(()=>{\n        return timeState.length>6?'timeBox-negative':'timeBox'\n    },[timeState.length>6])\n   \n    const displayCondition=()=>{\n        return (timeState.length>0 && Object.keys(taskList).length>0)?'true':'false'\n    }\n    \n    const handleDelete=useCallback((event)=>{\n        const pressedKey=event.key;\n        if (pressedKey==='Backspace' || pressedKey==='Delete'){\n            timeArr.pop();\n            \n                if(parseInt(event.target.name)<=5){\n                    if(parseInt(event.target.name)<1){\n                        return false\n                    }\n                    document.getElementById(parseInt(event.target.name)-1).disabled=false;\n                    document.getElementById(parseInt(event.target.name)-1).focus();\n                    document.getElementById(parseInt(event.target.name)-1).value='';\n                }\n        }\n    },[])\n\n    const timeBoxes=useMemo(()=>{ return [\n        {\n            id:0,\n            placeholder:'H',\n        },\n        {\n            id:1,\n            placeholder:'H',\n        },\n        {\n            id:2,\n            placeholder:'M',\n        },\n        {\n            id:3,\n            placeholder:'M',\n        },\n        {\n            id:4,\n            placeholder:'S',\n        },\n        {\n            id:5,\n            placeholder:'S',\n        },\n    ]},[])\n\n    return [handleChange,clearTxt,handleDelete,timeState,timeBoxes,cls,displayCondition,timeArr,totalTime,key,submitTime]\n}","import React,{useEffect} from 'react'\n\nfunction TimeInput({id,placeHolder,value,cls}) {\n    useEffect(()=>{\n        \n    },[value])\n    return (\n        <>\n        <input \n            className={cls} \n            placeholder={placeHolder} \n            type='text' \n            name={id}  \n            id={id} \n            value={value} \n            maxLength='1'\n            disabled={id!==0?true:false}\n        >\n        </input>\n        {\n            id%2!==0?<div className='timerText'>{placeHolder}</div>:''\n        } \n        \n        </>\n    )\n}\n\nexport default TimeInput;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport TimeInput from '../timeInputComponent/timeInput.component';\nfunction TimeCard({onChange,onFocus,onKeyDown,timeState,timeBoxes,cls,displayCondition,timeArr,totalTime,timeKey,submitTime}) {\n    // console.log(totalTime);\n    // console.log(timeKey);\n    return (\n        <div className='timcardsContainer' onChange={onChange} onFocus={onFocus} onKeyDown={onKeyDown}>\n            {timeState.length>6?<span className='timeBoxNegative'>-</span>:''}\n            {timeBoxes.map((box)=>(\n                <TimeInput\n                    key={box.id}\n                    id={box.id}\n                    placeHolder={box.placeholder}\n                    cls={cls}\n                    value={(displayCondition)?timeState[box.id]:timeArr[box.id]}\n                />\n            ))}\n\n            \n            {totalTime[timeKey]?'':\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            name='submitButton'\n            className='saveTimeBtn'\n            startIcon={<CheckIcon />}\n            onClick={()=>submitTime()}\n            >\n                Save Time\n            </Button>\n            }\n\n         </div>\n    )\n}\n\nexport default TimeCard\n","import React,{useState,useEffect} from 'react';\nimport {useTimerHooks} from '../../customHooks/useTimerHooks'\nimport TimeCard from '../timeCard/timeCard.component';\nimport './TotalTargetTime.scss' \n\n\nconst TotalTargetTime=()=>{\n    const [handleChange,clearTxt,handleDelete,timeState,timeBoxes,cls,displayCondition,timeArr,totalTime,key,submitTime] = useTimerHooks();\n    return(\n        <TimeCard \n            onChange={handleChange} \n            onFocus={clearTxt} \n            onKeyDown={handleDelete} \n            timeState={timeState} \n            timeBoxes={timeBoxes} \n            cls={cls} \n            displayCondition={displayCondition} \n            timeArr={timeArr} \n            totalTime={totalTime} \n            timeKey={key} \n            submitTime={submitTime}/>\n    )\n}\n\nexport default TotalTargetTime;","const BreakButtonType={\n    START_BREAK:'START_BREAK',\n    PAUSE_BREAK:'PAUSE_BREAK',\n    GET_BREAK_COLOR:'GET_BREAK_COLOR'\n}\n\nexport default BreakButtonType","import BreakButtonType from './BreakButton.type';\n\nexport const startBreak=(breakName)=>{\n    //console.log(breakName)\n    return{\n    type:BreakButtonType.START_BREAK,\n    breakName:breakName,\n}\n}\n\nexport const pauseBreak=(breakName)=>{\n    return{\n    type:BreakButtonType.PAUSE_BREAK,\n    breakName:breakName,}\n}\n\n","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport CallIcon from '@material-ui/icons/Call';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport EjectIcon from '@material-ui/icons/Eject';\nimport './BreakButtons.style.scss';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport {startBreak} from '../../redux/breakButton/BreakButton.action';\nconst BreakButtons=()=>{\n\n    const breakData=useSelector(state=>state.BreakButtonReducer);\n    const totalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    const totalTimeKey=totalTimeReducer.key;\n    const {totalTime}=totalTimeReducer;\n    const dispatch=useDispatch();\n    //('call')\n\n    const dispatchAction=(buttonName)=>{\n        \n        dispatch(startBreak(buttonName))\n    }\n    return(\n        \n        <div className='breakbuttonsMainContainer'>\n        {totalTime[totalTimeKey]?\n            <div>\n            <Tooltip title='Instagram'>\n                <button className={`brakButton-insta-${breakData['instagram'].isActive?'active':''}`} onClick={()=>dispatchAction('instagram')}><InstagramIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            <Tooltip title='Facebook'>\n                <button className={`brakButton-fb-${breakData['faceBook'].isActive?'active':''}`} onClick={()=>dispatchAction('faceBook')}><FacebookIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            \n            <Tooltip title='Youtube'>\n                <button className={`brakButton-youtube-${breakData['youtube'].isActive?'active':''}`} onClick={()=>dispatchAction('youtube')}><YouTubeIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            <Tooltip title='Calls'>\n                <button className={`brakButton-calls-${breakData['call'].isActive?'active':''}`} onClick={()=>dispatchAction('call')}><CallIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            <Tooltip title='Messaging'>\n                <button className={`brakButton-messaging-${breakData['messaging'].isActive?'active':''}`} onClick={()=>dispatchAction('messaging')}><WhatsAppIcon style={{fill: \"white\"}} fontSize=\"large\" /></button>\n            </Tooltip>\n            \n\n            <Tooltip title='Sleep'>\n                <button className={`brakButton-sleep-${breakData['sleep'].isActive?'active':''}`} onClick={()=>dispatchAction('sleep')}><AirlineSeatFlatIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            <Tooltip title='Excercise'>\n                <button className={`brakButton-excesise-${breakData['excercise'].isActive?'active':''}`} onClick={()=>dispatchAction('excercise')}><DirectionsRunIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            \n            <Tooltip title='Food'>\n            <button className={`brakButton-food-${breakData['food'].isActive?'active':''}`} onClick={()=>dispatchAction('food')}><FastfoodIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            \n            <Tooltip title='Tea/Coffee'>\n                <button className={`brakButton-tea-${breakData['tea'].isActive?'active':''}`} onClick={()=>dispatchAction('tea')}><FreeBreakfastIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n           \n            <Tooltip title='Miscelaneous Task'>\n                <button className={`brakButton-misc-${breakData['miscelaneous'].isActive?'active':''}`} onClick={()=>dispatchAction('miscelaneous')}><LibraryAddIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n\n            <Tooltip title='Release All'>\n                 <button className={`brakButton-eject-${breakData['releaseAll'].isActive?'active':''}`} onClick={()=>dispatchAction('releaseAll')}><EjectIcon style={{fill: \"white\"}} fontSize=\"large\"/></button>\n            </Tooltip>\n            \n            </div>:''}\n        </div>\n        )\n}\n\nexport default BreakButtons;","const TaskType={\n    ADD_TASK:'ADD_TASK',\n    REMOVE_TASK:'REMOVE_TASK',\n    PAUSE_TASK:'PAUSE_TASK',\n    START_TASK:'START_TASK',\n    COMPLETED_TASK:'COMPLETED_TASK',\n    ADD_BREAK_TASK:'ADD_BREAK_TASK',\n    REMOVE_ALL_TASK:'REMOVE_ALL_TASK',\n    COMPLETE_ALL_TASK:'COMPLETE_ALL_TASK',\n    ADD_REMAINDER:'ADD_REMAINDER',\n    START_REMAINDER:'START_REMAINDER',\n    \n    \n}\nexport default TaskType;","import TaskType from './Task.type';\n\nexport const addTask=(taskName)=>{\n    return{\n        type:TaskType.ADD_TASK,\n        taskName:taskName\n    }\n}\n\nexport const removeTask=(taskName)=>{\n    return{\n        type:TaskType.REMOVE_TASK,\n        taskName:taskName\n    }\n}\n\nexport const pauseTask=(taskName)=>{\n    return{\n        type:TaskType.PAUSE_TASK,\n        taskName:taskName\n    }\n}\n\nexport const startTask=(taskName,seconds,originalTimeLocal)=>{\n    return{\n        type:TaskType.START_TASK,\n        taskName:taskName,\n        seconds:seconds,\n        totalTime:originalTimeLocal\n    }\n}\n\nexport const completeTask=(taskName)=>{\n    return{\n        type:TaskType.COMPLETED_TASK,\n        taskName:taskName\n    }\n}\n\nexport const addBreaktask=(taskName,color)=>{\n    return{\n        type:TaskType.ADD_BREAK_TASK,\n        taskName:taskName,\n        color:color,\n    }\n}\n\nexport const removeAllTask=()=>{\n    return{\n        type:TaskType.REMOVE_ALL_TASK,\n    }\n}\n\nexport const completeAll=()=>{\n    return{\n        type:TaskType.COMPLETE_ALL_TASK,\n    }\n}\n\n\nexport const addRemainder=(remainderName,timeInSec,repeat)=>{\n    return{\n        type:TaskType.ADD_REMAINDER,\n        remainderName:remainderName,\n        time:timeInSec,\n        repeat:repeat,\n    }\n}\n\n\nexport const startRemainder=(seconds)=>{\n    return{\n        type:TaskType.START_REMAINDER,\n        seconds:seconds,\n    }\n}\n\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {removeTask,pauseTask,startTask,completeTask} from '../../redux/task/Task.action'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst AddedTask=({completed,bgColor,taskName,paused,percentage,type,time})=>{\n    //console.log(taskName+' '+paused)\n    const dispatch=useDispatch();\n    let backgrouColorForStart=\"#e0e0de\";\n    if(paused===false){\n        backgrouColorForStart=\"#c1edb4\";\n    }\n    const containerStyle={\n        position:'relative',\n        height:'15%',\n        width:'100%',\n        backgroundColor: backgrouColorForStart,\n        borderRadius: '10px',\n        'margin-top':5,\n        display:'flex',\n    }\n\n    const fillerStyle = {\n        height: '100%',\n        width: `${percentage}%`,\n        backgroundColor: `${bgColor}`,\n        textAlign: 'right',\n        borderRadius: '5px',\n        transition: 'width 1s ease-in-out',\n      }\n\n      const labelStyle = {\n        position:'absolute',\n        top:'1vh',\n        left:'-3vw',\n        color: 'black',\n        fontWeight: 'bold',\n        'z-index':-1,\n        width:'10vw',\n        \n      }\n\n      const taskContentStyle={\n        position:'absolute',\n        display:'flex',\n        right:'50%',\n        top:'10%',\n        textAlign:'right',\n\n        'font-weight':'bold',\n      }\n      const iconsListStyle={\n        position:'absolute',\n        top:'0.5vh',\n        display:'flex',\n        left:'1vw',\n        'padding-left':'7.5vw',\n        textAlign: 'right'\n      }\n      const taskNameStyle={\n          position:'absolute',\n          top:'1vh',\n          color:'black',\n          right:'1.9vw',\n          'text-align':'left',\n          width:'11vw',\n          'margin-left':'10%',\n      }\n      \n\n    return(\n        <Tooltip title={taskName.toUpperCase()} placement=\"right-start\" arrow>\n        <div className='taskMainContainer' style={containerStyle}>\n            <div className='contentContainer' style={fillerStyle}>\n               \n            </div>\n            <div className='taskContent' style={taskContentStyle}>\n                <span style={labelStyle}>{`${time[0]+''+time[1]+':'+time[2]+''+time[3]+':'+time[4]+''+time[5]}  -  ${percentage}%`}</span>\n                <div className='taskName' style={taskNameStyle}>\n                    {`${taskName.toUpperCase().slice(0,14)}${taskName.length>14?'...':''}`}\n                </div>\n                {completed && type!=='remainder'?'':\n            \n                \n                <div className='iconsList' style={iconsListStyle}>\n                    {paused\n                        ?\n                            type!=='remainder'\n                            ?\n                                <Tooltip title={`Start ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PlayCircleOutlineIcon key={`${taskName}-playBtn`} onClick={()=>dispatch(startTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                            :type!=='remainder'\n                            ?\n                                <Tooltip title={`Pause ${taskName.toUpperCase()}`}  arrow>\n                                    <div className='playButton'>\n                                        <PauseCircleOutlineIcon key={`${taskName}-pauseBtn`} onClick={()=>dispatch(pauseTask(taskName))}/>\n                                    </div>\n                                </Tooltip>\n                            :''\n                    }\n                    \n                    {type!=='task'?'':\n                        <Tooltip title={`Mark Complete ${taskName.toUpperCase()}`}  arrow>\n                            <div className='completedButton'>\n                                <DoneOutlineIcon onClick={()=>dispatch(completeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                    }\n                    {type==='break'?'':percentage>0 && type!=='remainder'?'':\n                        <Tooltip title={`Remove ${taskName.toUpperCase()}`}  arrow>\n                            <div className='removeButton'>\n                                <CancelIcon key={`${taskName}-cancelBtn`} onClick={()=>dispatch(removeTask(taskName))}/>\n                            </div>\n                        </Tooltip>\n                        \n                    }\n                    \n                     \n                </div>\n                }\n            </div>\n        </div>\n        </Tooltip>\n    )\n}\n\nexport default React.memo(AddedTask);","export const GetDate=()=>{\n    let newDate=new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let fullDate=date.toString()+month.toString()+year.toString();\n    return fullDate;\n}\n\nexport const GetTimeInSeconds=()=>{\n    let seconds=Math.floor(new Date().getTime()/1000);\n    return seconds;\n}","import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './ToDoTaskContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds'\nimport {GetDate} from '../../logic/getDate';\nconst ToDoTaskContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const dispatch=useDispatch();\n    const[taskName,setTaskName]=useState();\n    //console.log(taskList)\n    const setTask=(event)=>{\n        setTaskName(event.target.value);\n    }\n    const dispatchAddTask=()=>{\n        if(taskName){\n            dispatch(addTask(taskName));\n            setTaskName('');\n            document.getElementById('outlined-basic').blur();\n        }\n        \n    }\n\n    const handleSubmit=(event)=>{\n        event.preventDefault();\n        dispatchAddTask();\n    }\n  \n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='toDoMainContainer'>\n            <span className='headingToDo'>Task List</span>\n            <div className='addTaskinpputContainer'>\n                <form onSubmit={handleSubmit} className='addTaskContainer'>\n                    \n                    <input value={taskName} onChange={setTask} className='addTaskText' id=\"outlined-basic\" placeholder=\"Add Task\" variant=\"outlined\" color='primary'></input>\n                   \n                    <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    className={`saveTaskBtn-${taskName?'enabled':'disabled'}`}\n                    startIcon={<CheckIcon />}                    \n                    ></Button>\n                    \n                    <hr></hr>\n                </form>\n            </div>\n            <div className='addedTaskListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].isCompleted?'':taskList[key].type==='remainder'?'':\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].time)}/>)\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default ToDoTaskContainer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport './CompletedTaskListContainer.style.scss'\nimport {GetDate} from '../../logic/getDate';\nimport {SecondsToArray} from '../../logic/arrayToSeconds'\nconst CompletedTaskListContainer=()=>{\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='completedTaskListMainContainer'>\n            <span className='headingCompleted'>Completed Task List</span>\n            <div className='completedTaskListContainer'>\n\n            {Object.keys(taskList).map((key)=>\n                {   return(\n                    taskList[key].isCompleted?\n                    (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].time)}/>)\n                    :''\n                    )\n                }    \n                )\n            }          \n            </div>\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default CompletedTaskListContainer; ","import React,{useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport './RemainderContainer.style.scss'\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddedTask from '../addedTask/AddedTask.component';\nimport {addTask,addRemainder} from '../../redux/task/Task.action';\nimport {SecondsToArray} from '../../logic/arrayToSeconds';\nimport {GetTimeInSeconds} from '../../logic/getDate';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {GetDate} from '../../logic/getDate';\n\n\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker\n} from '@material-ui/pickers';\nimport Checkbox from'@material-ui/core/Checkbox';\nconst RemainderContainer=()=>{\n\n    const {taskList}=useSelector(state=>state.TaskReducer);\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const [remainderName,setRemainderName]=useState();\n    const [time,setTime]=useState();\n    const [repeat,setRepeat]=useState(false);\n    const dispatch=useDispatch();\n    //console.log(taskList)\n    \n    const dispatchAddRemainder=()=>{\n        dispatch(addRemainder(remainderName,time,repeat));\n        setRemainderName('');\n        setTime(undefined);\n        setRepeat(false)\n        document.getElementById('outlined-basic').blur();\n    }\n    let timeError=undefined; \n    const timeValidation=dateTime=>{\n        setTime(Math.floor(new Date(dateTime).getTime()/1000))\n        //console.log(((time-GetTimeInSeconds())/60))\n        if(time!==undefined){\n            if(((time-GetTimeInSeconds())/60)<0){\n                timeError=true;\n                setTime(undefined)\n            }\n        }\n\n    }   \n    //console.log((time-GetTimeInSeconds())/60)\n    return(\n        <React.Fragment>\n        {totalTime[key]!==undefined && totalTime[key][GetDate()]?\n        <div className='remainderMainContainer'>\n            <span className='headingremainder'>Remainder List</span>\n            <div className='addRemainderinpputContainer'>\n                <div className='addRemainderContainer'>\n                    <div className='remainderAddInputs'>\n                        <input value={remainderName} onChange={e=>setRemainderName(e.target.value)} className='addRemainderText' id=\"outlined-basic\" placeholder=\"Add Remainder\" variant=\"outlined\" color='primary' type='text'></input>\n                        <MuiPickersUtilsProvider  utils={DateFnsUtils}>\n\n                        <TimePicker\n                          \n                          className='timeSelector'\n                          value={time!==undefined?new Date(time*1000):new Date()}\n                          onChange={timeValidation}\n                          ampm={false}\n                        />\n                        \n                         </MuiPickersUtilsProvider>\n                        \n                        </div>\n                    <div className='minutesFromNowContainer'>\n                        <Checkbox\n                        inputProps={{ 'aria-label': 'Checkbox Repeat' }}\n                        style={{'color':'white'}}\n                        color=\"primary\"\n                        className='repeatSelectCheckBox'\n                        onChange={e=>setRepeat(e.target.checked)}\n                        checked={repeat}\n                        />\n                        <span className='minutesFromNow'> {`Repeat Every ${time!==undefined?((time-GetTimeInSeconds())/60).toFixed(1):0} Minutes From Now`}</span>\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='saveRemainderBtn'\n                        startIcon={<CheckIcon />}\n                        onClick={dispatchAddRemainder}\n                        disabled={time===undefined}\n                        ></Button>\n                    </div>\n                    {(time-GetTimeInSeconds())<0?\n                        <span className='timeError'>Please select a future time</span>\n                        :\n                        ''\n                    }\n                    \n                    \n                </div>\n            </div>\n            <div className='addedRemainderListContainer'>\n\n                {Object.keys(taskList).map((key)=>\n                    {   return(\n                        taskList[key].type==='remainder'?\n                        (<AddedTask key={key} type={taskList[key].type} completed={taskList[key].isCompleted} bgColor={taskList[key].color} taskName={key} paused={taskList[key].paused} percentage={taskList[key].percentage} time={SecondsToArray(taskList[key].timeRemaining)}/>)\n                        :''\n                        )\n                    }    \n                    )\n                }          \n            </div>\n\n        </div>\n        :''}\n        </React.Fragment>\n    )\n}\nexport default RemainderContainer;","const SubmitDataType={\n    SUBMIT_ALL_DATA_START:'SUBMIT_ALL_DATA_START',\n    SUBMIT_ALL_DATA_INPROGRESS:'SUBMIT_ALL_DATA_INPROGRESS',\n    Delete_ALL_DATA:'Delete_ALL_DATA'\n}\n\nexport default SubmitDataType;","import SubmitDataType from './SubmitData.type';\n\nexport const submitDataStart=()=>{\n    return{\n        type:SubmitDataType.SUBMIT_ALL_DATA_START\n    }\n}\n\nexport const submitDataInProgerss=(taskReducer,breakButtonReducer,totalTimeReducer)=>{\n    return{\n        type:SubmitDataType.SUBMIT_ALL_DATA_INPROGRESS,\n        breakButtonReducer:breakButtonReducer,\n        taskReducer:taskReducer,\n        totalTimeReducer:totalTimeReducer\n    }\n}\nexport const clearSubmittedData=()=>{\n    return{\n        type:SubmitDataType.Delete_ALL_DATA,\n    }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {submitDataStart} from '../../redux/submitData/SubmitData.action'\nimport './FinishDayButton.style.scss'\nconst FinishDayButton=()=>{\n    const {key,totalTime}=useSelector(state=>state.TotalTimeReducer);\n    const dispatch=useDispatch();\n    const dispatchSubmit=()=>{\n\n    dispatch(submitDataStart());\n    setTimeout(function(){\n        window.location.reload(false);\n\n    }, 500);     \n}\n    return(\n        <React.Fragment>  \n        {totalTime[key]?\n            <Button className='finishDayBtn' variant=\"contained\" color=\"secondary\" onClick={dispatchSubmit}>\n                Finish Your Day\n             </Button>\n        :''}\n        </React.Fragment>\n    )\n}\n\nexport default FinishDayButton;","const NotesType={\n    TOGGLE_NOTE_DISPLAY:'TOGGLE_NOTE_DISPLAY',\n    ADD_NOTE:'ADD_NOTE',\n    REMOVE_NOTE:'REMOVE_NOTE'\n}\n\nexport default NotesType;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { removeNote } from '../../redux/notes/notes.action';\nimport './notes.style.scss'\nconst Notes=({noteMsg,noteKey})=>{\n    const dispatch=useDispatch();\n\n    return(\n        <div className='notesContainer'>\n            <div className='notesText'>{noteMsg}</div>\n            <div className='removeButton'>\n                <CancelIcon onClick={()=>dispatch(removeNote(noteKey))}/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Notes;","import NotesType from \"./notes.type\";\n\nexport const toggleNoteDisplay=()=>{\n    return{\n        type:NotesType.TOGGLE_NOTE_DISPLAY\n    }\n}\n\nexport const addNote=(noteText)=>{\n    return{\n        type:NotesType.ADD_NOTE,\n        noteText:noteText,\n    }\n}\n\nexport const removeNote=(noteId)=>{\n    return{\n        type:NotesType.REMOVE_NOTE,\n        noteId:noteId,\n    }\n}","import React,{useState} from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport Notes from '../notes/notes.component';\nimport { addNote } from '../../redux/notes/notes.action';\nimport './NotesContainer.style.scss';\n\nconst NotesContainer=()=>{\n    const dispatch=useDispatch();\n    const {noteDisplay,notes} =useSelector(state=>state.NoteReducer)\n    const[noteEntered,setNoteEntered]=useState('');\n    \n    const handleSubmit=(event)=>{\n        event.preventDefault();\n        if(noteEntered.length>0){\n        dispatch(addNote(noteEntered));\n        setNoteEntered('');\n        }\n    }\n    return(\n        <div className={`notesContanerMain ${noteDisplay?'notesContanerMain__expand':'notesContanerMain__shrink'}`}>\n            <form onSubmit={handleSubmit} className={`notesInput ${noteDisplay?'notesInput__expand':'notesInput__shrink'}`}>\n                <input value={noteEntered} type='text' placeholder='Add Note' className='noteInputs' onChange={e=>setNoteEntered(e.target.value)}></input>\n                <button className={`addNoteBtn-${noteEntered.length>0?'enabled':'disabled'} ${noteDisplay?'addNoteBtn__expand':'addNoteBtn__shrink'}`} type=\"submit\" disabled={noteEntered.length<=0}>Add</button>\n            </form>\n            <div className='notesCollection'>\n                {Object.keys(notes).map((key)=>\n                    {   return(\n                        <Notes noteMsg={notes[key]} noteKey={key}/>\n                        )\n                    }    \n                    )\n                }          \n            </div>\n        </div>       \n    )\n}\nexport default NotesContainer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement,BarElement,LineController, LineElement} from 'chart.js';\nimport {Doughnut} from 'react-chartjs-2';\n\n\nimport './DoughnutChart.style.scss';\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement,BarElement,LineController, LineElement);\nconst DoughnutChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let Doughnutdata={}\n    let Options={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(4))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n    \n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: 'Time Spent',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 2,\n              hoverOffset: 20, \n            },\n          ],\n      };\n      display=true;\n      Options={\n          responsive:true,\n          maintainAspectRatio:false,\n        }\n      \n    }\n    return(\n        <div className={`doughnutChartContainer-${display?'':'hideBarDougnutContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Doughnut data={Doughnutdata} options={Options} height={350}/>\n            :''}\n        </div>\n    )\n}\n\nexport default DoughnutChart;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Bar} from 'react-chartjs-2';\nimport './timeComparisonBarChart.style.scss'\nconst TimeComparisonBarChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let Doughnutdata={}\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {\n      let chartLabels=[];\n      let taskHour=[];\n      let bgColors=[]\n      let borderColors=[]\n      if(Object.keys(data).length>0){\n      let obj=data[key].taskData;\n      //console.log(obj)\n      for(var k in obj){\n          chartLabels.push(k.toUpperCase());\n          \n          taskHour.push(((obj[k].time)/3600).toFixed(3))\n          bgColors.push(obj[k].color)\n          borderColors.push('rgb(255,255,255)')\n          }\n      }\n    chartLabels.push('Estimated Total Time');\n    let TotalTimeReducer=data[key].totalTimeData\n    let originalTimeKey=Object.keys(TotalTimeReducer.originalTime[TotalTimeReducer.key])[0];\n    taskHour.push((TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]/3600).toFixed(3));\n    bgColors.push('rgb(28,16,133)');\n    borderColors.push('rgb(255,255,255)');\n    let actualTime=0;\n    if(TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey]<0){\n          actualTime=(-1*TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey])+TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]\n    }\n    else{\n        actualTime=TotalTimeReducer.originalTime[TotalTimeReducer.key][originalTimeKey]-TotalTimeReducer.totalTime[TotalTimeReducer.key][originalTimeKey];\n    }\n    chartLabels.push('Actual Total Time');\n    taskHour.push((actualTime/3600).toFixed(3));\n    bgColors.push('rgb(222, 11, 39)');\n    borderColors.push('rgb(255,255,255)');\n      Doughnutdata = {\n          labels: chartLabels,\n          datasets: [\n            {\n              label: 'Time Comparison Chart',\n              data: taskHour,\n              backgroundColor: bgColors,\n              borderColor: borderColors,\n              borderWidth: 5,\n              hoverOffset: 20\n            },\n          ],\n        };\n      display=true\n    }\n    return(\n        <div className={`timeConparisonBarChartContainer-${display?'':'hideBarChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Bar data={Doughnutdata}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeComparisonBarChart;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Line} from 'react-chartjs-2';\nimport './TimeTrackLineChart.style.scss' \n\nconst TimeTrackerLineChart=()=>{\n    const {key,data}=useSelector(state=>state.SubmitDataReducer);\n    let dataLine=null;\n    //onst TotalTimeReducer=useSelector(state=>state.TotalTimeReducer);\n    let display=false;\n    if(Object.keys(data).length>0 && Object.keys(data[key]).length>0) {      \n      let xAxis=[];\n      //console.log(data[key]);\n      //console.log(Object.keys(data[key]).length)\n      let dataSet=[];\n      var originalTimeData={\n          label:'Estimated Time',\n          data:[],\n          fill:false,\n          borderColor:'rgb(93, 66, 245)',\n          tension:0.1\n      }\n      var TotalTimeData={\n        label:'Actual Time',\n        data:[],\n        fill:false,\n        borderColor:'rgb(245, 5, 25)',\n        tension:0.1\n    }\n      if(Object.keys(data).length>0){\n      \n      for(var k in data){\n          \n          xAxis.push(data[k].date)\n          \n          var keyLocal=data[k].totalTimeData.key\n         \n           for(var origTimeKey in data[k]['totalTimeData'].originalTime[keyLocal]){\n             originalTimeData.data.push((data[k].totalTimeData.originalTime[keyLocal][origTimeKey]/3600).toFixed(3))\n           }\n           for(var totalTimeKey in data[k].totalTimeData.totalTime[keyLocal]){\n                //console.log(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])\n               var actualTime=0;\n             if(data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]<0){\n                 actualTime=(-1*data[k].totalTimeData.totalTime[keyLocal][totalTimeKey])+data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]\n             }\n              else{\n              actualTime=data[k].totalTimeData.originalTime[keyLocal][totalTimeKey]-data[k].totalTimeData.totalTime[keyLocal][totalTimeKey]\n              }\n             TotalTimeData.data.push((actualTime/3600).toFixed(3))\n           }\n       }\n      dataSet=[originalTimeData,TotalTimeData]\n      //console.log(dataSet)\n   \n      display=true\n    }\n    const labels=xAxis;\n    dataLine = {\n      labels: labels,\n      datasets: dataSet\n    };\n\n  }\n    return(\n        <div className={`timeConparisonBarLineContainer-${display?'':'hidelineChartContainer'}`}>\n            {Object.keys(data).length>0 && Object.keys(data[key]).length>0?\n            <Line className='lineChart' data={dataLine}/>\n            :''}\n        </div>\n    )\n}\n\nexport default TimeTrackerLineChart;\n","import React from 'react';\nimport './Header.style.scss';\n\n\nconst Header=()=>{\n    \n    return(\n        <nav className='headerContainer'>\n           \n                <div className='logoContainer'>\n                    <div className='logo'>\n                        TimeLogger\n                    </div>\n                </div>\n            \n\n           \n            <div className='optionContainer'>\n                    <div className='option'>\n                        \n                    </div>\n                \n                              \n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React from 'react'\n\nimport './ModalWrapper.style.scss'\n\nconst ModalWrapper=(props)=>{\n    return (\n        <div className='modalWrapper'>\n            {props.children}\n        </div>\n    )\n}\n\nexport default ModalWrapper;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\n\nimport './ConfirmationDialog.style.scss'\n\nconst ConfirmationDialog=({onCancelClick,heading,content})=>{\n    return (\n        <div className='confirmationDialog' onClick={onCancelClick}>\n            <div className='confirmationDialog__headingContainer'>\n                <h2 className='confirmationDialog__heading'>\n                    {heading}\n                </h2>\n            </div>\n            <div className='confirmationDialog__contentContainer'>\n                {content}\n            </div>\n            <div className='confirmationDialog__buttonContainer'>\n                <Button variant=\"contained\" color='secondary' className='clearButton' >Cancel</Button>\n                <Button variant=\"contained\" color='primary' className='clearButton' name='confirmAction' id='confirmAction'>Confirm</Button>\n            </div>\n        </div>\n    )\n} \n\nexport default ConfirmationDialog\n","import React from 'react'\nimport ModalWrapper from '../../components/modalWrapper/ModalWrapper.component';\nimport ConfirmationDialog from '../../components/confirmationDialoge/ConfirmationDialog.component';\nimport './ConfirmCancelPage.style.scss';\nfunction ConfirmCancelPage({onCancelClick}) {\n    return (\n        <div className='confirmCancelContainer'>\n        <ModalWrapper>\n            <ConfirmationDialog onCancelClick={onCancelClick} heading='Delete All Stored Data' \n                content='Are you sure you want to Delete all stored data? all your progress data will be erased permanently'\n            />\n        </ModalWrapper>\n        </div>\n    )\n}\n\nexport default ConfirmCancelPage\n","import React,{useState} from 'react'\nimport Button from '@material-ui/core/Button';\nimport ConfirmCancelPage from '../../pages/confirmCancelPage/ConfirmCancelPage.component';\nimport './ClearAllButton.style.scss';\nfunction ClearAllButton() {\n    const [displayConfirmation,setDisplayConfirmation]=useState(false)\n    \n    return (\n    <div>\n        <div className='clearButtonContainer'>\n            <Button \n                variant=\"contained\" \n                color='secondary' \n                className='clearButton' \n                onClick={()=>setDisplayConfirmation(!displayConfirmation)}\n            >\n                Clear All Data\n            </Button>\n            {displayConfirmation?\n            <div className='confirmCancelContainer'>\n                <ConfirmCancelPage onCancelClick={()=>setDisplayConfirmation(!displayConfirmation)}/>\n            </div>\n            :''}\n        </div>\n    </div>\n    )\n}\n\nexport default ClearAllButton\n","import React,{useState} from 'react'\nimport {useDispatch} from 'react-redux';\nimport TotalTargetTime from '../../components/totalTargetTime/TotalTargetTime.component';\nimport BreakButtons from '../../components/breakButtons/BreakButtons.component';\nimport ToDoTaskContainer from '../../components/toDoTaskContainer/ToDoTaskContainer.component'\nimport CompletedTaskListContainer from '../../components/completedTaskListContainer/CompletedTaskListContainer.component';\nimport RemainderContainer from '../../components/remainderContainer/RemainderContainer.component'\nimport FinishDayButton from '../../components/finishDayButton/FinishDayButton.component'\nimport NotesContainer from '../../components/notesContainer/NotesContainer.component'\n\nimport DoughnutChart from '../../doughnutChart/DoughnutChart.component'\nimport TimeComparisonBarChart from '../../components/timeComparisonBarChart/timeComparisonBarChart';\nimport TimeTrackerLineChart from '../../components/timeTrackLineChart/TimeTrackLineChart.component'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport {removeAllTask} from '../../redux/task/Task.action';\nimport {removeAllTime} from '../../redux/totalTime/TotalTime.action';\nimport {toggleNoteDisplay} from '../../redux/notes/notes.action';\nimport {clearSubmittedData} from '../../redux/submitData/SubmitData.action';\nimport Header from '../../components/header/Header.component'\nimport ClearAllButton from '../../components/clearAllButton/ClearAllButton.component';\n\nimport './HomePage.style.scss'\nconst HomePage=()=>{\n    \n    const dispatch=useDispatch();\n    const reset=()=>{\n        dispatch(removeAllTask());\n        dispatch(removeAllTime());\n        setTimeout(function(){\n            window.location.reload(false);\n    \n        }, 500);\n    }\n    const clearAllAction=(event)=>{\n        if(event.target.innerHTML=='Confirm'){\n            dispatch(clearSubmittedData())\n        }\n    }\n    return(\n\n        <div className='mainContainerHomePage'>\n             <Header/>\n            <div className='restoreReducer'>\n                <IconButton aria-label=\"reset\"  color=\"primary\" onClick={reset}><RotateLeftIcon/></IconButton>    \n            \n            </div>\n            <div className='openNotes'>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={()=>dispatch(toggleNoteDisplay())}>\n                     <AddIcon />\n                </Fab>\n                <NotesContainer className='notesContainerMainHome'/>\n            </div>\n            <div className='totalTimeContainer'>\n                <TotalTargetTime/>\n            </div>\n            \n            <React.Fragment>\n                <div className='switchButtonsContainer'>\n                    <BreakButtons/>\n                </div>\n                <div className='taskListContainer'>\n                \n                    <ToDoTaskContainer className='toDoListMain'/> \n                    <RemainderContainer clasName='remainderMain'/>\n                    <CompletedTaskListContainer className='completedTaskListMain'/>\n                </div>\n            \n                <div className='reportButtonContainer'>\n                   <FinishDayButton/>\n                </div>\n            </React.Fragment>\n            \n            \n            <div className='graphsContainer'>\n               \n                <div className='chartConatiner1'> \n                    <DoughnutChart/>1\n                    <TimeComparisonBarChart/>\n                </div>\n                <div className='chartContainer2'>\n                    <TimeTrackerLineChart/>\n                </div>\n                \n            </div>\n            <div className='clearButtonContainer' onClick={clearAllAction}>\n                <ClearAllButton/>\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage\n//countDownProgress?'':","import React from 'react'\nimport HomePage from './pages/homePage/Homepage.component'\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n        <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import TotalTimeType from './TotalTime.type';\nimport {GetDate} from '../../logic/getDate';\nconst INITIAL_STATE={\n    key:0,\n    totalTime:{},\n    originalTime:{},\n    countDownProgress:false,\n    lastUpdatedTime:null,\n}\n\nexport const TotalTimeReducer=(state=INITIAL_STATE, action)=>{\n    switch(action.type){\n        case TotalTimeType.SAVE_TOTAL_TIME:\n            state.key=Object.keys(state.totalTime).length;\n            \n            let fullDate=GetDate()\n            state.totalTime[state.key]={[fullDate]:action.payload}\n            state.originalTime[state.key]={[fullDate]:action.payload}\n            return{\n                ...state,\n                key:state.key,\n                totalTime:{...state.totalTime},\n                originalTime:{...state.originalTime},\n            }\n        case TotalTimeType.START_COUNTDOWN:\n            \n            let dateTime=GetDate();\n            state.totalTime[state.key][dateTime]=state.totalTime[state.key][dateTime]-parseInt(action.seconds);\n            return{\n                ...state,\n                totalTime:{...state.totalTime},\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_LAST_RUN_TIME:\n            return{\n                ...state,\n                lastUpdatedTime:action.seconds,\n            }\n        case TotalTimeType.PAUSE_COUNTDOWN:\n            state.countDownProgress=false;\n            return{\n                ...state,\n                countDownProgress:false,\n                lastUpdatedTime:null,\n            }\n        case TotalTimeType.SET_COUNTDOWN_TRUE:\n            return{\n                ...state,\n                countDownProgress:true,\n            }\n        case TotalTimeType.UPDATE_COUNTDOWN:\n            return state;\n        case TotalTimeType.REMOVE_ALL_TIME:\n            return{\n                key:0,\n                totalTime:{},\n                originalTime:{},\n                countDownProgress:false,\n                lastUpdatedTime:null,\n            }\n        default:\n            return state;\n    }\n}","import BreakButtonType from './BreakButton.type';\n\nconst INITIAL_STATE={\n    instagram:{isActive:false,time:0,color:'rgb(243, 9, 192)'},\n    faceBook:{isActive:false,time:0,color:'rgb(10, 79, 158)'},\n    youtube:{isActive:false,time:0,color:'rgb(192, 9, 9)'},\n    call:{isActive:false,time:0,color:'rgb(109, 75, 204)'},\n    messaging:{isActive:false,time:0,color:'rgb(43, 192, 43)'},\n    sleep:{isActive:false,time:0,color:'rgb(36, 109, 128)'},\n    excercise:{isActive:false,time:0,color:'rgb(13, 121, 94)'},\n    tea:{isActive:false,time:0,color:'rgb(102, 50, 7)'},\n    food:{isActive:false,time:0,color:'rgb(48, 197, 185)'},\n    releaseAll:{isActive:true,time:0,color:'rgb(48, 1, 1)'},\n    miscelaneous:{isActive:false,time:0,color:'rgb(115, 20, 223)'},\n    currentActive:'releaseAll',\n}\n\n\nexport const BreakButtonReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        \n        case BreakButtonType.START_BREAK:\n            let prevActive='';\n            let btnName=action.breakName;\n            //console.log(btnName)\n            if(action.breakName!=='releaseAll'){\n                \n                state[state.currentActive].isActive=false;\n                state[action.breakName].isActive=true;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            else{\n                \n                state[state.currentActive].isActive=false;\n                state.currentActive=action.breakName;\n                prevActive=state.currentActive;\n            }\n            return{\n                ...state,\n                [btnName]:{...state[btnName]},\n                [prevActive]:{...state[prevActive]}\n            }\n        case BreakButtonType.PAUSE_BREAK:\n            state[state.currentActive].isActive=false;\n            return{\n                ...state,\n                [action.breakName]:{...state[action.breakName]},\n            }\n        case BreakButtonType.GET_BREAK_COLOR:\n            let color=state[action.breakName].color;\n            return color;\n        default:\n            return state;\n    }\n}\n\n","import TaskType from './Task.type';\n\nconst INITIAL_STATUS={\n    taskList:{},\n    activeTask:null,\n    notification:null,\n    remainderLastUpdate:null,\n}\n\n\nexport const TaskReducer=(state=INITIAL_STATUS,action)=>{\n    switch(action.type){\n        case TaskType.ADD_TASK:\n            if(state.taskList[action.taskName]===undefined){\n                let taskData={\n                    time:0,\n                    paused:true,\n                    isCompleted:false,\n                    color:'rgb(239, 68, 11)',\n                    percentage:0,\n                    type:'task',\n                }\n                state.taskList[action.taskName]=taskData;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                \n            }\n        case TaskType.REMOVE_TASK:\n            delete state.taskList[action.taskName];\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n                notification:null\n            }\n        case TaskType.PAUSE_TASK:\n            state.taskList[action.taskName].paused=true;\n            state.activeTask=null;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.START_TASK:\n            for(var key in state.taskList){\n                state.taskList[key].paused=true;\n            }\n            state.taskList[action.taskName].paused=false;\n            if(action.seconds!==undefined && action.totalTime!==undefined && state.taskList[action.taskName].type!=='remainder'){\n\n                state.taskList[action.taskName].time=parseInt(state.taskList[action.taskName].time)+parseInt(action.seconds);\n                //console.log(action.totalTime);\n                //console.log(state.taskList[action.taskName].time)\n                \n                state.taskList[action.taskName].percentage=(((state.taskList[action.taskName].time)/(parseInt(action.totalTime)))*parseInt(100)).toFixed(1);\n            }\n            state.activeTask=action.taskName;\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.COMPLETED_TASK:\n            state.taskList[action.taskName].isCompleted=true;\n            if(state.activeTask===action.taskName){\n                state.activeTask=null;\n            }\n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n        case TaskType.ADD_BREAK_TASK:\n            for(var k in state.taskList){\n                //console.log(key)\n                if(k!==action.taskName){\n                    state.taskList[k].paused=true;\n                }\n                //console.log(state.taskList[key].pasued)\n            }\n            if(action.taskName!=='releaseAll'){\n                \n                //console.log(state.taskList)\n                if((state.taskList[action.taskName]===undefined)){\n                let taskData={\n                    time:0,\n                    paused:false,\n                    isCompleted:false,\n                    color:action.color,\n                    percentage:0,\n                    type:'break',\n                }\n                state.taskList[action.taskName]=taskData;\n                state.activeTask=action.taskName\n                }\n                else{\n\n                    //console.log('********************************************************')\n                    //console.log(state.taskList[action.taskName].paused)\n                    if(!(state.taskList[action.taskName].paused)){\n                        \n                        state.taskList[action.taskName].paused=true;\n                        state.activeTask=null\n                    }\n                    else{\n                        \n                        state.taskList[action.taskName].paused=false;\n                        state.activeTask=action.taskName\n                    }\n\n                }\n\n            }\n            \n            return{\n                ...state,\n                taskList:{...state.taskList},\n                activeTask:state.activeTask,\n            }\n            case TaskType.REMOVE_ALL_TASK:\n                return{\n                    ...state,\n                    taskList:{},\n                    activeTask:null,\n                    notification:null\n                }\n            case TaskType.COMPLETE_ALL_TASK:\n                for(var k1 in state.taskList){\n                    state.taskList[k1].isCompleted=true;\n                }\n                //console.log(state.taskList[k1])\n                return{\n                    ...state,\n                    activeTask:null,\n                    taskList:{...state.taskList},\n                    notification:null\n                }\n            case TaskType.ADD_REMAINDER:\n                if(state.taskList[action.remainderName]===undefined){\n                    let remainderData={\n                        time:action.time-Math.floor(new Date()/1000),\n                        isCompleted:false,\n                        color:'rgb(6, 125, 38)',\n                        percentage:100,\n                        timeRemaining:action.time-Math.floor(new Date()/1000),\n                        repeat:action.repeat,\n                        type:'remainder',\n                        \n                    }\n                    state.taskList[action.remainderName]=remainderData;\n                }\n                return{\n                    ...state,\n                    taskList:{...state.taskList},\n                    \n                }\n            case TaskType.START_REMAINDER:\n                state.notification=null;\n                let timeDiff=0;\n                if(state.remainderLastUpdate===null){\n                    state.remainderLastUpdate=action.seconds;\n                    timeDiff=1\n                }\n                else{\n                    timeDiff=action.seconds-state.remainderLastUpdate;\n                    state.remainderLastUpdate=action.seconds;\n                }\n                for(var key in state.taskList){\n                       \n                       if(state.taskList[key].type==='remainder' && state.taskList[key].isCompleted===false){\n                            state.taskList[key].timeRemaining=parseInt(state.taskList[key].timeRemaining)-parseInt(timeDiff);\n                            if(state.taskList[key].timeRemaining<=0 && state.taskList[key].repeat===false){\n                                state.taskList[key].isCompleted=true;\n                                state.notification=key;\n                            }\n                            else if(state.taskList[key].timeRemaining<=0 && state.taskList[key].repeat===true){\n                                state.notification=key;\n                                state.taskList[key].timeRemaining=state.taskList[key].time\n                            }\n                            state.taskList[key].percentage=(((state.taskList[key].timeRemaining)/(state.taskList[key].time))*parseInt(100)).toFixed(1);\n                        }\n                    \n                }\n                return{\n                    ...state,\n                    taskList:{...state.taskList},\n                    notification: state.notification,\n                    remainderLastUpdate:state.remainderLastUpdate\n                }\n        default:\n            return state;\n    }\n}","import SubmitDataType from './SubmitData.type';\nimport {GetDate} from '../../logic/getDate';\nconst INITIAL_STATE={\n        key:0,\n        data:{}        \n    };\n\nexport const SubmitDataReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case SubmitDataType.SUBMIT_ALL_DATA_START:\n           \n            return{\n                ...state,\n            }\n        case SubmitDataType.SUBMIT_ALL_DATA_INPROGRESS:\n            state.key=Object.keys(state.data).length;\n            let date=GetDate();\n            let taskData=action.taskReducer;\n            for(var key in taskData){\n               if(taskData[key].type==='remainder'){\n                   delete taskData[key];\n               }\n            }\n            let breakButtonData=action.breakButtonReducer;\n            let totalTimeData=action.totalTimeReducer;\n            \n            state.data[state.key]={\n                date:date,\n                taskData:taskData,\n                breakButtonData:breakButtonData,\n                totalTimeData:totalTimeData\n            }\n            return{\n                ...state,\n                key:state.key,\n                data:{...state.data}\n            }\n        case SubmitDataType.Delete_ALL_DATA:\n            {console.log('dispatched');\n            return {...INITIAL_STATE};}\n        default:\n            return state;\n    }\n}","import NotesType from \"./notes.type\";\n\nconst INITIAL_STATE={\n    noteKey:0,\n    notes:{},\n    noteDisplay:false,\n}\nexport const NoteReducer=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case NotesType.TOGGLE_NOTE_DISPLAY:\n            return{\n                ...state,\n                noteDisplay:!(state.noteDisplay)\n            }\n        case NotesType.ADD_NOTE:\n            state.notes[state.noteKey]=action.noteText\n            return{\n                ...state,\n                noteKey:state.noteKey+1,\n                notes:{...state.notes}\n            }\n        case NotesType.REMOVE_NOTE:\n            delete state.notes[action.noteId]\n            return{\n                ...state,\n                notes:{...state.notes}\n            }\n        default:\n            return state;\n\n    }\n}","import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport {TotalTimeReducer} from './totalTime/TotalTime.reducer';\nimport {BreakButtonReducer} from './breakButton/BreakButton.reducer';\nimport {TaskReducer} from './task/Task.reducer';\nimport {SubmitDataReducer} from './submitData/SubmitData.reducer';\nimport { NoteReducer } from './notes/notes.reducer';\nconst persistConfig={\n    key:'root',\n    storage,\n    whiteList:['TotalTimeReducer','SubmitDataReducer'],\n    \n}\n\nexport const rootReducer=combineReducers({\n    TotalTimeReducer:TotalTimeReducer,\n    BreakButtonReducer:BreakButtonReducer,\n    TaskReducer:TaskReducer,\n    SubmitDataReducer:SubmitDataReducer,\n    NoteReducer:NoteReducer\n});\n\nexport const persistReducer1=persistReducer(persistConfig,rootReducer);","import BreakButtonType from './BreakButton.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {addBreaktask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action';\n\nfunction* startBreakInTask({breakName}){\n        let breakButtonSatate=yield select(state=>state.BreakButtonReducer);\n    let taskReducer=yield select(state=>state.TaskReducer);\n    yield put(addBreaktask(breakName,breakButtonSatate[breakName].color));\n    if((breakName!=='releaseAll') && (taskReducer.taskList[breakName].paused===false)){\n        yield put(setCountDownTrue());\n    }\n    else{\n        yield put(pauseCountDown());\n    }\n    \n    \n}\nexport function* startBreakSaga(){\n    yield takeEvery(BreakButtonType.START_BREAK,startBreakInTask)\n\n}","import TaskType from './Task.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\n//import {startBreak} from '../breakButton/BreakButton.action'\n//import {startTask} from '../task/Task.action';\nimport {setCountDownTrue,pauseCountDown} from '../totalTime/TotalTime.action'\n\nfunction* startTaskEffects({type,taskName,seconds}){\n\n    yield put(setCountDownTrue());\n    //yield put(startBreak('releaseAll'))\n}\n\nfunction* pauseTaskEffects({type,taskName}){\n\n    yield put(pauseCountDown());\n}\n\nfunction* completeTaskEffects({type,taskName}){\n    const taskReducer=yield select(state=>state.TaskReducer)\n    //console.log(taskReducer.activeTask)\n    if(taskReducer.activeTask===null){\n        yield put(pauseCountDown());\n    }\n    \n}\n\nexport function* startTask(){\n    yield takeEvery(TaskType.START_TASK, startTaskEffects)\n    \n}\nexport function* pauseTask(){\n    yield takeEvery(TaskType.PAUSE_TASK, pauseTaskEffects)\n}\n\nexport function* completeTask(){\n    yield takeEvery(TaskType.COMPLETED_TASK,completeTaskEffects)\n}\n\nexport function* removeTask(){\n    yield takeEvery(TaskType.REMOVE_TASK,completeTaskEffects)\n}","import {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\ntoast.configure()\n\nexport const notify=(taskName)=>{\n    toast.info(`Hi There!!! You had set a remainder for ${taskName}`,\n    {position:toast.POSITION.TOP_RIGHT,\n    autoClose:false\n    })\n    var audio = new Audio(\n        'https://www.fesliyanstudios.com/play-mp3/4384');\n                    audio.play();\n}","import TotalTimeType from './TotalTime.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startTask,startRemainder} from '../task/Task.action';\nimport {startCountDown,updateLastRunSec} from '../totalTime/TotalTime.action';\nimport {GetDate,GetTimeInSeconds} from '../../logic/getDate';\nimport {submitDataStart} from '../submitData/SubmitData.action'\nimport {notify} from '../../components/remainderNotification/RemainderNotification.component'\nfunction* updateCountDown(){\n    var d = new Date(); // for now\n    var hr=d.getHours(); // => 9\n    var min=d.getMinutes(); // =>  30\n    var sec=d.getSeconds(); \n    const {key,countDownProgress,originalTime,lastUpdatedTime}=yield select(state=>state.TotalTimeReducer)\n    const taskReducer=yield select(state=>state.TaskReducer)\n    //console.log(taskReducer)\n    //If the time is 23:59:58, it will save all task. as we are using the key to identify time ofter 00:00:00 key will change, hence breaking the function\n    if(parseInt(hr)===23 && parseInt(min)===59 && parseInt(sec)===58){\n        window.alert('The day is about to end, and a new day will begin, We will Save your progress so far');\n        yield put(submitDataStart())\n        setTimeout(function(){\n            \n    \n        }, 500); \n        window.location.reload(false);\n    }\n    else{\n    let originalTimeLocal=originalTime[key][GetDate()];\n    let seconds=GetTimeInSeconds();\n    yield put(startRemainder(seconds))\n    if(taskReducer.notification!==null){\n        notify(taskReducer.notification)\n    }\n    //updates the time of main timer as well as the tasks\n    if(countDownProgress){\n        if(lastUpdatedTime===null){\n            //console.log('in saga')\n            yield put(updateLastRunSec(seconds))\n            yield put(startCountDown(1))\n            \n            yield put(startTask(taskReducer.activeTask,1,originalTimeLocal))\n        }\n        else{\n            let timeDiff=seconds-lastUpdatedTime;\n            \n            yield put(updateLastRunSec(seconds))\n            yield put(startCountDown(timeDiff))\n            yield put(startTask(taskReducer.activeTask,timeDiff,originalTimeLocal))\n        }\n       \n    }\n    }\n}\n\nexport function* startTaskTime(){\n    yield takeEvery(TotalTimeType.UPDATE_COUNTDOWN, updateCountDown)\n}","import SubmitDataType from './SubmitData.type';\nimport {takeEvery,put,select} from 'redux-saga/effects';\nimport {startBreak} from '../breakButton/BreakButton.action'\nimport {submitDataInProgerss} from '../submitData/SubmitData.action'\nimport {removeAllTask,completeAll} from '../task/Task.action';\nimport {removeAllTime} from '../totalTime/TotalTime.action';\nfunction* startSubmitProcess(){\n\n    //console.log(1)\n    yield put(startBreak('releaseAll'));\n    //console.log(2)\n    yield put(completeAll())\n    const taskReducer=yield select(state=>state.TaskReducer.taskList)\n    const breakButtonReducer=yield select(state=>state.BreakButtonReducer)\n    const totalTimeReducer=yield select(state=>state.TotalTimeReducer)\n    yield put(submitDataInProgerss(taskReducer,breakButtonReducer,totalTimeReducer))\n    yield put(removeAllTask());\n    yield put(removeAllTime());\n}\n\n\nexport function* startSubmit(){\n    yield takeEvery(SubmitDataType.SUBMIT_ALL_DATA_START, startSubmitProcess);\n}","import {all,call} from 'redux-saga/effects';\nimport {startBreakSaga} from './breakButton/BreakButton.sagas';\nimport {startTask,pauseTask,completeTask,removeTask} from './task/Task.saga';\nimport {startTaskTime} from './totalTime/TotalTime.sagas';\nimport {startSubmit} from './submitData/SubmitData.saga';\n\nexport function* rootSaga(){\n    yield all([call(startBreakSaga),\n        call(startTask),\n        call(pauseTask),\n        call(completeTask),\n        call(removeTask),\n        call(startTaskTime),\n        call(startSubmit)    \n    ]);\n}","import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {persistStore} from 'redux-persist';\nimport {persistReducer1} from './root-reducer';\nimport {rootSaga} from './root-saga';\nconst sagaMiddleware=createSagaMiddleware();\n//const middleware=[logger,sagaMiddleware];\nconst middleware=[sagaMiddleware];\nexport const store=createStore(persistReducer1,applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor=persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react'\n//import Store from './redux/store';\nimport {store} from './redux/store';\nimport {persistor} from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}